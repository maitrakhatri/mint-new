'use strict';

var React = require('react');
var emStyled = require('@emotion/styled');
var react = require('@emotion/react');
var ReactDOM = require('react-dom');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);
var ReactDOM__namespace = /*#__PURE__*/_interopNamespaceDefault(ReactDOM);

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = "/*#F30000; */\n@keyframes mint-module_fill__pi-DC {\n  0% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px transparent, 78px 120px transparent, 72px 120px transparent, 90px 114px transparent, 84px 114px transparent, 78px 114px transparent, 72px 114px transparent, 66px 114px transparent, 96px 108px transparent, 90px 108px transparent, 84px 108px transparent, 78px 108px transparent, 72px 108px transparent, 66px 108px transparent, 60px 108px transparent, 102px 102px transparent, 96px 102px transparent, 90px 102px transparent, 78px 102px transparent, 84px 102px transparent, 72px 102px transparent, 66px 102px transparent, 60px 102px transparent, 54px 102px transparent, 102px 96px transparent, 90px 96px transparent, 96px 96px transparent, 84px 96px transparent, 54px 96px transparent, 60px 96px transparent, 66px 96px transparent, 72px 96px transparent, 78px 96px transparent, 108px 90px transparent, 102px 90px transparent, 96px 90px transparent, 90px 90px transparent, 84px 90px transparent, 78px 90px transparent, 72px 90px transparent, 66px 90px transparent, 60px 90px transparent, 54px 90px transparent, 48px 90px transparent, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px transparent;\n  }\n  10% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px transparent, 78px 120px transparent, 72px 120px transparent, 90px 114px transparent, 84px 114px transparent, 78px 114px transparent, 72px 114px transparent, 66px 114px transparent, 96px 108px transparent, 90px 108px transparent, 84px 108px transparent, 78px 108px transparent, 72px 108px transparent, 66px 108px transparent, 60px 108px transparent, 102px 102px transparent, 96px 102px transparent, 90px 102px transparent, 78px 102px transparent, 84px 102px transparent, 72px 102px transparent, 66px 102px transparent, 60px 102px transparent, 54px 102px transparent, 102px 96px transparent, 90px 96px transparent, 96px 96px transparent, 84px 96px transparent, 54px 96px transparent, 60px 96px transparent, 66px 96px transparent, 72px 96px transparent, 78px 96px transparent, 108px 90px transparent, 102px 90px transparent, 96px 90px transparent, 90px 90px transparent, 84px 90px transparent, 78px 90px transparent, 72px 90px transparent, 66px 90px transparent, 60px 90px transparent, 54px 90px transparent, 48px 90px transparent, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  20% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px transparent, 84px 114px transparent, 78px 114px transparent, 72px 114px transparent, 66px 114px transparent, 96px 108px transparent, 90px 108px transparent, 84px 108px transparent, 78px 108px transparent, 72px 108px transparent, 66px 108px transparent, 60px 108px transparent, 102px 102px transparent, 96px 102px transparent, 90px 102px transparent, 78px 102px transparent, 84px 102px transparent, 72px 102px transparent, 66px 102px transparent, 60px 102px transparent, 54px 102px transparent, 102px 96px transparent, 90px 96px transparent, 96px 96px transparent, 84px 96px transparent, 54px 96px transparent, 60px 96px transparent, 66px 96px transparent, 72px 96px transparent, 78px 96px transparent, 108px 90px transparent, 102px 90px transparent, 96px 90px transparent, 90px 90px transparent, 84px 90px transparent, 78px 90px transparent, 72px 90px transparent, 66px 90px transparent, 60px 90px transparent, 54px 90px transparent, 48px 90px transparent, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  30% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px transparent, 90px 108px transparent, 84px 108px transparent, 78px 108px transparent, 72px 108px transparent, 66px 108px transparent, 60px 108px transparent, 102px 102px transparent, 96px 102px transparent, 90px 102px transparent, 78px 102px transparent, 84px 102px transparent, 72px 102px transparent, 66px 102px transparent, 60px 102px transparent, 54px 102px transparent, 102px 96px transparent, 90px 96px transparent, 96px 96px transparent, 84px 96px transparent, 54px 96px transparent, 60px 96px transparent, 66px 96px transparent, 72px 96px transparent, 78px 96px transparent, 108px 90px transparent, 102px 90px transparent, 96px 90px transparent, 90px 90px transparent, 84px 90px transparent, 78px 90px transparent, 72px 90px transparent, 66px 90px transparent, 60px 90px transparent, 54px 90px transparent, 48px 90px transparent, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  40% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px red, 90px 108px red, 84px 108px red, 78px 108px red, 72px 108px red, 66px 108px red, 60px 108px red, 102px 102px transparent, 96px 102px transparent, 90px 102px transparent, 78px 102px transparent, 84px 102px transparent, 72px 102px transparent, 66px 102px transparent, 60px 102px transparent, 54px 102px transparent, 102px 96px transparent, 90px 96px transparent, 96px 96px transparent, 84px 96px transparent, 54px 96px transparent, 60px 96px transparent, 66px 96px transparent, 72px 96px transparent, 78px 96px transparent, 108px 90px transparent, 102px 90px transparent, 96px 90px transparent, 90px 90px transparent, 84px 90px transparent, 78px 90px transparent, 72px 90px transparent, 66px 90px transparent, 60px 90px transparent, 54px 90px transparent, 48px 90px transparent, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  50% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px red, 90px 108px red, 84px 108px red, 78px 108px red, 72px 108px red, 66px 108px red, 60px 108px red, 102px 102px red, 96px 102px red, 90px 102px red, 78px 102px red, 84px 102px red, 72px 102px red, 66px 102px red, 60px 102px red, 54px 102px red, 102px 96px transparent, 90px 96px transparent, 96px 96px transparent, 84px 96px transparent, 54px 96px transparent, 60px 96px transparent, 66px 96px transparent, 72px 96px transparent, 78px 96px transparent, 108px 90px transparent, 102px 90px transparent, 96px 90px transparent, 90px 90px transparent, 84px 90px transparent, 78px 90px transparent, 72px 90px transparent, 66px 90px transparent, 60px 90px transparent, 54px 90px transparent, 48px 90px transparent, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  60% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px red, 90px 108px red, 84px 108px red, 78px 108px red, 72px 108px red, 66px 108px red, 60px 108px red, 102px 102px red, 96px 102px red, 90px 102px red, 78px 102px red, 84px 102px red, 72px 102px red, 66px 102px red, 60px 102px red, 54px 102px red, 102px 96px red, 90px 96px red, 96px 96px red, 84px 96px red, 54px 96px red, 60px 96px red, 66px 96px red, 72px 96px red, 78px 96px red, 108px 90px transparent, 102px 90px transparent, 96px 90px transparent, 90px 90px transparent, 84px 90px transparent, 78px 90px transparent, 72px 90px transparent, 66px 90px transparent, 60px 90px transparent, 54px 90px transparent, 48px 90px transparent, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  70% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px red, 90px 108px red, 84px 108px red, 78px 108px red, 72px 108px red, 66px 108px red, 60px 108px red, 102px 102px red, 96px 102px red, 90px 102px red, 78px 102px red, 84px 102px red, 72px 102px red, 66px 102px red, 60px 102px red, 54px 102px red, 102px 96px red, 90px 96px red, 96px 96px red, 84px 96px red, 54px 96px red, 60px 96px red, 66px 96px red, 72px 96px red, 78px 96px red, 108px 90px red, 102px 90px red, 96px 90px red, 90px 90px red, 84px 90px red, 78px 90px red, 72px 90px red, 66px 90px red, 60px 90px red, 54px 90px red, 48px 90px red, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  80% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px red, 90px 108px red, 84px 108px red, 78px 108px red, 72px 108px red, 66px 108px red, 60px 108px red, 102px 102px red, 96px 102px red, 90px 102px red, 78px 102px red, 84px 102px red, 72px 102px red, 66px 102px red, 60px 102px red, 54px 102px red, 102px 96px red, 90px 96px red, 96px 96px red, 84px 96px red, 54px 96px red, 60px 96px red, 66px 96px red, 72px 96px red, 78px 96px red, 108px 90px red, 102px 90px red, 96px 90px red, 90px 90px red, 84px 90px red, 78px 90px red, 72px 90px red, 66px 90px red, 60px 90px red, 54px 90px red, 48px 90px red, 108px 84px red, 102px 84px red, 96px 84px red, 90px 84px red, 84px 84px red, 78px 84px red, 72px 84px red, 66px 84px red, 60px 84px red, 54px 84px red, 48px 84px red, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  90% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px red, 90px 108px red, 84px 108px red, 78px 108px red, 72px 108px red, 66px 108px red, 60px 108px red, 102px 102px red, 96px 102px red, 90px 102px red, 78px 102px red, 84px 102px red, 72px 102px red, 66px 102px red, 60px 102px red, 54px 102px red, 102px 96px red, 90px 96px red, 96px 96px red, 84px 96px red, 54px 96px red, 60px 96px red, 66px 96px red, 72px 96px red, 78px 96px red, 108px 90px red, 102px 90px red, 96px 90px red, 90px 90px red, 84px 90px red, 78px 90px red, 72px 90px red, 66px 90px red, 60px 90px red, 54px 90px red, 48px 90px red, 108px 84px red, 102px 84px red, 96px 84px red, 90px 84px red, 84px 84px red, 78px 84px red, 72px 84px red, 66px 84px red, 60px 84px red, 54px 84px red, 48px 84px red, 108px 78px red, 102px 78px red, 96px 78px red, 90px 78px red, 84px 78px red, 72px 78px red, 66px 78px red, 60px 78px red, 54px 78px red, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  95% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px red, 90px 108px red, 84px 108px red, 78px 108px red, 72px 108px red, 66px 108px red, 60px 108px red, 102px 102px red, 96px 102px red, 90px 102px red, 78px 102px red, 84px 102px red, 72px 102px red, 66px 102px red, 60px 102px red, 54px 102px red, 102px 96px red, 90px 96px red, 96px 96px red, 84px 96px red, 54px 96px red, 60px 96px red, 66px 96px red, 72px 96px red, 78px 96px red, 108px 90px red, 102px 90px red, 96px 90px red, 90px 90px red, 84px 90px red, 78px 90px red, 72px 90px red, 66px 90px red, 60px 90px red, 54px 90px red, 48px 90px red, 108px 84px red, 102px 84px red, 96px 84px red, 90px 84px red, 84px 84px red, 78px 84px red, 72px 84px red, 66px 84px red, 60px 84px red, 54px 84px red, 48px 84px red, 108px 78px red, 102px 78px red, 96px 78px red, 90px 78px red, 84px 78px red, 72px 78px red, 66px 78px red, 60px 78px red, 54px 78px red, 102px 72px red, 96px 72px red, 90px 72px red, 66px 72px red, 60px 72px red, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n  100% {\n    box-shadow: 54px 72px white, 48px 78px white, 84px 120px red, 78px 120px red, 72px 120px red, 90px 114px red, 84px 114px red, 78px 114px red, 72px 114px red, 66px 114px red, 96px 108px red, 90px 108px red, 84px 108px red, 78px 108px red, 72px 108px red, 66px 108px red, 60px 108px red, 102px 102px red, 96px 102px red, 90px 102px red, 78px 102px red, 84px 102px red, 72px 102px red, 66px 102px red, 60px 102px red, 54px 102px red, 102px 96px red, 90px 96px red, 96px 96px red, 84px 96px red, 54px 96px red, 60px 96px red, 66px 96px red, 72px 96px red, 78px 96px red, 108px 90px red, 102px 90px red, 96px 90px red, 90px 90px red, 84px 90px red, 78px 90px red, 72px 90px red, 66px 90px red, 60px 90px red, 54px 90px red, 48px 90px red, 108px 84px red, 102px 84px red, 96px 84px red, 90px 84px red, 84px 84px red, 78px 84px red, 72px 84px red, 66px 84px red, 60px 84px red, 54px 84px red, 48px 84px red, 108px 78px red, 102px 78px red, 96px 78px red, 90px 78px red, 84px 78px red, 72px 78px red, 66px 78px red, 60px 78px red, 54px 78px red, 102px 72px red, 96px 72px red, 90px 72px red, 66px 72px red, 60px 72px red, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px red;\n  }\n}\n.mint-module_frame__lP67s {\n  text-align: center;\n}\n\n.mint-module_heart__KJ-V2 {\n  display: inline-block;\n  width: 79px;\n  height: 74px;\n  position: relative;\n  transform: scale(0.5, 0.5);\n  cursor: pointer;\n}\n.mint-module_heart__KJ-V2::after {\n  content: \"\";\n  position: absolute;\n  top: -65px;\n  left: -42px;\n  width: 6px;\n  height: 6px;\n  background: transparent;\n  box-shadow: 54px 72px white, 48px 78px white, 84px 120px transparent, 78px 120px transparent, 72px 120px transparent, 90px 114px transparent, 84px 114px transparent, 78px 114px transparent, 72px 114px transparent, 66px 114px transparent, 96px 108px transparent, 90px 108px transparent, 84px 108px transparent, 78px 108px transparent, 72px 108px transparent, 66px 108px transparent, 60px 108px transparent, 102px 102px transparent, 96px 102px transparent, 90px 102px transparent, 78px 102px transparent, 84px 102px transparent, 72px 102px transparent, 66px 102px transparent, 60px 102px transparent, 54px 102px transparent, 102px 96px transparent, 90px 96px transparent, 96px 96px transparent, 84px 96px transparent, 54px 96px transparent, 60px 96px transparent, 66px 96px transparent, 72px 96px transparent, 78px 96px transparent, 108px 90px transparent, 102px 90px transparent, 96px 90px transparent, 90px 90px transparent, 84px 90px transparent, 78px 90px transparent, 72px 90px transparent, 66px 90px transparent, 60px 90px transparent, 54px 90px transparent, 48px 90px transparent, 108px 84px transparent, 102px 84px transparent, 96px 84px transparent, 90px 84px transparent, 84px 84px transparent, 78px 84px transparent, 72px 84px transparent, 66px 84px transparent, 60px 84px transparent, 54px 84px transparent, 48px 84px transparent, 108px 78px transparent, 102px 78px transparent, 96px 78px transparent, 90px 78px transparent, 84px 78px transparent, 72px 78px transparent, 66px 78px transparent, 60px 78px transparent, 54px 78px transparent, 102px 72px transparent, 96px 72px transparent, 90px 72px transparent, 66px 72px transparent, 60px 72px transparent, 78px 132px #000000, 84px 126px #000000, 90px 120px #000000, 96px 114px #000000, 102px 108px #000000, 108px 102px #000000, 108px 96px #000000, 114px 90px #000000, 114px 84px #000000, 114px 78px #000000, 108px 72px #000000, 102px 66px #000000, 90px 66px #000000, 96px 66px #000000, 84px 72px #000000, 78px 78px #000000, 72px 72px #000000, 66px 66px #000000, 60px 66px #000000, 54px 66px #000000, 48px 72px #000000, 42px 84px #000000, 42px 78px #000000, 42px 90px #000000, 48px 96px #000000, 48px 102px #000000, 54px 108px #000000, 60px 114px #000000, 66px 120px #000000, 72px 126px #000000, 78px 126px transparent;\n}\n.mint-module_heart__KJ-V2.mint-module_animate__kZ7wK::after {\n  animation: 6s mint-module_fill__pi-DC forwards;\n}\n\n#mint-module_confettie__FMxRq {\n  position: absolute;\n  z-index: 10;\n}";
var styles$1 = {"frame":"mint-module_frame__lP67s","heart":"mint-module_heart__KJ-V2","animate":"mint-module_animate__kZ7wK","fill":"mint-module_fill__pi-DC","confettie":"mint-module_confettie__FMxRq"};
styleInject(css_248z);

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

var classnames = {exports: {}};

/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/

(function (module) {
	/* global define */

	(function () {

		var hasOwn = {}.hasOwnProperty;

		function classNames() {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					if (arg.length) {
						var inner = classNames.apply(null, arg);
						if (inner) {
							classes.push(inner);
						}
					}
				} else if (argType === 'object') {
					if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
						classes.push(arg.toString());
						continue;
					}

					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else {
			window.classNames = classNames;
		}
	}()); 
} (classnames));

var classnamesExports = classnames.exports;
var clx = /*@__PURE__*/getDefaultExportFromCjs(classnamesExports);

const common = {
  black: '#000',
  white: '#fff'
};
var common$1 = common;

const red = {
  50: '#ffebee',
  100: '#ffcdd2',
  200: '#ef9a9a',
  300: '#e57373',
  400: '#ef5350',
  500: '#f44336',
  600: '#e53935',
  700: '#d32f2f',
  800: '#c62828',
  900: '#b71c1c',
  A100: '#ff8a80',
  A200: '#ff5252',
  A400: '#ff1744',
  A700: '#d50000'
};
var red$1 = red;

const purple = {
  50: '#f3e5f5',
  100: '#e1bee7',
  200: '#ce93d8',
  300: '#ba68c8',
  400: '#ab47bc',
  500: '#9c27b0',
  600: '#8e24aa',
  700: '#7b1fa2',
  800: '#6a1b9a',
  900: '#4a148c',
  A100: '#ea80fc',
  A200: '#e040fb',
  A400: '#d500f9',
  A700: '#aa00ff'
};
var purple$1 = purple;

const blue = {
  50: '#e3f2fd',
  100: '#bbdefb',
  200: '#90caf9',
  300: '#64b5f6',
  400: '#42a5f5',
  500: '#2196f3',
  600: '#1e88e5',
  700: '#1976d2',
  800: '#1565c0',
  900: '#0d47a1',
  A100: '#82b1ff',
  A200: '#448aff',
  A400: '#2979ff',
  A700: '#2962ff'
};
var blue$1 = blue;

const lightBlue = {
  50: '#e1f5fe',
  100: '#b3e5fc',
  200: '#81d4fa',
  300: '#4fc3f7',
  400: '#29b6f6',
  500: '#03a9f4',
  600: '#039be5',
  700: '#0288d1',
  800: '#0277bd',
  900: '#01579b',
  A100: '#80d8ff',
  A200: '#40c4ff',
  A400: '#00b0ff',
  A700: '#0091ea'
};
var lightBlue$1 = lightBlue;

const green = {
  50: '#e8f5e9',
  100: '#c8e6c9',
  200: '#a5d6a7',
  300: '#81c784',
  400: '#66bb6a',
  500: '#4caf50',
  600: '#43a047',
  700: '#388e3c',
  800: '#2e7d32',
  900: '#1b5e20',
  A100: '#b9f6ca',
  A200: '#69f0ae',
  A400: '#00e676',
  A700: '#00c853'
};
var green$1 = green;

const orange = {
  50: '#fff3e0',
  100: '#ffe0b2',
  200: '#ffcc80',
  300: '#ffb74d',
  400: '#ffa726',
  500: '#ff9800',
  600: '#fb8c00',
  700: '#f57c00',
  800: '#ef6c00',
  900: '#e65100',
  A100: '#ffd180',
  A200: '#ffab40',
  A400: '#ff9100',
  A700: '#ff6d00'
};
var orange$1 = orange;

const grey = {
  50: '#fafafa',
  100: '#f5f5f5',
  200: '#eeeeee',
  300: '#e0e0e0',
  400: '#bdbdbd',
  500: '#9e9e9e',
  600: '#757575',
  700: '#616161',
  800: '#424242',
  900: '#212121',
  A100: '#f5f5f5',
  A200: '#eeeeee',
  A400: '#bdbdbd',
  A700: '#616161'
};
var grey$1 = grey;

function chainPropTypes(propType1, propType2) {
  if (process.env.NODE_ENV === 'production') {
    return () => null;
  }
  return function validate(...args) {
    return propType1(...args) || propType2(...args);
  };
}

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

function isPlainObject(item) {
  return item !== null && typeof item === 'object' && item.constructor === Object;
}
function deepClone(source) {
  if (!isPlainObject(source)) {
    return source;
  }
  const output = {};
  Object.keys(source).forEach(key => {
    output[key] = deepClone(source[key]);
  });
  return output;
}
function deepmerge(target, source, options = {
  clone: true
}) {
  const output = options.clone ? _extends({}, target) : target;
  if (isPlainObject(target) && isPlainObject(source)) {
    Object.keys(source).forEach(key => {
      // Avoid prototype pollution
      if (key === '__proto__') {
        return;
      }
      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
        output[key] = deepmerge(target[key], source[key], options);
      } else if (options.clone) {
        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];
      } else {
        output[key] = source[key];
      }
    });
  }
  return output;
}

var propTypes = {exports: {}};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret_1;
var hasRequiredReactPropTypesSecret;

function requireReactPropTypesSecret () {
	if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1;
	hasRequiredReactPropTypesSecret = 1;

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	ReactPropTypesSecret_1 = ReactPropTypesSecret;
	return ReactPropTypesSecret_1;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var factoryWithThrowingShims;
var hasRequiredFactoryWithThrowingShims;

function requireFactoryWithThrowingShims () {
	if (hasRequiredFactoryWithThrowingShims) return factoryWithThrowingShims;
	hasRequiredFactoryWithThrowingShims = 1;

	var ReactPropTypesSecret = requireReactPropTypesSecret();

	function emptyFunction() {}
	function emptyFunctionWithReset() {}
	emptyFunctionWithReset.resetWarningCache = emptyFunction;

	factoryWithThrowingShims = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error(
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	    err.name = 'Invariant Violation';
	    throw err;
	  }	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  }	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bigint: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    elementType: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim,

	    checkPropTypes: emptyFunctionWithReset,
	    resetWarningCache: emptyFunction
	  };

	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};
	return factoryWithThrowingShims;
}

var reactIs$1 = {exports: {}};

var reactIs_development$1 = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactIs_development$1;

function requireReactIs_development$1 () {
	if (hasRequiredReactIs_development$1) return reactIs_development$1;
	hasRequiredReactIs_development$1 = 1;



	if (process.env.NODE_ENV !== "production") {
	  (function() {

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;
	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
	// (unstable) APIs that have been removed. Can we remove the symbols?

	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
	var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
	var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
	var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
	var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
	var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
	var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
	var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

	function isValidElementType(type) {
	  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
	}

	function typeOf(object) {
	  if (typeof object === 'object' && object !== null) {
	    var $$typeof = object.$$typeof;

	    switch ($$typeof) {
	      case REACT_ELEMENT_TYPE:
	        var type = object.type;

	        switch (type) {
	          case REACT_ASYNC_MODE_TYPE:
	          case REACT_CONCURRENT_MODE_TYPE:
	          case REACT_FRAGMENT_TYPE:
	          case REACT_PROFILER_TYPE:
	          case REACT_STRICT_MODE_TYPE:
	          case REACT_SUSPENSE_TYPE:
	            return type;

	          default:
	            var $$typeofType = type && type.$$typeof;

	            switch ($$typeofType) {
	              case REACT_CONTEXT_TYPE:
	              case REACT_FORWARD_REF_TYPE:
	              case REACT_LAZY_TYPE:
	              case REACT_MEMO_TYPE:
	              case REACT_PROVIDER_TYPE:
	                return $$typeofType;

	              default:
	                return $$typeof;
	            }

	        }

	      case REACT_PORTAL_TYPE:
	        return $$typeof;
	    }
	  }

	  return undefined;
	} // AsyncMode is deprecated along with isAsyncMode

	var AsyncMode = REACT_ASYNC_MODE_TYPE;
	var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
	var ContextConsumer = REACT_CONTEXT_TYPE;
	var ContextProvider = REACT_PROVIDER_TYPE;
	var Element = REACT_ELEMENT_TYPE;
	var ForwardRef = REACT_FORWARD_REF_TYPE;
	var Fragment = REACT_FRAGMENT_TYPE;
	var Lazy = REACT_LAZY_TYPE;
	var Memo = REACT_MEMO_TYPE;
	var Portal = REACT_PORTAL_TYPE;
	var Profiler = REACT_PROFILER_TYPE;
	var StrictMode = REACT_STRICT_MODE_TYPE;
	var Suspense = REACT_SUSPENSE_TYPE;
	var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

	function isAsyncMode(object) {
	  {
	    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
	      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

	      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
	    }
	  }

	  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
	}
	function isConcurrentMode(object) {
	  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
	}
	function isContextConsumer(object) {
	  return typeOf(object) === REACT_CONTEXT_TYPE;
	}
	function isContextProvider(object) {
	  return typeOf(object) === REACT_PROVIDER_TYPE;
	}
	function isElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}
	function isForwardRef(object) {
	  return typeOf(object) === REACT_FORWARD_REF_TYPE;
	}
	function isFragment(object) {
	  return typeOf(object) === REACT_FRAGMENT_TYPE;
	}
	function isLazy(object) {
	  return typeOf(object) === REACT_LAZY_TYPE;
	}
	function isMemo(object) {
	  return typeOf(object) === REACT_MEMO_TYPE;
	}
	function isPortal(object) {
	  return typeOf(object) === REACT_PORTAL_TYPE;
	}
	function isProfiler(object) {
	  return typeOf(object) === REACT_PROFILER_TYPE;
	}
	function isStrictMode(object) {
	  return typeOf(object) === REACT_STRICT_MODE_TYPE;
	}
	function isSuspense(object) {
	  return typeOf(object) === REACT_SUSPENSE_TYPE;
	}

	reactIs_development$1.AsyncMode = AsyncMode;
	reactIs_development$1.ConcurrentMode = ConcurrentMode;
	reactIs_development$1.ContextConsumer = ContextConsumer;
	reactIs_development$1.ContextProvider = ContextProvider;
	reactIs_development$1.Element = Element;
	reactIs_development$1.ForwardRef = ForwardRef;
	reactIs_development$1.Fragment = Fragment;
	reactIs_development$1.Lazy = Lazy;
	reactIs_development$1.Memo = Memo;
	reactIs_development$1.Portal = Portal;
	reactIs_development$1.Profiler = Profiler;
	reactIs_development$1.StrictMode = StrictMode;
	reactIs_development$1.Suspense = Suspense;
	reactIs_development$1.isAsyncMode = isAsyncMode;
	reactIs_development$1.isConcurrentMode = isConcurrentMode;
	reactIs_development$1.isContextConsumer = isContextConsumer;
	reactIs_development$1.isContextProvider = isContextProvider;
	reactIs_development$1.isElement = isElement;
	reactIs_development$1.isForwardRef = isForwardRef;
	reactIs_development$1.isFragment = isFragment;
	reactIs_development$1.isLazy = isLazy;
	reactIs_development$1.isMemo = isMemo;
	reactIs_development$1.isPortal = isPortal;
	reactIs_development$1.isProfiler = isProfiler;
	reactIs_development$1.isStrictMode = isStrictMode;
	reactIs_development$1.isSuspense = isSuspense;
	reactIs_development$1.isValidElementType = isValidElementType;
	reactIs_development$1.typeOf = typeOf;
	  })();
	}
	return reactIs_development$1;
}

var reactIs_production_min$1 = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactIs_production_min$1;

function requireReactIs_production_min$1 () {
	if (hasRequiredReactIs_production_min$1) return reactIs_production_min$1;
	hasRequiredReactIs_production_min$1 = 1;
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
	Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
	function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}reactIs_production_min$1.AsyncMode=l;reactIs_production_min$1.ConcurrentMode=m;reactIs_production_min$1.ContextConsumer=k;reactIs_production_min$1.ContextProvider=h;reactIs_production_min$1.Element=c;reactIs_production_min$1.ForwardRef=n;reactIs_production_min$1.Fragment=e;reactIs_production_min$1.Lazy=t;reactIs_production_min$1.Memo=r;reactIs_production_min$1.Portal=d;
	reactIs_production_min$1.Profiler=g;reactIs_production_min$1.StrictMode=f;reactIs_production_min$1.Suspense=p;reactIs_production_min$1.isAsyncMode=function(a){return A(a)||z(a)===l};reactIs_production_min$1.isConcurrentMode=A;reactIs_production_min$1.isContextConsumer=function(a){return z(a)===k};reactIs_production_min$1.isContextProvider=function(a){return z(a)===h};reactIs_production_min$1.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c};reactIs_production_min$1.isForwardRef=function(a){return z(a)===n};reactIs_production_min$1.isFragment=function(a){return z(a)===e};reactIs_production_min$1.isLazy=function(a){return z(a)===t};
	reactIs_production_min$1.isMemo=function(a){return z(a)===r};reactIs_production_min$1.isPortal=function(a){return z(a)===d};reactIs_production_min$1.isProfiler=function(a){return z(a)===g};reactIs_production_min$1.isStrictMode=function(a){return z(a)===f};reactIs_production_min$1.isSuspense=function(a){return z(a)===p};
	reactIs_production_min$1.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};reactIs_production_min$1.typeOf=z;
	return reactIs_production_min$1;
}

var hasRequiredReactIs;

function requireReactIs () {
	if (hasRequiredReactIs) return reactIs$1.exports;
	hasRequiredReactIs = 1;

	if (process.env.NODE_ENV === 'production') {
	  reactIs$1.exports = requireReactIs_production_min$1();
	} else {
	  reactIs$1.exports = requireReactIs_development$1();
	}
	return reactIs$1.exports;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

var objectAssign;
var hasRequiredObjectAssign;

function requireObjectAssign () {
	if (hasRequiredObjectAssign) return objectAssign;
	hasRequiredObjectAssign = 1;
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};
	return objectAssign;
}

var has;
var hasRequiredHas;

function requireHas () {
	if (hasRequiredHas) return has;
	hasRequiredHas = 1;
	has = Function.call.bind(Object.prototype.hasOwnProperty);
	return has;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var checkPropTypes_1;
var hasRequiredCheckPropTypes;

function requireCheckPropTypes () {
	if (hasRequiredCheckPropTypes) return checkPropTypes_1;
	hasRequiredCheckPropTypes = 1;

	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  var ReactPropTypesSecret = requireReactPropTypesSecret();
	  var loggedTypeFailures = {};
	  var has = requireHas();

	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) { /**/ }
	  };
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (has(typeSpecs, typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            var err = Error(
	              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
	              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +
	              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
	            );
	            err.name = 'Invariant Violation';
	            throw err;
	          }
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error && !(error instanceof Error)) {
	          printWarning(
	            (componentName || 'React class') + ': type specification of ' +
	            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
	            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
	            'You may have forgotten to pass an argument to the type checker ' +
	            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
	            'shape all require an argument).'
	          );
	        }
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          printWarning(
	            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
	          );
	        }
	      }
	    }
	  }
	}

	/**
	 * Resets warning cache when testing.
	 *
	 * @private
	 */
	checkPropTypes.resetWarningCache = function() {
	  if (process.env.NODE_ENV !== 'production') {
	    loggedTypeFailures = {};
	  }
	};

	checkPropTypes_1 = checkPropTypes;
	return checkPropTypes_1;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var factoryWithTypeCheckers;
var hasRequiredFactoryWithTypeCheckers;

function requireFactoryWithTypeCheckers () {
	if (hasRequiredFactoryWithTypeCheckers) return factoryWithTypeCheckers;
	hasRequiredFactoryWithTypeCheckers = 1;

	var ReactIs = requireReactIs();
	var assign = requireObjectAssign();

	var ReactPropTypesSecret = requireReactPropTypesSecret();
	var has = requireHas();
	var checkPropTypes = requireCheckPropTypes();

	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	function emptyFunctionThatReturnsNull() {
	  return null;
	}

	factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bigint: createPrimitiveTypeChecker('bigint'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    elementType: createElementTypeTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker,
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message, data) {
	    this.message = message;
	    this.data = data && typeof data === 'object' ? data: {};
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          var err = new Error(
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	          err.name = 'Invariant Violation';
	          throw err;
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            printWarning(
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError(
	          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),
	          {expectedType: expectedType}
	        );
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!ReactIs.isValidElementType(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (arguments.length > 1) {
	          printWarning(
	            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
	            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
	          );
	        } else {
	          printWarning('Invalid argument supplied to oneOf, expected an array.');
	        }
	      }
	      return emptyFunctionThatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
	        var type = getPreciseType(value);
	        if (type === 'symbol') {
	          return String(value);
	        }
	        return value;
	      });
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (has(propValue, key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunctionThatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        printWarning(
	          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
	          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
	        );
	        return emptyFunctionThatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var expectedTypes = [];
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
	        if (checkerResult == null) {
	          return null;
	        }
	        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
	          expectedTypes.push(checkerResult.data.expectedType);
	        }
	      }
	      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function invalidValidatorError(componentName, location, propFullName, key, type) {
	    return new PropTypeError(
	      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +
	      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'
	    );
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from props.
	      var allKeys = assign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (has(shapeTypes, key) && typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        if (!checker) {
	          return new PropTypeError(
	            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
	            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
	            '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')
	          );
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }

	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // falsy value can't be a Symbol
	    if (!propValue) {
	      return false;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};
	return factoryWithTypeCheckers;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = requireReactIs();

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes.exports = requireFactoryWithThrowingShims()();
}

var propTypesExports = propTypes.exports;
var PropTypes = /*@__PURE__*/getDefaultExportFromCjs(propTypesExports);

function isClassComponent(elementType) {
  // elementType.prototype?.isReactComponent
  const {
    prototype = {}
  } = elementType;
  return Boolean(prototype.isReactComponent);
}
function acceptingRef(props, propName, componentName, location, propFullName) {
  const element = props[propName];
  const safePropName = propFullName || propName;
  if (element == null ||
  // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window === 'undefined') {
    return null;
  }
  let warningHint;
  const elementType = element.type;
  /**
   * Blacklisting instead of whitelisting
   *
   * Blacklisting will miss some components, such as React.Fragment. Those will at least
   * trigger a warning in React.
   * We can't whitelist because there is no safe way to detect React.forwardRef
   * or class components. "Safe" means there's no public API.
   *
   */
  if (typeof elementType === 'function' && !isClassComponent(elementType)) {
    warningHint = 'Did you accidentally use a plain function component for an element instead?';
  }
  if (warningHint !== undefined) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. ` + `Expected an element that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');
  }
  return null;
}
const elementAcceptingRef = chainPropTypes(PropTypes.element, acceptingRef);
elementAcceptingRef.isRequired = chainPropTypes(PropTypes.element.isRequired, acceptingRef);
var elementAcceptingRef$1 = elementAcceptingRef;

// This module is based on https://github.com/airbnb/prop-types-exact repository.
// However, in order to reduce the number of dependencies and to remove some extra safe checks
// the module was forked.
const specialProperty = 'exact-prop: \u200b';
function exactProp(propTypes) {
  if (process.env.NODE_ENV === 'production') {
    return propTypes;
  }
  return _extends({}, propTypes, {
    [specialProperty]: props => {
      const unsupportedProps = Object.keys(props).filter(prop => !propTypes.hasOwnProperty(prop));
      if (unsupportedProps.length > 0) {
        return new Error(`The following props are not supported: ${unsupportedProps.map(prop => `\`${prop}\``).join(', ')}. Please remove them.`);
      }
      return null;
    }
  });
}

/**
 * WARNING: Don't import this directly.
 * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.
 * @param {number} code
 */
function formatMuiErrorMessage(code) {
  // Apply babel-plugin-transform-template-literals in loose mode
  // loose mode is safe iff we're concatenating primitives
  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose
  /* eslint-disable prefer-template */
  let url = 'https://mui.com/production-error/?code=' + code;
  for (let i = 1; i < arguments.length; i += 1) {
    // rest params over-transpile for this case
    // eslint-disable-next-line prefer-rest-params
    url += '&args[]=' + encodeURIComponent(arguments[i]);
  }
  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';
  /* eslint-enable prefer-template */
}

var reactIs = {exports: {}};

var reactIs_development = {};

/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactIs_development;

function requireReactIs_development () {
	if (hasRequiredReactIs_development) return reactIs_development;
	hasRequiredReactIs_development = 1;

	if (process.env.NODE_ENV !== "production") {
	  (function() {

	// ATTENTION
	// When adding new symbols to this file,
	// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
	// The Symbol used to tag the ReactElement-like types.
	var REACT_ELEMENT_TYPE = Symbol.for('react.element');
	var REACT_PORTAL_TYPE = Symbol.for('react.portal');
	var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
	var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
	var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
	var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
	var REACT_CONTEXT_TYPE = Symbol.for('react.context');
	var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
	var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
	var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
	var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
	var REACT_MEMO_TYPE = Symbol.for('react.memo');
	var REACT_LAZY_TYPE = Symbol.for('react.lazy');
	var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');

	// -----------------------------------------------------------------------------

	var enableScopeAPI = false; // Experimental Create Event Handle API.
	var enableCacheElement = false;
	var enableTransitionTracing = false; // No known bugs, but needs performance testing

	var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
	// stuff. Intended to enable React core members to more easily debug scheduling
	// issues in DEV builds.

	var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

	var REACT_MODULE_REFERENCE;

	{
	  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
	}

	function isValidElementType(type) {
	  if (typeof type === 'string' || typeof type === 'function') {
	    return true;
	  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


	  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
	    return true;
	  }

	  if (typeof type === 'object' && type !== null) {
	    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
	    // types supported by any Flight configuration anywhere since
	    // we don't know which Flight build this will end up being used
	    // with.
	    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
	      return true;
	    }
	  }

	  return false;
	}

	function typeOf(object) {
	  if (typeof object === 'object' && object !== null) {
	    var $$typeof = object.$$typeof;

	    switch ($$typeof) {
	      case REACT_ELEMENT_TYPE:
	        var type = object.type;

	        switch (type) {
	          case REACT_FRAGMENT_TYPE:
	          case REACT_PROFILER_TYPE:
	          case REACT_STRICT_MODE_TYPE:
	          case REACT_SUSPENSE_TYPE:
	          case REACT_SUSPENSE_LIST_TYPE:
	            return type;

	          default:
	            var $$typeofType = type && type.$$typeof;

	            switch ($$typeofType) {
	              case REACT_SERVER_CONTEXT_TYPE:
	              case REACT_CONTEXT_TYPE:
	              case REACT_FORWARD_REF_TYPE:
	              case REACT_LAZY_TYPE:
	              case REACT_MEMO_TYPE:
	              case REACT_PROVIDER_TYPE:
	                return $$typeofType;

	              default:
	                return $$typeof;
	            }

	        }

	      case REACT_PORTAL_TYPE:
	        return $$typeof;
	    }
	  }

	  return undefined;
	}
	var ContextConsumer = REACT_CONTEXT_TYPE;
	var ContextProvider = REACT_PROVIDER_TYPE;
	var Element = REACT_ELEMENT_TYPE;
	var ForwardRef = REACT_FORWARD_REF_TYPE;
	var Fragment = REACT_FRAGMENT_TYPE;
	var Lazy = REACT_LAZY_TYPE;
	var Memo = REACT_MEMO_TYPE;
	var Portal = REACT_PORTAL_TYPE;
	var Profiler = REACT_PROFILER_TYPE;
	var StrictMode = REACT_STRICT_MODE_TYPE;
	var Suspense = REACT_SUSPENSE_TYPE;
	var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
	var hasWarnedAboutDeprecatedIsAsyncMode = false;
	var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated

	function isAsyncMode(object) {
	  {
	    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
	      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

	      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
	    }
	  }

	  return false;
	}
	function isConcurrentMode(object) {
	  {
	    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
	      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint

	      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
	    }
	  }

	  return false;
	}
	function isContextConsumer(object) {
	  return typeOf(object) === REACT_CONTEXT_TYPE;
	}
	function isContextProvider(object) {
	  return typeOf(object) === REACT_PROVIDER_TYPE;
	}
	function isElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}
	function isForwardRef(object) {
	  return typeOf(object) === REACT_FORWARD_REF_TYPE;
	}
	function isFragment(object) {
	  return typeOf(object) === REACT_FRAGMENT_TYPE;
	}
	function isLazy(object) {
	  return typeOf(object) === REACT_LAZY_TYPE;
	}
	function isMemo(object) {
	  return typeOf(object) === REACT_MEMO_TYPE;
	}
	function isPortal(object) {
	  return typeOf(object) === REACT_PORTAL_TYPE;
	}
	function isProfiler(object) {
	  return typeOf(object) === REACT_PROFILER_TYPE;
	}
	function isStrictMode(object) {
	  return typeOf(object) === REACT_STRICT_MODE_TYPE;
	}
	function isSuspense(object) {
	  return typeOf(object) === REACT_SUSPENSE_TYPE;
	}
	function isSuspenseList(object) {
	  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
	}

	reactIs_development.ContextConsumer = ContextConsumer;
	reactIs_development.ContextProvider = ContextProvider;
	reactIs_development.Element = Element;
	reactIs_development.ForwardRef = ForwardRef;
	reactIs_development.Fragment = Fragment;
	reactIs_development.Lazy = Lazy;
	reactIs_development.Memo = Memo;
	reactIs_development.Portal = Portal;
	reactIs_development.Profiler = Profiler;
	reactIs_development.StrictMode = StrictMode;
	reactIs_development.Suspense = Suspense;
	reactIs_development.SuspenseList = SuspenseList;
	reactIs_development.isAsyncMode = isAsyncMode;
	reactIs_development.isConcurrentMode = isConcurrentMode;
	reactIs_development.isContextConsumer = isContextConsumer;
	reactIs_development.isContextProvider = isContextProvider;
	reactIs_development.isElement = isElement;
	reactIs_development.isForwardRef = isForwardRef;
	reactIs_development.isFragment = isFragment;
	reactIs_development.isLazy = isLazy;
	reactIs_development.isMemo = isMemo;
	reactIs_development.isPortal = isPortal;
	reactIs_development.isProfiler = isProfiler;
	reactIs_development.isStrictMode = isStrictMode;
	reactIs_development.isSuspense = isSuspense;
	reactIs_development.isSuspenseList = isSuspenseList;
	reactIs_development.isValidElementType = isValidElementType;
	reactIs_development.typeOf = typeOf;
	  })();
	}
	return reactIs_development;
}

var reactIs_production_min = {};

/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactIs_production_min;

function requireReactIs_production_min () {
	if (hasRequiredReactIs_production_min) return reactIs_production_min;
	hasRequiredReactIs_production_min = 1;
var b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),h=Symbol.for("react.context"),k=Symbol.for("react.server_context"),l=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen"),u;u=Symbol.for("react.module.reference");
	function v(a){if("object"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}reactIs_production_min.ContextConsumer=h;reactIs_production_min.ContextProvider=g;reactIs_production_min.Element=b;reactIs_production_min.ForwardRef=l;reactIs_production_min.Fragment=d;reactIs_production_min.Lazy=q;reactIs_production_min.Memo=p;reactIs_production_min.Portal=c;reactIs_production_min.Profiler=f;reactIs_production_min.StrictMode=e;reactIs_production_min.Suspense=m;
	reactIs_production_min.SuspenseList=n;reactIs_production_min.isAsyncMode=function(){return !1};reactIs_production_min.isConcurrentMode=function(){return !1};reactIs_production_min.isContextConsumer=function(a){return v(a)===h};reactIs_production_min.isContextProvider=function(a){return v(a)===g};reactIs_production_min.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===b};reactIs_production_min.isForwardRef=function(a){return v(a)===l};reactIs_production_min.isFragment=function(a){return v(a)===d};reactIs_production_min.isLazy=function(a){return v(a)===q};reactIs_production_min.isMemo=function(a){return v(a)===p};
	reactIs_production_min.isPortal=function(a){return v(a)===c};reactIs_production_min.isProfiler=function(a){return v(a)===f};reactIs_production_min.isStrictMode=function(a){return v(a)===e};reactIs_production_min.isSuspense=function(a){return v(a)===m};reactIs_production_min.isSuspenseList=function(a){return v(a)===n};
	reactIs_production_min.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||"object"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};reactIs_production_min.typeOf=v;
	return reactIs_production_min;
}

if (process.env.NODE_ENV === 'production') {
  reactIs.exports = requireReactIs_production_min();
} else {
  reactIs.exports = requireReactIs_development();
}

var reactIsExports = reactIs.exports;

// Simplified polyfill for IE11 support
// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3
const fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function getFunctionName(fn) {
  const match = `${fn}`.match(fnNameMatchRegex);
  const name = match && match[1];
  return name || '';
}
function getFunctionComponentName(Component, fallback = '') {
  return Component.displayName || Component.name || getFunctionName(Component) || fallback;
}
function getWrappedName(outerType, innerType, wrapperName) {
  const functionName = getFunctionComponentName(innerType);
  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);
}

/**
 * cherry-pick from
 * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js
 * originally forked from recompose/getDisplayName with added IE11 support
 */
function getDisplayName(Component) {
  if (Component == null) {
    return undefined;
  }
  if (typeof Component === 'string') {
    return Component;
  }
  if (typeof Component === 'function') {
    return getFunctionComponentName(Component, 'Component');
  }

  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`
  if (typeof Component === 'object') {
    switch (Component.$$typeof) {
      case reactIsExports.ForwardRef:
        return getWrappedName(Component, Component.render, 'ForwardRef');
      case reactIsExports.Memo:
        return getWrappedName(Component, Component.type, 'memo');
      default:
        return undefined;
    }
  }
  return undefined;
}

function HTMLElementType(props, propName, componentName, location, propFullName) {
  if (process.env.NODE_ENV === 'production') {
    return null;
  }
  const propValue = props[propName];
  const safePropName = propFullName || propName;
  if (propValue == null) {
    return null;
  }
  if (propValue && propValue.nodeType !== 1) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. ` + `Expected an HTMLElement.`);
  }
  return null;
}

const refType = PropTypes.oneOfType([PropTypes.func, PropTypes.object]);
var refType$1 = refType;

// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
//
// A strict capitalization should uppercase the first letter of each word in the sentence.
// We only handle the first word.
function capitalize(string) {
  if (typeof string !== 'string') {
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: \`capitalize(string)\` expects a string argument.` : formatMuiErrorMessage(7));
  }
  return string.charAt(0).toUpperCase() + string.slice(1);
}

function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

/**
 * TODO v5: consider making it private
 *
 * passes {value} to {ref}
 *
 * WARNING: Be sure to only call this inside a callback that is passed as a ref.
 * Otherwise, make sure to cleanup the previous {ref} if it changes. See
 * https://github.com/mui/material-ui/issues/13539
 *
 * Useful if you want to expose the ref of an inner component to the public API
 * while still using it inside the component.
 * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
 */
function setRef(ref, value) {
  if (typeof ref === 'function') {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}

/**
 * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.
 * This is useful for effects that are only needed for client-side rendering but not for SSR.
 *
 * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85
 * and confirm it doesn't apply to your use-case.
 */
const useEnhancedEffect = typeof window !== 'undefined' ? React__namespace.useLayoutEffect : React__namespace.useEffect;
var useEnhancedEffect$1 = useEnhancedEffect;

let globalId = 0;
function useGlobalId(idOverride) {
  const [defaultId, setDefaultId] = React__namespace.useState(idOverride);
  const id = idOverride || defaultId;
  React__namespace.useEffect(() => {
    if (defaultId == null) {
      // Fallback to this default id when possible.
      // Use the incrementing value for client-side rendering only.
      // We can't use it server-side.
      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem
      globalId += 1;
      setDefaultId(`mui-${globalId}`);
    }
  }, [defaultId]);
  return id;
}

// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814
const maybeReactUseId = React__namespace['useId'.toString()];
/**
 *
 * @example <div id={useId()} />
 * @param idOverride
 * @returns {string}
 */
function useId(idOverride) {
  if (maybeReactUseId !== undefined) {
    const reactId = maybeReactUseId();
    return idOverride != null ? idOverride : reactId;
  }
  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.
  return useGlobalId(idOverride);
}

function useControlled({
  controlled,
  default: defaultProp,
  name,
  state = 'value'
}) {
  // isControlled is ignored in the hook dependency lists as it should never change.
  const {
    current: isControlled
  } = React__namespace.useRef(controlled !== undefined);
  const [valueState, setValue] = React__namespace.useState(defaultProp);
  const value = isControlled ? controlled : valueState;
  if (process.env.NODE_ENV !== 'production') {
    React__namespace.useEffect(() => {
      if (isControlled !== (controlled !== undefined)) {
        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", 'More info: https://fb.me/react-controlled-components'].join('\n'));
      }
    }, [state, name, controlled]);
    const {
      current: defaultValue
    } = React__namespace.useRef(defaultProp);
    React__namespace.useEffect(() => {
      if (!isControlled && defaultValue !== defaultProp) {
        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\n'));
      }
    }, [JSON.stringify(defaultProp)]);
  }
  const setValueIfUncontrolled = React__namespace.useCallback(newValue => {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}

/**
 * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892
 * See RFC in https://github.com/reactjs/rfcs/pull/220
 */

function useEventCallback(fn) {
  const ref = React__namespace.useRef(fn);
  useEnhancedEffect$1(() => {
    ref.current = fn;
  });
  return React__namespace.useRef((...args) =>
  // @ts-expect-error hide `this`
  // tslint:disable-next-line:ban-comma-operator
  (0, ref.current)(...args)).current;
}

function useForkRef(...refs) {
  /**
   * This will create a new function if the refs passed to this hook change and are all defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior.
   */
  return React__namespace.useMemo(() => {
    if (refs.every(ref => ref == null)) {
      return null;
    }
    return instance => {
      refs.forEach(ref => {
        setRef(ref, instance);
      });
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, refs);
}

let hadKeyboardEvent = true;
let hadFocusVisibleRecently = false;
let hadFocusVisibleRecentlyTimeout;
const inputTypesWhitelist = {
  text: true,
  search: true,
  url: true,
  tel: true,
  email: true,
  password: true,
  number: true,
  date: true,
  month: true,
  week: true,
  time: true,
  datetime: true,
  'datetime-local': true
};

/**
 * Computes whether the given element should automatically trigger the
 * `focus-visible` class being added, i.e. whether it should always match
 * `:focus-visible` when focused.
 * @param {Element} node
 * @returns {boolean}
 */
function focusTriggersKeyboardModality(node) {
  const {
    type,
    tagName
  } = node;
  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {
    return true;
  }
  if (tagName === 'TEXTAREA' && !node.readOnly) {
    return true;
  }
  if (node.isContentEditable) {
    return true;
  }
  return false;
}

/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */
function handleKeyDown(event) {
  if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
  }
  hadKeyboardEvent = true;
}

/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */
function handlePointerDown() {
  hadKeyboardEvent = false;
}
function handleVisibilityChange() {
  if (this.visibilityState === 'hidden') {
    // If the tab becomes active again, the browser will handle calling focus
    // on the element (Safari actually calls it twice).
    // If this tab change caused a blur on an element with focus-visible,
    // re-apply the class when the user switches back to the tab.
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}
function prepare(doc) {
  doc.addEventListener('keydown', handleKeyDown, true);
  doc.addEventListener('mousedown', handlePointerDown, true);
  doc.addEventListener('pointerdown', handlePointerDown, true);
  doc.addEventListener('touchstart', handlePointerDown, true);
  doc.addEventListener('visibilitychange', handleVisibilityChange, true);
}
function isFocusVisible(event) {
  const {
    target
  } = event;
  try {
    return target.matches(':focus-visible');
  } catch (error) {
    // Browsers not implementing :focus-visible will throw a SyntaxError.
    // We use our own heuristic for those browsers.
    // Rethrow might be better if it's not the expected error but do we really
    // want to crash if focus-visible malfunctioned?
  }

  // No need for validFocusTarget check. The user does that by attaching it to
  // focusable events only.
  return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}
function useIsFocusVisible() {
  const ref = React__namespace.useCallback(node => {
    if (node != null) {
      prepare(node.ownerDocument);
    }
  }, []);
  const isFocusVisibleRef = React__namespace.useRef(false);

  /**
   * Should be called if a blur event is fired
   */
  function handleBlurVisible() {
    // checking against potential state variable does not suffice if we focus and blur synchronously.
    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.
    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.
    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751
    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).
    if (isFocusVisibleRef.current) {
      // To detect a tab/window switch, we look for a blur event followed
      // rapidly by a visibility change.
      // If we don't see a visibility change within 100ms, it's probably a
      // regular focus change.
      hadFocusVisibleRecently = true;
      window.clearTimeout(hadFocusVisibleRecentlyTimeout);
      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
        hadFocusVisibleRecently = false;
      }, 100);
      isFocusVisibleRef.current = false;
      return true;
    }
    return false;
  }

  /**
   * Should be called if a blur event is fired
   */
  function handleFocusVisible(event) {
    if (isFocusVisible(event)) {
      isFocusVisibleRef.current = true;
      return true;
    }
    return false;
  }
  return {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref
  };
}

/**
 * Add keys, values of `defaultProps` that does not exist in `props`
 * @param {object} defaultProps
 * @param {object} props
 * @returns {object} resolved props
 */
function resolveProps(defaultProps, props) {
  const output = _extends({}, props);
  Object.keys(defaultProps).forEach(propName => {
    if (propName.toString().match(/^(components|slots)$/)) {
      output[propName] = _extends({}, defaultProps[propName], output[propName]);
    } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {
      const defaultSlotProps = defaultProps[propName] || {};
      const slotProps = props[propName];
      output[propName] = {};
      if (!slotProps || !Object.keys(slotProps)) {
        // Reduce the iteration if the slot props is empty
        output[propName] = defaultSlotProps;
      } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {
        // Reduce the iteration if the default slot props is empty
        output[propName] = slotProps;
      } else {
        output[propName] = _extends({}, slotProps);
        Object.keys(defaultSlotProps).forEach(slotPropName => {
          output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);
        });
      }
    } else if (output[propName] === undefined) {
      output[propName] = defaultProps[propName];
    }
  });
  return output;
}

function composeClasses(slots, getUtilityClass, classes = undefined) {
  const output = {};
  Object.keys(slots).forEach(
  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
  slot => {
    output[slot] = slots[slot].reduce((acc, key) => {
      if (key) {
        const utilityClass = getUtilityClass(key);
        if (utilityClass !== '') {
          acc.push(utilityClass);
        }
        if (classes && classes[key]) {
          acc.push(classes[key]);
        }
      }
      return acc;
    }, []).join(' ');
  });
  return output;
}

const defaultGenerator = componentName => componentName;
const createClassNameGenerator = () => {
  let generate = defaultGenerator;
  return {
    configure(generator) {
      generate = generator;
    },
    generate(componentName) {
      return generate(componentName);
    },
    reset() {
      generate = defaultGenerator;
    }
  };
};
const ClassNameGenerator = createClassNameGenerator();
var ClassNameGenerator$1 = ClassNameGenerator;

// If GlobalStateSlot is changed, GLOBAL_STATE_CLASSES in
// \packages\api-docs-builder\utils\parseSlotsAndClasses.ts must be updated accordingly.
const globalStateClassesMapping = {
  active: 'active',
  checked: 'checked',
  completed: 'completed',
  disabled: 'disabled',
  error: 'error',
  expanded: 'expanded',
  focused: 'focused',
  focusVisible: 'focusVisible',
  open: 'open',
  readOnly: 'readOnly',
  required: 'required',
  selected: 'selected'
};
function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {
  const globalStateClass = globalStateClassesMapping[slot];
  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator$1.generate(componentName)}-${slot}`;
}

function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {
  const result = {};
  slots.forEach(slot => {
    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);
  });
  return result;
}

var THEME_ID = '$$material';

function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

var jsxRuntime = {exports: {}};

var reactJsxRuntime_development = {};

/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactJsxRuntime_development;

function requireReactJsxRuntime_development () {
	if (hasRequiredReactJsxRuntime_development) return reactJsxRuntime_development;
	hasRequiredReactJsxRuntime_development = 1;

	if (process.env.NODE_ENV !== "production") {
	  (function() {

	var React$1 = React;

	// ATTENTION
	// When adding new symbols to this file,
	// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
	// The Symbol used to tag the ReactElement-like types.
	var REACT_ELEMENT_TYPE = Symbol.for('react.element');
	var REACT_PORTAL_TYPE = Symbol.for('react.portal');
	var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
	var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
	var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
	var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
	var REACT_CONTEXT_TYPE = Symbol.for('react.context');
	var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
	var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
	var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
	var REACT_MEMO_TYPE = Symbol.for('react.memo');
	var REACT_LAZY_TYPE = Symbol.for('react.lazy');
	var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
	var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator';
	function getIteratorFn(maybeIterable) {
	  if (maybeIterable === null || typeof maybeIterable !== 'object') {
	    return null;
	  }

	  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

	  if (typeof maybeIterator === 'function') {
	    return maybeIterator;
	  }

	  return null;
	}

	var ReactSharedInternals = React$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

	function error(format) {
	  {
	    {
	      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        args[_key2 - 1] = arguments[_key2];
	      }

	      printWarning('error', format, args);
	    }
	  }
	}

	function printWarning(level, format, args) {
	  // When changing this logic, you might want to also
	  // update consoleWithStackDev.www.js as well.
	  {
	    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
	    var stack = ReactDebugCurrentFrame.getStackAddendum();

	    if (stack !== '') {
	      format += '%s';
	      args = args.concat([stack]);
	    } // eslint-disable-next-line react-internal/safe-string-coercion


	    var argsWithFormat = args.map(function (item) {
	      return String(item);
	    }); // Careful: RN currently depends on this prefix

	    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
	    // breaks IE9: https://github.com/facebook/react/issues/13610
	    // eslint-disable-next-line react-internal/no-production-logging

	    Function.prototype.apply.call(console[level], console, argsWithFormat);
	  }
	}

	// -----------------------------------------------------------------------------

	var enableScopeAPI = false; // Experimental Create Event Handle API.
	var enableCacheElement = false;
	var enableTransitionTracing = false; // No known bugs, but needs performance testing

	var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
	// stuff. Intended to enable React core members to more easily debug scheduling
	// issues in DEV builds.

	var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

	var REACT_MODULE_REFERENCE;

	{
	  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
	}

	function isValidElementType(type) {
	  if (typeof type === 'string' || typeof type === 'function') {
	    return true;
	  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


	  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
	    return true;
	  }

	  if (typeof type === 'object' && type !== null) {
	    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
	    // types supported by any Flight configuration anywhere since
	    // we don't know which Flight build this will end up being used
	    // with.
	    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
	      return true;
	    }
	  }

	  return false;
	}

	function getWrappedName(outerType, innerType, wrapperName) {
	  var displayName = outerType.displayName;

	  if (displayName) {
	    return displayName;
	  }

	  var functionName = innerType.displayName || innerType.name || '';
	  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
	} // Keep in sync with react-reconciler/getComponentNameFromFiber


	function getContextName(type) {
	  return type.displayName || 'Context';
	} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


	function getComponentNameFromType(type) {
	  if (type == null) {
	    // Host root, text node or just invalid type.
	    return null;
	  }

	  {
	    if (typeof type.tag === 'number') {
	      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
	    }
	  }

	  if (typeof type === 'function') {
	    return type.displayName || type.name || null;
	  }

	  if (typeof type === 'string') {
	    return type;
	  }

	  switch (type) {
	    case REACT_FRAGMENT_TYPE:
	      return 'Fragment';

	    case REACT_PORTAL_TYPE:
	      return 'Portal';

	    case REACT_PROFILER_TYPE:
	      return 'Profiler';

	    case REACT_STRICT_MODE_TYPE:
	      return 'StrictMode';

	    case REACT_SUSPENSE_TYPE:
	      return 'Suspense';

	    case REACT_SUSPENSE_LIST_TYPE:
	      return 'SuspenseList';

	  }

	  if (typeof type === 'object') {
	    switch (type.$$typeof) {
	      case REACT_CONTEXT_TYPE:
	        var context = type;
	        return getContextName(context) + '.Consumer';

	      case REACT_PROVIDER_TYPE:
	        var provider = type;
	        return getContextName(provider._context) + '.Provider';

	      case REACT_FORWARD_REF_TYPE:
	        return getWrappedName(type, type.render, 'ForwardRef');

	      case REACT_MEMO_TYPE:
	        var outerName = type.displayName || null;

	        if (outerName !== null) {
	          return outerName;
	        }

	        return getComponentNameFromType(type.type) || 'Memo';

	      case REACT_LAZY_TYPE:
	        {
	          var lazyComponent = type;
	          var payload = lazyComponent._payload;
	          var init = lazyComponent._init;

	          try {
	            return getComponentNameFromType(init(payload));
	          } catch (x) {
	            return null;
	          }
	        }

	      // eslint-disable-next-line no-fallthrough
	    }
	  }

	  return null;
	}

	var assign = Object.assign;

	// Helpers to patch console.logs to avoid logging during side-effect free
	// replaying on render function. This currently only patches the object
	// lazily which won't cover if the log function was extracted eagerly.
	// We could also eagerly patch the method.
	var disabledDepth = 0;
	var prevLog;
	var prevInfo;
	var prevWarn;
	var prevError;
	var prevGroup;
	var prevGroupCollapsed;
	var prevGroupEnd;

	function disabledLog() {}

	disabledLog.__reactDisabledLog = true;
	function disableLogs() {
	  {
	    if (disabledDepth === 0) {
	      /* eslint-disable react-internal/no-production-logging */
	      prevLog = console.log;
	      prevInfo = console.info;
	      prevWarn = console.warn;
	      prevError = console.error;
	      prevGroup = console.group;
	      prevGroupCollapsed = console.groupCollapsed;
	      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

	      var props = {
	        configurable: true,
	        enumerable: true,
	        value: disabledLog,
	        writable: true
	      }; // $FlowFixMe Flow thinks console is immutable.

	      Object.defineProperties(console, {
	        info: props,
	        log: props,
	        warn: props,
	        error: props,
	        group: props,
	        groupCollapsed: props,
	        groupEnd: props
	      });
	      /* eslint-enable react-internal/no-production-logging */
	    }

	    disabledDepth++;
	  }
	}
	function reenableLogs() {
	  {
	    disabledDepth--;

	    if (disabledDepth === 0) {
	      /* eslint-disable react-internal/no-production-logging */
	      var props = {
	        configurable: true,
	        enumerable: true,
	        writable: true
	      }; // $FlowFixMe Flow thinks console is immutable.

	      Object.defineProperties(console, {
	        log: assign({}, props, {
	          value: prevLog
	        }),
	        info: assign({}, props, {
	          value: prevInfo
	        }),
	        warn: assign({}, props, {
	          value: prevWarn
	        }),
	        error: assign({}, props, {
	          value: prevError
	        }),
	        group: assign({}, props, {
	          value: prevGroup
	        }),
	        groupCollapsed: assign({}, props, {
	          value: prevGroupCollapsed
	        }),
	        groupEnd: assign({}, props, {
	          value: prevGroupEnd
	        })
	      });
	      /* eslint-enable react-internal/no-production-logging */
	    }

	    if (disabledDepth < 0) {
	      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
	    }
	  }
	}

	var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
	var prefix;
	function describeBuiltInComponentFrame(name, source, ownerFn) {
	  {
	    if (prefix === undefined) {
	      // Extract the VM specific prefix used by each line.
	      try {
	        throw Error();
	      } catch (x) {
	        var match = x.stack.trim().match(/\n( *(at )?)/);
	        prefix = match && match[1] || '';
	      }
	    } // We use the prefix to ensure our stacks line up with native stack frames.


	    return '\n' + prefix + name;
	  }
	}
	var reentry = false;
	var componentFrameCache;

	{
	  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
	  componentFrameCache = new PossiblyWeakMap();
	}

	function describeNativeComponentFrame(fn, construct) {
	  // If something asked for a stack inside a fake render, it should get ignored.
	  if ( !fn || reentry) {
	    return '';
	  }

	  {
	    var frame = componentFrameCache.get(fn);

	    if (frame !== undefined) {
	      return frame;
	    }
	  }

	  var control;
	  reentry = true;
	  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

	  Error.prepareStackTrace = undefined;
	  var previousDispatcher;

	  {
	    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
	    // for warnings.

	    ReactCurrentDispatcher.current = null;
	    disableLogs();
	  }

	  try {
	    // This should throw.
	    if (construct) {
	      // Something should be setting the props in the constructor.
	      var Fake = function () {
	        throw Error();
	      }; // $FlowFixMe


	      Object.defineProperty(Fake.prototype, 'props', {
	        set: function () {
	          // We use a throwing setter instead of frozen or non-writable props
	          // because that won't throw in a non-strict mode function.
	          throw Error();
	        }
	      });

	      if (typeof Reflect === 'object' && Reflect.construct) {
	        // We construct a different control for this case to include any extra
	        // frames added by the construct call.
	        try {
	          Reflect.construct(Fake, []);
	        } catch (x) {
	          control = x;
	        }

	        Reflect.construct(fn, [], Fake);
	      } else {
	        try {
	          Fake.call();
	        } catch (x) {
	          control = x;
	        }

	        fn.call(Fake.prototype);
	      }
	    } else {
	      try {
	        throw Error();
	      } catch (x) {
	        control = x;
	      }

	      fn();
	    }
	  } catch (sample) {
	    // This is inlined manually because closure doesn't do it for us.
	    if (sample && control && typeof sample.stack === 'string') {
	      // This extracts the first frame from the sample that isn't also in the control.
	      // Skipping one frame that we assume is the frame that calls the two.
	      var sampleLines = sample.stack.split('\n');
	      var controlLines = control.stack.split('\n');
	      var s = sampleLines.length - 1;
	      var c = controlLines.length - 1;

	      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
	        // We expect at least one stack frame to be shared.
	        // Typically this will be the root most one. However, stack frames may be
	        // cut off due to maximum stack limits. In this case, one maybe cut off
	        // earlier than the other. We assume that the sample is longer or the same
	        // and there for cut off earlier. So we should find the root most frame in
	        // the sample somewhere in the control.
	        c--;
	      }

	      for (; s >= 1 && c >= 0; s--, c--) {
	        // Next we find the first one that isn't the same which should be the
	        // frame that called our sample function and the control.
	        if (sampleLines[s] !== controlLines[c]) {
	          // In V8, the first line is describing the message but other VMs don't.
	          // If we're about to return the first line, and the control is also on the same
	          // line, that's a pretty good indicator that our sample threw at same line as
	          // the control. I.e. before we entered the sample frame. So we ignore this result.
	          // This can happen if you passed a class to function component, or non-function.
	          if (s !== 1 || c !== 1) {
	            do {
	              s--;
	              c--; // We may still have similar intermediate frames from the construct call.
	              // The next one that isn't the same should be our match though.

	              if (c < 0 || sampleLines[s] !== controlLines[c]) {
	                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
	                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
	                // but we have a user-provided "displayName"
	                // splice it in to make the stack more readable.


	                if (fn.displayName && _frame.includes('<anonymous>')) {
	                  _frame = _frame.replace('<anonymous>', fn.displayName);
	                }

	                {
	                  if (typeof fn === 'function') {
	                    componentFrameCache.set(fn, _frame);
	                  }
	                } // Return the line we found.


	                return _frame;
	              }
	            } while (s >= 1 && c >= 0);
	          }

	          break;
	        }
	      }
	    }
	  } finally {
	    reentry = false;

	    {
	      ReactCurrentDispatcher.current = previousDispatcher;
	      reenableLogs();
	    }

	    Error.prepareStackTrace = previousPrepareStackTrace;
	  } // Fallback to just using the name if we couldn't make it throw.


	  var name = fn ? fn.displayName || fn.name : '';
	  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

	  {
	    if (typeof fn === 'function') {
	      componentFrameCache.set(fn, syntheticFrame);
	    }
	  }

	  return syntheticFrame;
	}
	function describeFunctionComponentFrame(fn, source, ownerFn) {
	  {
	    return describeNativeComponentFrame(fn, false);
	  }
	}

	function shouldConstruct(Component) {
	  var prototype = Component.prototype;
	  return !!(prototype && prototype.isReactComponent);
	}

	function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

	  if (type == null) {
	    return '';
	  }

	  if (typeof type === 'function') {
	    {
	      return describeNativeComponentFrame(type, shouldConstruct(type));
	    }
	  }

	  if (typeof type === 'string') {
	    return describeBuiltInComponentFrame(type);
	  }

	  switch (type) {
	    case REACT_SUSPENSE_TYPE:
	      return describeBuiltInComponentFrame('Suspense');

	    case REACT_SUSPENSE_LIST_TYPE:
	      return describeBuiltInComponentFrame('SuspenseList');
	  }

	  if (typeof type === 'object') {
	    switch (type.$$typeof) {
	      case REACT_FORWARD_REF_TYPE:
	        return describeFunctionComponentFrame(type.render);

	      case REACT_MEMO_TYPE:
	        // Memo may contain any component type so we recursively resolve it.
	        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

	      case REACT_LAZY_TYPE:
	        {
	          var lazyComponent = type;
	          var payload = lazyComponent._payload;
	          var init = lazyComponent._init;

	          try {
	            // Lazy may contain any component type so we recursively resolve it.
	            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
	          } catch (x) {}
	        }
	    }
	  }

	  return '';
	}

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var loggedTypeFailures = {};
	var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

	function setCurrentlyValidatingElement(element) {
	  {
	    if (element) {
	      var owner = element._owner;
	      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
	      ReactDebugCurrentFrame.setExtraStackFrame(stack);
	    } else {
	      ReactDebugCurrentFrame.setExtraStackFrame(null);
	    }
	  }
	}

	function checkPropTypes(typeSpecs, values, location, componentName, element) {
	  {
	    // $FlowFixMe This is okay but Flow doesn't know it.
	    var has = Function.call.bind(hasOwnProperty);

	    for (var typeSpecName in typeSpecs) {
	      if (has(typeSpecs, typeSpecName)) {
	        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.

	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            // eslint-disable-next-line react-internal/prod-error-codes
	            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
	            err.name = 'Invariant Violation';
	            throw err;
	          }

	          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	        } catch (ex) {
	          error$1 = ex;
	        }

	        if (error$1 && !(error$1 instanceof Error)) {
	          setCurrentlyValidatingElement(element);

	          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

	          setCurrentlyValidatingElement(null);
	        }

	        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error$1.message] = true;
	          setCurrentlyValidatingElement(element);

	          error('Failed %s type: %s', location, error$1.message);

	          setCurrentlyValidatingElement(null);
	        }
	      }
	    }
	  }
	}

	var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

	function isArray(a) {
	  return isArrayImpl(a);
	}

	/*
	 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
	 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
	 *
	 * The functions in this module will throw an easier-to-understand,
	 * easier-to-debug exception with a clear errors message message explaining the
	 * problem. (Instead of a confusing exception thrown inside the implementation
	 * of the `value` object).
	 */
	// $FlowFixMe only called in DEV, so void return is not possible.
	function typeName(value) {
	  {
	    // toStringTag is needed for namespaced types like Temporal.Instant
	    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
	    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
	    return type;
	  }
	} // $FlowFixMe only called in DEV, so void return is not possible.


	function willCoercionThrow(value) {
	  {
	    try {
	      testStringCoercion(value);
	      return false;
	    } catch (e) {
	      return true;
	    }
	  }
	}

	function testStringCoercion(value) {
	  // If you ended up here by following an exception call stack, here's what's
	  // happened: you supplied an object or symbol value to React (as a prop, key,
	  // DOM attribute, CSS property, string ref, etc.) and when React tried to
	  // coerce it to a string using `'' + value`, an exception was thrown.
	  //
	  // The most common types that will cause this exception are `Symbol` instances
	  // and Temporal objects like `Temporal.Instant`. But any object that has a
	  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
	  // exception. (Library authors do this to prevent users from using built-in
	  // numeric operators like `+` or comparison operators like `>=` because custom
	  // methods are needed to perform accurate arithmetic or comparison.)
	  //
	  // To fix the problem, coerce this object or symbol value to a string before
	  // passing it to React. The most reliable way is usually `String(value)`.
	  //
	  // To find which value is throwing, check the browser or debugger console.
	  // Before this exception was thrown, there should be `console.error` output
	  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
	  // problem and how that type was used: key, atrribute, input value prop, etc.
	  // In most cases, this console output also shows the component and its
	  // ancestor components where the exception happened.
	  //
	  // eslint-disable-next-line react-internal/safe-string-coercion
	  return '' + value;
	}
	function checkKeyStringCoercion(value) {
	  {
	    if (willCoercionThrow(value)) {
	      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

	      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
	    }
	  }
	}

	var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	var specialPropKeyWarningShown;
	var specialPropRefWarningShown;
	var didWarnAboutStringRefs;

	{
	  didWarnAboutStringRefs = {};
	}

	function hasValidRef(config) {
	  {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }

	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }

	  return config.key !== undefined;
	}

	function warnIfStringRefCannotBeAutoConverted(config, self) {
	  {
	    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
	      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);

	      if (!didWarnAboutStringRefs[componentName]) {
	        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);

	        didWarnAboutStringRefs[componentName] = true;
	      }
	    }
	  }
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  {
	    var warnAboutAccessingKey = function () {
	      if (!specialPropKeyWarningShown) {
	        specialPropKeyWarningShown = true;

	        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
	      }
	    };

	    warnAboutAccessingKey.isReactWarning = true;
	    Object.defineProperty(props, 'key', {
	      get: warnAboutAccessingKey,
	      configurable: true
	    });
	  }
	}

	function defineRefPropWarningGetter(props, displayName) {
	  {
	    var warnAboutAccessingRef = function () {
	      if (!specialPropRefWarningShown) {
	        specialPropRefWarningShown = true;

	        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
	      }
	    };

	    warnAboutAccessingRef.isReactWarning = true;
	    Object.defineProperty(props, 'ref', {
	      get: warnAboutAccessingRef,
	      configurable: true
	    });
	  }
	}
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, instanceof check
	 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} props
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} owner
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @internal
	 */


	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allows us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.

	    Object.defineProperty(element._store, 'validated', {
	      configurable: false,
	      enumerable: false,
	      writable: true,
	      value: false
	    }); // self and source are DEV only properties.

	    Object.defineProperty(element, '_self', {
	      configurable: false,
	      enumerable: false,
	      writable: false,
	      value: self
	    }); // Two elements created in two different places should be considered
	    // equal for testing purposes and therefore we hide it from enumeration.

	    Object.defineProperty(element, '_source', {
	      configurable: false,
	      enumerable: false,
	      writable: false,
	      value: source
	    });

	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};
	/**
	 * https://github.com/reactjs/rfcs/pull/107
	 * @param {*} type
	 * @param {object} props
	 * @param {string} key
	 */

	function jsxDEV(type, config, maybeKey, source, self) {
	  {
	    var propName; // Reserved names are extracted

	    var props = {};
	    var key = null;
	    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
	    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
	    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
	    // but as an intermediary step, we will use jsxDEV for everything except
	    // <div {...props} key="Hi" />, because we aren't currently able to tell if
	    // key is explicitly declared to be undefined or not.

	    if (maybeKey !== undefined) {
	      {
	        checkKeyStringCoercion(maybeKey);
	      }

	      key = '' + maybeKey;
	    }

	    if (hasValidKey(config)) {
	      {
	        checkKeyStringCoercion(config.key);
	      }

	      key = '' + config.key;
	    }

	    if (hasValidRef(config)) {
	      ref = config.ref;
	      warnIfStringRefCannotBeAutoConverted(config, self);
	    } // Remaining properties are added to a new props object


	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    } // Resolve default props


	    if (type && type.defaultProps) {
	      var defaultProps = type.defaultProps;

	      for (propName in defaultProps) {
	        if (props[propName] === undefined) {
	          props[propName] = defaultProps[propName];
	        }
	      }
	    }

	    if (key || ref) {
	      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

	      if (key) {
	        defineKeyPropWarningGetter(props, displayName);
	      }

	      if (ref) {
	        defineRefPropWarningGetter(props, displayName);
	      }
	    }

	    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	  }
	}

	var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
	var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

	function setCurrentlyValidatingElement$1(element) {
	  {
	    if (element) {
	      var owner = element._owner;
	      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
	      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
	    } else {
	      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
	    }
	  }
	}

	var propTypesMisspellWarningShown;

	{
	  propTypesMisspellWarningShown = false;
	}
	/**
	 * Verifies the object is a ReactElement.
	 * See https://reactjs.org/docs/react-api.html#isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a ReactElement.
	 * @final
	 */


	function isValidElement(object) {
	  {
	    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	  }
	}

	function getDeclarationErrorAddendum() {
	  {
	    if (ReactCurrentOwner$1.current) {
	      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);

	      if (name) {
	        return '\n\nCheck the render method of `' + name + '`.';
	      }
	    }

	    return '';
	  }
	}

	function getSourceInfoErrorAddendum(source) {
	  {
	    if (source !== undefined) {
	      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
	      var lineNumber = source.lineNumber;
	      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
	    }

	    return '';
	  }
	}
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */


	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  {
	    var info = getDeclarationErrorAddendum();

	    if (!info) {
	      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

	      if (parentName) {
	        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
	      }
	    }

	    return info;
	  }
	}
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */


	function validateExplicitKey(element, parentType) {
	  {
	    if (!element._store || element._store.validated || element.key != null) {
	      return;
	    }

	    element._store.validated = true;
	    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

	    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
	      return;
	    }

	    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
	    // property, it may be the creator of the child that's responsible for
	    // assigning it a key.

	    var childOwner = '';

	    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
	      // Give the component that originally created this child.
	      childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
	    }

	    setCurrentlyValidatingElement$1(element);

	    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

	    setCurrentlyValidatingElement$1(null);
	  }
	}
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */


	function validateChildKeys(node, parentType) {
	  {
	    if (typeof node !== 'object') {
	      return;
	    }

	    if (isArray(node)) {
	      for (var i = 0; i < node.length; i++) {
	        var child = node[i];

	        if (isValidElement(child)) {
	          validateExplicitKey(child, parentType);
	        }
	      }
	    } else if (isValidElement(node)) {
	      // This element was passed in a valid location.
	      if (node._store) {
	        node._store.validated = true;
	      }
	    } else if (node) {
	      var iteratorFn = getIteratorFn(node);

	      if (typeof iteratorFn === 'function') {
	        // Entry iterators used to provide implicit keys,
	        // but now we print a separate warning for them later.
	        if (iteratorFn !== node.entries) {
	          var iterator = iteratorFn.call(node);
	          var step;

	          while (!(step = iterator.next()).done) {
	            if (isValidElement(step.value)) {
	              validateExplicitKey(step.value, parentType);
	            }
	          }
	        }
	      }
	    }
	  }
	}
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */


	function validatePropTypes(element) {
	  {
	    var type = element.type;

	    if (type === null || type === undefined || typeof type === 'string') {
	      return;
	    }

	    var propTypes;

	    if (typeof type === 'function') {
	      propTypes = type.propTypes;
	    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
	    // Inner props are checked in the reconciler.
	    type.$$typeof === REACT_MEMO_TYPE)) {
	      propTypes = type.propTypes;
	    } else {
	      return;
	    }

	    if (propTypes) {
	      // Intentionally inside to avoid triggering lazy initializers:
	      var name = getComponentNameFromType(type);
	      checkPropTypes(propTypes, element.props, 'prop', name, element);
	    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
	      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

	      var _name = getComponentNameFromType(type);

	      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
	    }

	    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
	      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
	    }
	  }
	}
	/**
	 * Given a fragment, validate that it can only be provided with fragment props
	 * @param {ReactElement} fragment
	 */


	function validateFragmentProps(fragment) {
	  {
	    var keys = Object.keys(fragment.props);

	    for (var i = 0; i < keys.length; i++) {
	      var key = keys[i];

	      if (key !== 'children' && key !== 'key') {
	        setCurrentlyValidatingElement$1(fragment);

	        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

	        setCurrentlyValidatingElement$1(null);
	        break;
	      }
	    }

	    if (fragment.ref !== null) {
	      setCurrentlyValidatingElement$1(fragment);

	      error('Invalid attribute `ref` supplied to `React.Fragment`.');

	      setCurrentlyValidatingElement$1(null);
	    }
	  }
	}

	function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
	  {
	    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.

	    if (!validType) {
	      var info = '';

	      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
	      }

	      var sourceInfo = getSourceInfoErrorAddendum(source);

	      if (sourceInfo) {
	        info += sourceInfo;
	      } else {
	        info += getDeclarationErrorAddendum();
	      }

	      var typeString;

	      if (type === null) {
	        typeString = 'null';
	      } else if (isArray(type)) {
	        typeString = 'array';
	      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
	        typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
	        info = ' Did you accidentally export a JSX literal instead of a component?';
	      } else {
	        typeString = typeof type;
	      }

	      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
	    }

	    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.

	    if (element == null) {
	      return element;
	    } // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)


	    if (validType) {
	      var children = props.children;

	      if (children !== undefined) {
	        if (isStaticChildren) {
	          if (isArray(children)) {
	            for (var i = 0; i < children.length; i++) {
	              validateChildKeys(children[i], type);
	            }

	            if (Object.freeze) {
	              Object.freeze(children);
	            }
	          } else {
	            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
	          }
	        } else {
	          validateChildKeys(children, type);
	        }
	      }
	    }

	    if (type === REACT_FRAGMENT_TYPE) {
	      validateFragmentProps(element);
	    } else {
	      validatePropTypes(element);
	    }

	    return element;
	  }
	} // These two functions exist to still get child warnings in dev
	// even with the prod transform. This means that jsxDEV is purely
	// opt-in behavior for better messages but that we won't stop
	// giving you warnings if you use production apis.

	function jsxWithValidationStatic(type, props, key) {
	  {
	    return jsxWithValidation(type, props, key, true);
	  }
	}
	function jsxWithValidationDynamic(type, props, key) {
	  {
	    return jsxWithValidation(type, props, key, false);
	  }
	}

	var jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.
	// for now we can ship identical prod functions

	var jsxs =  jsxWithValidationStatic ;

	reactJsxRuntime_development.Fragment = REACT_FRAGMENT_TYPE;
	reactJsxRuntime_development.jsx = jsx;
	reactJsxRuntime_development.jsxs = jsxs;
	  })();
	}
	return reactJsxRuntime_development;
}

var reactJsxRuntime_production_min = {};

/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactJsxRuntime_production_min;

function requireReactJsxRuntime_production_min () {
	if (hasRequiredReactJsxRuntime_production_min) return reactJsxRuntime_production_min;
	hasRequiredReactJsxRuntime_production_min = 1;
var f=React,k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};
	function q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=""+g);void 0!==a.key&&(e=""+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return {$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}reactJsxRuntime_production_min.Fragment=l;reactJsxRuntime_production_min.jsx=q;reactJsxRuntime_production_min.jsxs=q;
	return reactJsxRuntime_production_min;
}

if (process.env.NODE_ENV === 'production') {
  jsxRuntime.exports = requireReactJsxRuntime_production_min();
} else {
  jsxRuntime.exports = requireReactJsxRuntime_development();
}

var jsxRuntimeExports = jsxRuntime.exports;

/**
 * @mui/styled-engine v5.14.15
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function styled$2(tag, options) {
  const stylesFactory = emStyled(tag, options);
  if (process.env.NODE_ENV !== 'production') {
    return (...styles) => {
      const component = typeof tag === 'string' ? `"${tag}"` : 'component';
      if (styles.length === 0) {
        console.error([`MUI: Seems like you called \`styled(${component})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join('\n'));
      } else if (styles.some(style => style === undefined)) {
        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);
      }
      return stylesFactory(...styles);
    };
  }
  return stylesFactory;
}

// eslint-disable-next-line @typescript-eslint/naming-convention
const internal_processStyles = (tag, processor) => {
  // Emotion attaches all the styles as `__emotion_styles`.
  // Ref: https://github.com/emotion-js/emotion/blob/16d971d0da229596d6bcc39d282ba9753c9ee7cf/packages/styled/src/base.js#L186
  if (Array.isArray(tag.__emotion_styles)) {
    tag.__emotion_styles = processor(tag.__emotion_styles);
  }
};

const _excluded$e = ["values", "unit", "step"];
const sortBreakpointsValues = values => {
  const breakpointsAsArray = Object.keys(values).map(key => ({
    key,
    val: values[key]
  })) || [];
  // Sort in ascending order
  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);
  return breakpointsAsArray.reduce((acc, obj) => {
    return _extends({}, acc, {
      [obj.key]: obj.val
    });
  }, {});
};

// Keep in mind that @media is inclusive by the CSS specification.
function createBreakpoints(breakpoints) {
  const {
      // The breakpoint **start** at this value.
      // For instance with the first breakpoint xs: [xs, sm).
      values = {
        xs: 0,
        // phone
        sm: 600,
        // tablet
        md: 900,
        // small laptop
        lg: 1200,
        // desktop
        xl: 1536 // large screen
      },

      unit = 'px',
      step = 5
    } = breakpoints,
    other = _objectWithoutPropertiesLoose$1(breakpoints, _excluded$e);
  const sortedValues = sortBreakpointsValues(values);
  const keys = Object.keys(sortedValues);
  function up(key) {
    const value = typeof values[key] === 'number' ? values[key] : key;
    return `@media (min-width:${value}${unit})`;
  }
  function down(key) {
    const value = typeof values[key] === 'number' ? values[key] : key;
    return `@media (max-width:${value - step / 100}${unit})`;
  }
  function between(start, end) {
    const endIndex = keys.indexOf(end);
    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;
  }
  function only(key) {
    if (keys.indexOf(key) + 1 < keys.length) {
      return between(key, keys[keys.indexOf(key) + 1]);
    }
    return up(key);
  }
  function not(key) {
    // handle first and last key separately, for better readability
    const keyIndex = keys.indexOf(key);
    if (keyIndex === 0) {
      return up(keys[1]);
    }
    if (keyIndex === keys.length - 1) {
      return down(keys[keyIndex]);
    }
    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');
  }
  return _extends({
    keys,
    values: sortedValues,
    up,
    down,
    between,
    only,
    not,
    unit
  }, other);
}

const shape = {
  borderRadius: 4
};
var shape$1 = shape;

const responsivePropType = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.object, PropTypes.array]) : {};
var responsivePropType$1 = responsivePropType;

function merge(acc, item) {
  if (!item) {
    return acc;
  }
  return deepmerge(acc, item, {
    clone: false // No need to clone deep, it's way faster.
  });
}

// The breakpoint **start** at this value.
// For instance with the first breakpoint xs: [xs, sm[.
const values = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536 // large screen
};

const defaultBreakpoints = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ['xs', 'sm', 'md', 'lg', 'xl'],
  up: key => `@media (min-width:${values[key]}px)`
};
function handleBreakpoints(props, propValue, styleFromPropValue) {
  const theme = props.theme || {};
  if (Array.isArray(propValue)) {
    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return propValue.reduce((acc, item, index) => {
      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
      return acc;
    }, {});
  }
  if (typeof propValue === 'object') {
    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return Object.keys(propValue).reduce((acc, breakpoint) => {
      // key is breakpoint
      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {
        const mediaKey = themeBreakpoints.up(breakpoint);
        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
      } else {
        const cssKey = breakpoint;
        acc[cssKey] = propValue[cssKey];
      }
      return acc;
    }, {});
  }
  const output = styleFromPropValue(propValue);
  return output;
}
function createEmptyBreakpointObject(breakpointsInput = {}) {
  var _breakpointsInput$key;
  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {
    const breakpointStyleKey = breakpointsInput.up(key);
    acc[breakpointStyleKey] = {};
    return acc;
  }, {});
  return breakpointsInOrder || {};
}
function removeUnusedBreakpoints(breakpointKeys, style) {
  return breakpointKeys.reduce((acc, key) => {
    const breakpointOutput = acc[key];
    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
    if (isBreakpointUnused) {
      delete acc[key];
    }
    return acc;
  }, style);
}

function getPath(obj, path, checkVars = true) {
  if (!path || typeof path !== 'string') {
    return null;
  }

  // Check if CSS variables are used
  if (obj && obj.vars && checkVars) {
    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);
    if (val != null) {
      return val;
    }
  }
  return path.split('.').reduce((acc, item) => {
    if (acc && acc[item] != null) {
      return acc[item];
    }
    return null;
  }, obj);
}
function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {
  let value;
  if (typeof themeMapping === 'function') {
    value = themeMapping(propValueFinal);
  } else if (Array.isArray(themeMapping)) {
    value = themeMapping[propValueFinal] || userValue;
  } else {
    value = getPath(themeMapping, propValueFinal) || userValue;
  }
  if (transform) {
    value = transform(value, userValue, themeMapping);
  }
  return value;
}
function style$1(options) {
  const {
    prop,
    cssProperty = options.prop,
    themeKey,
    transform
  } = options;

  // false positive
  // eslint-disable-next-line react/function-component-definition
  const fn = props => {
    if (props[prop] == null) {
      return null;
    }
    const propValue = props[prop];
    const theme = props.theme;
    const themeMapping = getPath(theme, themeKey) || {};
    const styleFromPropValue = propValueFinal => {
      let value = getStyleValue(themeMapping, transform, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === 'string') {
        // Haven't found value
        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return {
        [cssProperty]: value
      };
    };
    return handleBreakpoints(props, propValue, styleFromPropValue);
  };
  fn.propTypes = process.env.NODE_ENV !== 'production' ? {
    [prop]: responsivePropType$1
  } : {};
  fn.filterProps = [prop];
  return fn;
}

function memoize(fn) {
  const cache = {};
  return arg => {
    if (cache[arg] === undefined) {
      cache[arg] = fn(arg);
    }
    return cache[arg];
  };
}

const properties = {
  m: 'margin',
  p: 'padding'
};
const directions = {
  t: 'Top',
  r: 'Right',
  b: 'Bottom',
  l: 'Left',
  x: ['Left', 'Right'],
  y: ['Top', 'Bottom']
};
const aliases = {
  marginX: 'mx',
  marginY: 'my',
  paddingX: 'px',
  paddingY: 'py'
};

// memoize() impact:
// From 300,000 ops/sec
// To 350,000 ops/sec
const getCssProperties = memoize(prop => {
  // It's not a shorthand notation.
  if (prop.length > 2) {
    if (aliases[prop]) {
      prop = aliases[prop];
    } else {
      return [prop];
    }
  }
  const [a, b] = prop.split('');
  const property = properties[a];
  const direction = directions[b] || '';
  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];
});
const marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];
const paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];
const spacingKeys = [...marginKeys, ...paddingKeys];
function createUnaryUnit(theme, themeKey, defaultValue, propName) {
  var _getPath;
  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;
  if (typeof themeSpacing === 'number') {
    return abs => {
      if (typeof abs === 'string') {
        return abs;
      }
      if (process.env.NODE_ENV !== 'production') {
        if (typeof abs !== 'number') {
          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);
        }
      }
      return themeSpacing * abs;
    };
  }
  if (Array.isArray(themeSpacing)) {
    return abs => {
      if (typeof abs === 'string') {
        return abs;
      }
      if (process.env.NODE_ENV !== 'production') {
        if (!Number.isInteger(abs)) {
          console.error([`MUI: The \`theme.${themeKey}\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \`theme.${themeKey}\` as a number.`].join('\n'));
        } else if (abs > themeSpacing.length - 1) {
          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\n'));
        }
      }
      return themeSpacing[abs];
    };
  }
  if (typeof themeSpacing === 'function') {
    return themeSpacing;
  }
  if (process.env.NODE_ENV !== 'production') {
    console.error([`MUI: The \`theme.${themeKey}\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\n'));
  }
  return () => undefined;
}
function createUnarySpacing(theme) {
  return createUnaryUnit(theme, 'spacing', 8, 'spacing');
}
function getValue(transformer, propValue) {
  if (typeof propValue === 'string' || propValue == null) {
    return propValue;
  }
  const abs = Math.abs(propValue);
  const transformed = transformer(abs);
  if (propValue >= 0) {
    return transformed;
  }
  if (typeof transformed === 'number') {
    return -transformed;
  }
  return `-${transformed}`;
}
function getStyleFromPropValue(cssProperties, transformer) {
  return propValue => cssProperties.reduce((acc, cssProperty) => {
    acc[cssProperty] = getValue(transformer, propValue);
    return acc;
  }, {});
}
function resolveCssProperty(props, keys, prop, transformer) {
  // Using a hash computation over an array iteration could be faster, but with only 28 items,
  // it's doesn't worth the bundle size.
  if (keys.indexOf(prop) === -1) {
    return null;
  }
  const cssProperties = getCssProperties(prop);
  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
  const propValue = props[prop];
  return handleBreakpoints(props, propValue, styleFromPropValue);
}
function style(props, keys) {
  const transformer = createUnarySpacing(props.theme);
  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});
}
function margin(props) {
  return style(props, marginKeys);
}
margin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {
  obj[key] = responsivePropType$1;
  return obj;
}, {}) : {};
margin.filterProps = marginKeys;
function padding(props) {
  return style(props, paddingKeys);
}
padding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {
  obj[key] = responsivePropType$1;
  return obj;
}, {}) : {};
padding.filterProps = paddingKeys;
process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {
  obj[key] = responsivePropType$1;
  return obj;
}, {}) : {};

// The different signatures imply different meaning for their arguments that can't be expressed structurally.
// We express the difference with variable names.
/* tslint:disable:unified-signatures */
/* tslint:enable:unified-signatures */

function createSpacing(spacingInput = 8) {
  // Already transformed.
  if (spacingInput.mui) {
    return spacingInput;
  }

  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
  // Smaller components, such as icons, can align to a 4dp grid.
  // https://m2.material.io/design/layout/understanding-layout.html
  const transform = createUnarySpacing({
    spacing: spacingInput
  });
  const spacing = (...argsInput) => {
    if (process.env.NODE_ENV !== 'production') {
      if (!(argsInput.length <= 4)) {
        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);
      }
    }
    const args = argsInput.length === 0 ? [1] : argsInput;
    return args.map(argument => {
      const output = transform(argument);
      return typeof output === 'number' ? `${output}px` : output;
    }).join(' ');
  };
  spacing.mui = true;
  return spacing;
}

function compose(...styles) {
  const handlers = styles.reduce((acc, style) => {
    style.filterProps.forEach(prop => {
      acc[prop] = style;
    });
    return acc;
  }, {});

  // false positive
  // eslint-disable-next-line react/function-component-definition
  const fn = props => {
    return Object.keys(props).reduce((acc, prop) => {
      if (handlers[prop]) {
        return merge(acc, handlers[prop](props));
      }
      return acc;
    }, {});
  };
  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce((acc, style) => Object.assign(acc, style.propTypes), {}) : {};
  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);
  return fn;
}

function borderTransform(value) {
  if (typeof value !== 'number') {
    return value;
  }
  return `${value}px solid`;
}
const border = style$1({
  prop: 'border',
  themeKey: 'borders',
  transform: borderTransform
});
const borderTop = style$1({
  prop: 'borderTop',
  themeKey: 'borders',
  transform: borderTransform
});
const borderRight = style$1({
  prop: 'borderRight',
  themeKey: 'borders',
  transform: borderTransform
});
const borderBottom = style$1({
  prop: 'borderBottom',
  themeKey: 'borders',
  transform: borderTransform
});
const borderLeft = style$1({
  prop: 'borderLeft',
  themeKey: 'borders',
  transform: borderTransform
});
const borderColor = style$1({
  prop: 'borderColor',
  themeKey: 'palette'
});
const borderTopColor = style$1({
  prop: 'borderTopColor',
  themeKey: 'palette'
});
const borderRightColor = style$1({
  prop: 'borderRightColor',
  themeKey: 'palette'
});
const borderBottomColor = style$1({
  prop: 'borderBottomColor',
  themeKey: 'palette'
});
const borderLeftColor = style$1({
  prop: 'borderLeftColor',
  themeKey: 'palette'
});

// false positive
// eslint-disable-next-line react/function-component-definition
const borderRadius = props => {
  if (props.borderRadius !== undefined && props.borderRadius !== null) {
    const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');
    const styleFromPropValue = propValue => ({
      borderRadius: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);
  }
  return null;
};
borderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {
  borderRadius: responsivePropType$1
} : {};
borderRadius.filterProps = ['borderRadius'];
compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);

// false positive
// eslint-disable-next-line react/function-component-definition
const gap = props => {
  if (props.gap !== undefined && props.gap !== null) {
    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'gap');
    const styleFromPropValue = propValue => ({
      gap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.gap, styleFromPropValue);
  }
  return null;
};
gap.propTypes = process.env.NODE_ENV !== 'production' ? {
  gap: responsivePropType$1
} : {};
gap.filterProps = ['gap'];

// false positive
// eslint-disable-next-line react/function-component-definition
const columnGap = props => {
  if (props.columnGap !== undefined && props.columnGap !== null) {
    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'columnGap');
    const styleFromPropValue = propValue => ({
      columnGap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.columnGap, styleFromPropValue);
  }
  return null;
};
columnGap.propTypes = process.env.NODE_ENV !== 'production' ? {
  columnGap: responsivePropType$1
} : {};
columnGap.filterProps = ['columnGap'];

// false positive
// eslint-disable-next-line react/function-component-definition
const rowGap = props => {
  if (props.rowGap !== undefined && props.rowGap !== null) {
    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'rowGap');
    const styleFromPropValue = propValue => ({
      rowGap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.rowGap, styleFromPropValue);
  }
  return null;
};
rowGap.propTypes = process.env.NODE_ENV !== 'production' ? {
  rowGap: responsivePropType$1
} : {};
rowGap.filterProps = ['rowGap'];
const gridColumn = style$1({
  prop: 'gridColumn'
});
const gridRow = style$1({
  prop: 'gridRow'
});
const gridAutoFlow = style$1({
  prop: 'gridAutoFlow'
});
const gridAutoColumns = style$1({
  prop: 'gridAutoColumns'
});
const gridAutoRows = style$1({
  prop: 'gridAutoRows'
});
const gridTemplateColumns = style$1({
  prop: 'gridTemplateColumns'
});
const gridTemplateRows = style$1({
  prop: 'gridTemplateRows'
});
const gridTemplateAreas = style$1({
  prop: 'gridTemplateAreas'
});
const gridArea = style$1({
  prop: 'gridArea'
});
compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);

function paletteTransform(value, userValue) {
  if (userValue === 'grey') {
    return userValue;
  }
  return value;
}
const color = style$1({
  prop: 'color',
  themeKey: 'palette',
  transform: paletteTransform
});
const bgcolor = style$1({
  prop: 'bgcolor',
  cssProperty: 'backgroundColor',
  themeKey: 'palette',
  transform: paletteTransform
});
const backgroundColor = style$1({
  prop: 'backgroundColor',
  themeKey: 'palette',
  transform: paletteTransform
});
compose(color, bgcolor, backgroundColor);

function sizingTransform(value) {
  return value <= 1 && value !== 0 ? `${value * 100}%` : value;
}
const width = style$1({
  prop: 'width',
  transform: sizingTransform
});
const maxWidth = props => {
  if (props.maxWidth !== undefined && props.maxWidth !== null) {
    const styleFromPropValue = propValue => {
      var _props$theme, _props$theme2;
      const breakpoint = ((_props$theme = props.theme) == null || (_props$theme = _props$theme.breakpoints) == null || (_props$theme = _props$theme.values) == null ? void 0 : _props$theme[propValue]) || values[propValue];
      if (!breakpoint) {
        return {
          maxWidth: sizingTransform(propValue)
        };
      }
      if (((_props$theme2 = props.theme) == null || (_props$theme2 = _props$theme2.breakpoints) == null ? void 0 : _props$theme2.unit) !== 'px') {
        return {
          maxWidth: `${breakpoint}${props.theme.breakpoints.unit}`
        };
      }
      return {
        maxWidth: breakpoint
      };
    };
    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);
  }
  return null;
};
maxWidth.filterProps = ['maxWidth'];
const minWidth = style$1({
  prop: 'minWidth',
  transform: sizingTransform
});
const height = style$1({
  prop: 'height',
  transform: sizingTransform
});
const maxHeight = style$1({
  prop: 'maxHeight',
  transform: sizingTransform
});
const minHeight = style$1({
  prop: 'minHeight',
  transform: sizingTransform
});
style$1({
  prop: 'size',
  cssProperty: 'width',
  transform: sizingTransform
});
style$1({
  prop: 'size',
  cssProperty: 'height',
  transform: sizingTransform
});
const boxSizing = style$1({
  prop: 'boxSizing'
});
compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);

const defaultSxConfig = {
  // borders
  border: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderTop: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderRight: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderBottom: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderLeft: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderColor: {
    themeKey: 'palette'
  },
  borderTopColor: {
    themeKey: 'palette'
  },
  borderRightColor: {
    themeKey: 'palette'
  },
  borderBottomColor: {
    themeKey: 'palette'
  },
  borderLeftColor: {
    themeKey: 'palette'
  },
  borderRadius: {
    themeKey: 'shape.borderRadius',
    style: borderRadius
  },
  // palette
  color: {
    themeKey: 'palette',
    transform: paletteTransform
  },
  bgcolor: {
    themeKey: 'palette',
    cssProperty: 'backgroundColor',
    transform: paletteTransform
  },
  backgroundColor: {
    themeKey: 'palette',
    transform: paletteTransform
  },
  // spacing
  p: {
    style: padding
  },
  pt: {
    style: padding
  },
  pr: {
    style: padding
  },
  pb: {
    style: padding
  },
  pl: {
    style: padding
  },
  px: {
    style: padding
  },
  py: {
    style: padding
  },
  padding: {
    style: padding
  },
  paddingTop: {
    style: padding
  },
  paddingRight: {
    style: padding
  },
  paddingBottom: {
    style: padding
  },
  paddingLeft: {
    style: padding
  },
  paddingX: {
    style: padding
  },
  paddingY: {
    style: padding
  },
  paddingInline: {
    style: padding
  },
  paddingInlineStart: {
    style: padding
  },
  paddingInlineEnd: {
    style: padding
  },
  paddingBlock: {
    style: padding
  },
  paddingBlockStart: {
    style: padding
  },
  paddingBlockEnd: {
    style: padding
  },
  m: {
    style: margin
  },
  mt: {
    style: margin
  },
  mr: {
    style: margin
  },
  mb: {
    style: margin
  },
  ml: {
    style: margin
  },
  mx: {
    style: margin
  },
  my: {
    style: margin
  },
  margin: {
    style: margin
  },
  marginTop: {
    style: margin
  },
  marginRight: {
    style: margin
  },
  marginBottom: {
    style: margin
  },
  marginLeft: {
    style: margin
  },
  marginX: {
    style: margin
  },
  marginY: {
    style: margin
  },
  marginInline: {
    style: margin
  },
  marginInlineStart: {
    style: margin
  },
  marginInlineEnd: {
    style: margin
  },
  marginBlock: {
    style: margin
  },
  marginBlockStart: {
    style: margin
  },
  marginBlockEnd: {
    style: margin
  },
  // display
  displayPrint: {
    cssProperty: false,
    transform: value => ({
      '@media print': {
        display: value
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: gap
  },
  rowGap: {
    style: rowGap
  },
  columnGap: {
    style: columnGap
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: 'zIndex'
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: 'shadows'
  },
  // sizing
  width: {
    transform: sizingTransform
  },
  maxWidth: {
    style: maxWidth
  },
  minWidth: {
    transform: sizingTransform
  },
  height: {
    transform: sizingTransform
  },
  maxHeight: {
    transform: sizingTransform
  },
  minHeight: {
    transform: sizingTransform
  },
  boxSizing: {},
  // typography
  fontFamily: {
    themeKey: 'typography'
  },
  fontSize: {
    themeKey: 'typography'
  },
  fontStyle: {
    themeKey: 'typography'
  },
  fontWeight: {
    themeKey: 'typography'
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: false,
    themeKey: 'typography'
  }
};
var defaultSxConfig$1 = defaultSxConfig;

function objectsHaveSameKeys(...objects) {
  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);
  const union = new Set(allKeys);
  return objects.every(object => union.size === Object.keys(object).length);
}
function callIfFn(maybeFn, arg) {
  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;
}

// eslint-disable-next-line @typescript-eslint/naming-convention
function unstable_createStyleFunctionSx() {
  function getThemeValue(prop, val, theme, config) {
    const props = {
      [prop]: val,
      theme
    };
    const options = config[prop];
    if (!options) {
      return {
        [prop]: val
      };
    }
    const {
      cssProperty = prop,
      themeKey,
      transform,
      style
    } = options;
    if (val == null) {
      return null;
    }

    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123
    if (themeKey === 'typography' && val === 'inherit') {
      return {
        [prop]: val
      };
    }
    const themeMapping = getPath(theme, themeKey) || {};
    if (style) {
      return style(props);
    }
    const styleFromPropValue = propValueFinal => {
      let value = getStyleValue(themeMapping, transform, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === 'string') {
        // Haven't found value
        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return {
        [cssProperty]: value
      };
    };
    return handleBreakpoints(props, val, styleFromPropValue);
  }
  function styleFunctionSx(props) {
    var _theme$unstable_sxCon;
    const {
      sx,
      theme = {}
    } = props || {};
    if (!sx) {
      return null; // Emotion & styled-components will neglect null
    }

    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig$1;

    /*
     * Receive `sxInput` as object or callback
     * and then recursively check keys & values to create media query object styles.
     * (the result will be used in `styled`)
     */
    function traverse(sxInput) {
      let sxObject = sxInput;
      if (typeof sxInput === 'function') {
        sxObject = sxInput(theme);
      } else if (typeof sxInput !== 'object') {
        // value
        return sxInput;
      }
      if (!sxObject) {
        return null;
      }
      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);
      const breakpointsKeys = Object.keys(emptyBreakpoints);
      let css = emptyBreakpoints;
      Object.keys(sxObject).forEach(styleKey => {
        const value = callIfFn(sxObject[styleKey], theme);
        if (value !== null && value !== undefined) {
          if (typeof value === 'object') {
            if (config[styleKey]) {
              css = merge(css, getThemeValue(styleKey, value, theme, config));
            } else {
              const breakpointsValues = handleBreakpoints({
                theme
              }, value, x => ({
                [styleKey]: x
              }));
              if (objectsHaveSameKeys(breakpointsValues, value)) {
                css[styleKey] = styleFunctionSx({
                  sx: value,
                  theme
                });
              } else {
                css = merge(css, breakpointsValues);
              }
            }
          } else {
            css = merge(css, getThemeValue(styleKey, value, theme, config));
          }
        }
      });
      return removeUnusedBreakpoints(breakpointsKeys, css);
    }
    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
  }
  return styleFunctionSx;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = ['sx'];
var styleFunctionSx$1 = styleFunctionSx;

const _excluded$d = ["breakpoints", "palette", "spacing", "shape"];
function createTheme$1(options = {}, ...args) {
  const {
      breakpoints: breakpointsInput = {},
      palette: paletteInput = {},
      spacing: spacingInput,
      shape: shapeInput = {}
    } = options,
    other = _objectWithoutPropertiesLoose$1(options, _excluded$d);
  const breakpoints = createBreakpoints(breakpointsInput);
  const spacing = createSpacing(spacingInput);
  let muiTheme = deepmerge({
    breakpoints,
    direction: 'ltr',
    components: {},
    // Inject component definitions.
    palette: _extends({
      mode: 'light'
    }, paletteInput),
    spacing,
    shape: _extends({}, shape$1, shapeInput)
  }, other);
  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);
  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig$1, other == null ? void 0 : other.unstable_sxConfig);
  muiTheme.unstable_sx = function sx(props) {
    return styleFunctionSx$1({
      sx: props,
      theme: this
    });
  };
  return muiTheme;
}

function isObjectEmpty(obj) {
  return Object.keys(obj).length === 0;
}
function useTheme$2(defaultTheme = null) {
  const contextTheme = React__namespace.useContext(react.ThemeContext);
  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;
}

const systemDefaultTheme$1 = createTheme$1();
function useTheme$1(defaultTheme = systemDefaultTheme$1) {
  return useTheme$2(defaultTheme);
}

function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f);else for(t in e)e[t]&&(n&&(n+=" "),n+=t);return n}function clsx(){for(var e,t,f=0,n="";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}

const _excluded$c = ["variant"];
function isEmpty$1(string) {
  return string.length === 0;
}

/**
 * Generates string classKey based on the properties provided. It starts with the
 * variant if defined, and then it appends all other properties in alphabetical order.
 * @param {object} props - the properties for which the classKey should be created.
 */
function propsToClassKey(props) {
  const {
      variant
    } = props,
    other = _objectWithoutPropertiesLoose$1(props, _excluded$c);
  let classKey = variant || '';
  Object.keys(other).sort().forEach(key => {
    if (key === 'color') {
      classKey += isEmpty$1(classKey) ? props[key] : capitalize(props[key]);
    } else {
      classKey += `${isEmpty$1(classKey) ? key : capitalize(key)}${capitalize(props[key].toString())}`;
    }
  });
  return classKey;
}

const _excluded$b = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
function isEmpty(obj) {
  return Object.keys(obj).length === 0;
}

// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40
function isStringTag(tag) {
  return typeof tag === 'string' &&
  // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96;
}
const getStyleOverrides = (name, theme) => {
  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {
    return theme.components[name].styleOverrides;
  }
  return null;
};
const transformVariants = variants => {
  const variantsStyles = {};
  if (variants) {
    variants.forEach(definition => {
      const key = propsToClassKey(definition.props);
      variantsStyles[key] = definition.style;
    });
  }
  return variantsStyles;
};
const getVariantStyles = (name, theme) => {
  let variants = [];
  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {
    variants = theme.components[name].variants;
  }
  return transformVariants(variants);
};
const variantsResolver = (props, styles, variants) => {
  const {
    ownerState = {}
  } = props;
  const variantsStyles = [];
  if (variants) {
    variants.forEach(variant => {
      let isMatch = true;
      Object.keys(variant.props).forEach(key => {
        if (ownerState[key] !== variant.props[key] && props[key] !== variant.props[key]) {
          isMatch = false;
        }
      });
      if (isMatch) {
        variantsStyles.push(styles[propsToClassKey(variant.props)]);
      }
    });
  }
  return variantsStyles;
};
const themeVariantsResolver = (props, styles, theme, name) => {
  var _theme$components;
  const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[name]) == null ? void 0 : _theme$components.variants;
  return variantsResolver(props, styles, themeVariants);
};

// Update /system/styled/#api in case if this changes
function shouldForwardProp(prop) {
  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';
}
const systemDefaultTheme = createTheme$1();
const lowercaseFirstLetter = string => {
  if (!string) {
    return string;
  }
  return string.charAt(0).toLowerCase() + string.slice(1);
};
function resolveTheme({
  defaultTheme,
  theme,
  themeId
}) {
  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;
}
function defaultOverridesResolver(slot) {
  if (!slot) {
    return null;
  }
  return (props, styles) => styles[slot];
}
const muiStyledFunctionResolver = ({
  styledArg,
  props,
  defaultTheme,
  themeId
}) => {
  const resolvedStyles = styledArg(_extends({}, props, {
    theme: resolveTheme(_extends({}, props, {
      defaultTheme,
      themeId
    }))
  }));
  let optionalVariants;
  if (resolvedStyles && resolvedStyles.variants) {
    optionalVariants = resolvedStyles.variants;
    delete resolvedStyles.variants;
  }
  if (optionalVariants) {
    const variantsStyles = variantsResolver(props, transformVariants(optionalVariants), optionalVariants);
    return [resolvedStyles, ...variantsStyles];
  }
  return resolvedStyles;
};
function createStyled(input = {}) {
  const {
    themeId,
    defaultTheme = systemDefaultTheme,
    rootShouldForwardProp = shouldForwardProp,
    slotShouldForwardProp = shouldForwardProp
  } = input;
  const systemSx = props => {
    return styleFunctionSx$1(_extends({}, props, {
      theme: resolveTheme(_extends({}, props, {
        defaultTheme,
        themeId
      }))
    }));
  };
  systemSx.__mui_systemSx = true;
  return (tag, inputOptions = {}) => {
    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.
    internal_processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));
    const {
        name: componentName,
        slot: componentSlot,
        skipVariantsResolver: inputSkipVariantsResolver,
        skipSx: inputSkipSx,
        // TODO v6: remove `lowercaseFirstLetter()` in the next major release
        // For more details: https://github.com/mui/material-ui/pull/37908
        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))
      } = inputOptions,
      options = _objectWithoutPropertiesLoose$1(inputOptions, _excluded$b);

    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.
    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :
    // TODO v6: remove `Root` in the next major release
    // For more details: https://github.com/mui/material-ui/pull/37908
    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;
    const skipSx = inputSkipSx || false;
    let label;
    if (process.env.NODE_ENV !== 'production') {
      if (componentName) {
        // TODO v6: remove `lowercaseFirstLetter()` in the next major release
        // For more details: https://github.com/mui/material-ui/pull/37908
        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;
      }
    }
    let shouldForwardPropOption = shouldForwardProp;

    // TODO v6: remove `Root` in the next major release
    // For more details: https://github.com/mui/material-ui/pull/37908
    if (componentSlot === 'Root' || componentSlot === 'root') {
      shouldForwardPropOption = rootShouldForwardProp;
    } else if (componentSlot) {
      // any other slot specified
      shouldForwardPropOption = slotShouldForwardProp;
    } else if (isStringTag(tag)) {
      // for string (html) tag, preserve the behavior in emotion & styled-components.
      shouldForwardPropOption = undefined;
    }
    const defaultStyledResolver = styled$2(tag, _extends({
      shouldForwardProp: shouldForwardPropOption,
      label
    }, options));
    const muiStyledResolver = (styleArg, ...expressions) => {
      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {
        // On the server Emotion doesn't use React.forwardRef for creating components, so the created
        // component stays as a function. This condition makes sure that we do not interpolate functions
        // which are basically components used as a selectors.
        if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg) {
          return props => muiStyledFunctionResolver({
            styledArg: stylesArg,
            props,
            defaultTheme,
            themeId
          });
        }
        if (isPlainObject(stylesArg)) {
          let transformedStylesArg = stylesArg;
          let styledArgVariants;
          if (stylesArg && stylesArg.variants) {
            styledArgVariants = stylesArg.variants;
            delete transformedStylesArg.variants;
            transformedStylesArg = props => {
              let result = stylesArg;
              const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);
              variantStyles.forEach(variantStyle => {
                result = deepmerge(result, variantStyle);
              });
              return result;
            };
          }
          return transformedStylesArg;
        }
        return stylesArg;
      }) : [];
      let transformedStyleArg = styleArg;
      if (isPlainObject(styleArg)) {
        let styledArgVariants;
        if (styleArg && styleArg.variants) {
          styledArgVariants = styleArg.variants;
          delete transformedStyleArg.variants;
          transformedStyleArg = props => {
            let result = styleArg;
            const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);
            variantStyles.forEach(variantStyle => {
              result = deepmerge(result, variantStyle);
            });
            return result;
          };
        }
      } else if (typeof styleArg === 'function' &&
      // On the server Emotion doesn't use React.forwardRef for creating components, so the created
      // component stays as a function. This condition makes sure that we do not interpolate functions
      // which are basically components used as a selectors.
      styleArg.__emotion_real !== styleArg) {
        // If the type is function, we need to define the default theme.
        transformedStyleArg = props => muiStyledFunctionResolver({
          styledArg: styleArg,
          props,
          defaultTheme,
          themeId
        });
      }
      if (componentName && overridesResolver) {
        expressionsWithDefaultTheme.push(props => {
          const theme = resolveTheme(_extends({}, props, {
            defaultTheme,
            themeId
          }));
          const styleOverrides = getStyleOverrides(componentName, theme);
          if (styleOverrides) {
            const resolvedStyleOverrides = {};
            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {
              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle(_extends({}, props, {
                theme
              })) : slotStyle;
            });
            return overridesResolver(props, resolvedStyleOverrides);
          }
          return null;
        });
      }
      if (componentName && !skipVariantsResolver) {
        expressionsWithDefaultTheme.push(props => {
          const theme = resolveTheme(_extends({}, props, {
            defaultTheme,
            themeId
          }));
          return themeVariantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);
        });
      }
      if (!skipSx) {
        expressionsWithDefaultTheme.push(systemSx);
      }
      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;
      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
        const placeholders = new Array(numOfCustomFnsApplied).fill('');
        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.
        transformedStyleArg = [...styleArg, ...placeholders];
        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];
      }
      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);
      if (process.env.NODE_ENV !== 'production') {
        let displayName;
        if (componentName) {
          displayName = `${componentName}${capitalize(componentSlot || '')}`;
        }
        if (displayName === undefined) {
          displayName = `Styled(${getDisplayName(tag)})`;
        }
        Component.displayName = displayName;
      }
      if (tag.muiName) {
        Component.muiName = tag.muiName;
      }
      return Component;
    };
    if (defaultStyledResolver.withConfig) {
      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
    }
    return muiStyledResolver;
  };
}

function getThemeProps(params) {
  const {
    theme,
    name,
    props
  } = params;
  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
    return props;
  }
  return resolveProps(theme.components[name].defaultProps, props);
}

function useThemeProps$1({
  props,
  name,
  defaultTheme,
  themeId
}) {
  let theme = useTheme$1(defaultTheme);
  if (themeId) {
    theme = theme[themeId] || theme;
  }
  const mergedProps = getThemeProps({
    theme,
    name,
    props
  });
  return mergedProps;
}

/* eslint-disable @typescript-eslint/naming-convention */
/**
 * Returns a number whose value is limited to the given range.
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */
function clamp(value, min = 0, max = 1) {
  if (process.env.NODE_ENV !== 'production') {
    if (value < min || value > max) {
      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);
    }
  }
  return Math.min(Math.max(min, value), max);
}

/**
 * Converts a color from CSS hex format to CSS rgb format.
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */
function hexToRgb(color) {
  color = color.slice(1);
  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');
  let colors = color.match(re);
  if (colors && colors[0].length === 1) {
    colors = colors.map(n => n + n);
  }
  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {
    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;
  }).join(', ')})` : '';
}

/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */
function decomposeColor(color) {
  // Idempotent
  if (color.type) {
    return color;
  }
  if (color.charAt(0) === '#') {
    return decomposeColor(hexToRgb(color));
  }
  const marker = color.indexOf('(');
  const type = color.substring(0, marker);
  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${color}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : formatMuiErrorMessage(9, color));
  }
  let values = color.substring(marker + 1, color.length - 1);
  let colorSpace;
  if (type === 'color') {
    values = values.split(' ');
    colorSpace = values.shift();
    if (values.length === 4 && values[3].charAt(0) === '/') {
      values[3] = values[3].slice(1);
    }
    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${colorSpace}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : formatMuiErrorMessage(10, colorSpace));
    }
  } else {
    values = values.split(',');
  }
  values = values.map(value => parseFloat(value));
  return {
    type,
    values,
    colorSpace
  };
}

/**
 * Converts a color object with type and values to a string.
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */
function recomposeColor(color) {
  const {
    type,
    colorSpace
  } = color;
  let {
    values
  } = color;
  if (type.indexOf('rgb') !== -1) {
    // Only convert the first 3 values to int (i.e. not alpha)
    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);
  } else if (type.indexOf('hsl') !== -1) {
    values[1] = `${values[1]}%`;
    values[2] = `${values[2]}%`;
  }
  if (type.indexOf('color') !== -1) {
    values = `${colorSpace} ${values.join(' ')}`;
  } else {
    values = `${values.join(', ')}`;
  }
  return `${type}(${values})`;
}

/**
 * Converts a color from hsl format to rgb format.
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */
function hslToRgb(color) {
  color = decomposeColor(color);
  const {
    values
  } = color;
  const h = values[0];
  const s = values[1] / 100;
  const l = values[2] / 100;
  const a = s * Math.min(l, 1 - l);
  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
  let type = 'rgb';
  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];
  if (color.type === 'hsla') {
    type += 'a';
    rgb.push(values[3]);
  }
  return recomposeColor({
    type,
    values: rgb
  });
}
/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */
function getLuminance(color) {
  color = decomposeColor(color);
  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;
  rgb = rgb.map(val => {
    if (color.type !== 'color') {
      val /= 255; // normalized
    }

    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
  });

  // Truncate at 3 digits
  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}

/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */
function getContrastRatio(foreground, background) {
  const lumA = getLuminance(foreground);
  const lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}

/**
 * Sets the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} value - value to set the alpha channel to in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function alpha(color, value) {
  color = decomposeColor(color);
  value = clamp(value);
  if (color.type === 'rgb' || color.type === 'hsl') {
    color.type += 'a';
  }
  if (color.type === 'color') {
    color.values[3] = `/${value}`;
  } else {
    color.values[3] = value;
  }
  return recomposeColor(color);
}

/**
 * Darkens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function darken(color, coefficient) {
  color = decomposeColor(color);
  coefficient = clamp(coefficient);
  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] *= 1 - coefficient;
  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {
    for (let i = 0; i < 3; i += 1) {
      color.values[i] *= 1 - coefficient;
    }
  }
  return recomposeColor(color);
}

/**
 * Lightens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function lighten(color, coefficient) {
  color = decomposeColor(color);
  coefficient = clamp(coefficient);
  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] += (100 - color.values[2]) * coefficient;
  } else if (color.type.indexOf('rgb') !== -1) {
    for (let i = 0; i < 3; i += 1) {
      color.values[i] += (255 - color.values[i]) * coefficient;
    }
  } else if (color.type.indexOf('color') !== -1) {
    for (let i = 0; i < 3; i += 1) {
      color.values[i] += (1 - color.values[i]) * coefficient;
    }
  }
  return recomposeColor(color);
}

function createMixins(breakpoints, mixins) {
  return _extends({
    toolbar: {
      minHeight: 56,
      [breakpoints.up('xs')]: {
        '@media (orientation: landscape)': {
          minHeight: 48
        }
      },
      [breakpoints.up('sm')]: {
        minHeight: 64
      }
    }
  }, mixins);
}

const _excluded$a = ["mode", "contrastThreshold", "tonalOffset"];
const light = {
  // The colors used to style the text.
  text: {
    // The most important text.
    primary: 'rgba(0, 0, 0, 0.87)',
    // Secondary text.
    secondary: 'rgba(0, 0, 0, 0.6)',
    // Disabled text have even lower visual prominence.
    disabled: 'rgba(0, 0, 0, 0.38)'
  },
  // The color used to divide different elements.
  divider: 'rgba(0, 0, 0, 0.12)',
  // The background colors used to style the surfaces.
  // Consistency between these values is important.
  background: {
    paper: common$1.white,
    default: common$1.white
  },
  // The colors used to style the action elements.
  action: {
    // The color of an active action like an icon button.
    active: 'rgba(0, 0, 0, 0.54)',
    // The color of an hovered action.
    hover: 'rgba(0, 0, 0, 0.04)',
    hoverOpacity: 0.04,
    // The color of a selected action.
    selected: 'rgba(0, 0, 0, 0.08)',
    selectedOpacity: 0.08,
    // The color of a disabled action.
    disabled: 'rgba(0, 0, 0, 0.26)',
    // The background color of a disabled action.
    disabledBackground: 'rgba(0, 0, 0, 0.12)',
    disabledOpacity: 0.38,
    focus: 'rgba(0, 0, 0, 0.12)',
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
};
const dark = {
  text: {
    primary: common$1.white,
    secondary: 'rgba(255, 255, 255, 0.7)',
    disabled: 'rgba(255, 255, 255, 0.5)',
    icon: 'rgba(255, 255, 255, 0.5)'
  },
  divider: 'rgba(255, 255, 255, 0.12)',
  background: {
    paper: '#121212',
    default: '#121212'
  },
  action: {
    active: common$1.white,
    hover: 'rgba(255, 255, 255, 0.08)',
    hoverOpacity: 0.08,
    selected: 'rgba(255, 255, 255, 0.16)',
    selectedOpacity: 0.16,
    disabled: 'rgba(255, 255, 255, 0.3)',
    disabledBackground: 'rgba(255, 255, 255, 0.12)',
    disabledOpacity: 0.38,
    focus: 'rgba(255, 255, 255, 0.12)',
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(intent, direction, shade, tonalOffset) {
  const tonalOffsetLight = tonalOffset.light || tonalOffset;
  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
  if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
      intent[direction] = intent[shade];
    } else if (direction === 'light') {
      intent.light = lighten(intent.main, tonalOffsetLight);
    } else if (direction === 'dark') {
      intent.dark = darken(intent.main, tonalOffsetDark);
    }
  }
}
function getDefaultPrimary(mode = 'light') {
  if (mode === 'dark') {
    return {
      main: blue$1[200],
      light: blue$1[50],
      dark: blue$1[400]
    };
  }
  return {
    main: blue$1[700],
    light: blue$1[400],
    dark: blue$1[800]
  };
}
function getDefaultSecondary(mode = 'light') {
  if (mode === 'dark') {
    return {
      main: purple$1[200],
      light: purple$1[50],
      dark: purple$1[400]
    };
  }
  return {
    main: purple$1[500],
    light: purple$1[300],
    dark: purple$1[700]
  };
}
function getDefaultError(mode = 'light') {
  if (mode === 'dark') {
    return {
      main: red$1[500],
      light: red$1[300],
      dark: red$1[700]
    };
  }
  return {
    main: red$1[700],
    light: red$1[400],
    dark: red$1[800]
  };
}
function getDefaultInfo(mode = 'light') {
  if (mode === 'dark') {
    return {
      main: lightBlue$1[400],
      light: lightBlue$1[300],
      dark: lightBlue$1[700]
    };
  }
  return {
    main: lightBlue$1[700],
    light: lightBlue$1[500],
    dark: lightBlue$1[900]
  };
}
function getDefaultSuccess(mode = 'light') {
  if (mode === 'dark') {
    return {
      main: green$1[400],
      light: green$1[300],
      dark: green$1[700]
    };
  }
  return {
    main: green$1[800],
    light: green$1[500],
    dark: green$1[900]
  };
}
function getDefaultWarning(mode = 'light') {
  if (mode === 'dark') {
    return {
      main: orange$1[400],
      light: orange$1[300],
      dark: orange$1[700]
    };
  }
  return {
    main: '#ed6c02',
    // closest to orange[800] that pass 3:1.
    light: orange$1[500],
    dark: orange$1[900]
  };
}
function createPalette(palette) {
  const {
      mode = 'light',
      contrastThreshold = 3,
      tonalOffset = 0.2
    } = palette,
    other = _objectWithoutPropertiesLoose$1(palette, _excluded$a);
  const primary = palette.primary || getDefaultPrimary(mode);
  const secondary = palette.secondary || getDefaultSecondary(mode);
  const error = palette.error || getDefaultError(mode);
  const info = palette.info || getDefaultInfo(mode);
  const success = palette.success || getDefaultSuccess(mode);
  const warning = palette.warning || getDefaultWarning(mode);

  // Use the same logic as
  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
  function getContrastText(background) {
    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
    if (process.env.NODE_ENV !== 'production') {
      const contrast = getContrastRatio(background, contrastText);
      if (contrast < 3) {
        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\n'));
      }
    }
    return contrastText;
  }
  const augmentColor = ({
    color,
    name,
    mainShade = 500,
    lightShade = 300,
    darkShade = 700
  }) => {
    color = _extends({}, color);
    if (!color.main && color[mainShade]) {
      color.main = color[mainShade];
    }
    if (!color.hasOwnProperty('main')) {
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${mainShade}\` property.` : formatMuiErrorMessage(11, name ? ` (${name})` : '', mainShade));
    }
    if (typeof color.main !== 'string') {
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(color.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : formatMuiErrorMessage(12, name ? ` (${name})` : '', JSON.stringify(color.main)));
    }
    addLightOrDark(color, 'light', lightShade, tonalOffset);
    addLightOrDark(color, 'dark', darkShade, tonalOffset);
    if (!color.contrastText) {
      color.contrastText = getContrastText(color.main);
    }
    return color;
  };
  const modes = {
    dark,
    light
  };
  if (process.env.NODE_ENV !== 'production') {
    if (!modes[mode]) {
      console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
    }
  }
  const paletteOutput = deepmerge(_extends({
    // A collection of common colors.
    common: _extends({}, common$1),
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode,
    // The colors used to represent primary interface elements for a user.
    primary: augmentColor({
      color: primary,
      name: 'primary'
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: augmentColor({
      color: secondary,
      name: 'secondary',
      mainShade: 'A400',
      lightShade: 'A200',
      darkShade: 'A700'
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: augmentColor({
      color: error,
      name: 'error'
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: augmentColor({
      color: warning,
      name: 'warning'
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: augmentColor({
      color: info,
      name: 'info'
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: augmentColor({
      color: success,
      name: 'success'
    }),
    // The grey colors.
    grey: grey$1,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText,
    // Generate a rich color object.
    augmentColor,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset
  }, modes[mode]), other);
  return paletteOutput;
}

const _excluded$9 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
function round$2(value) {
  return Math.round(value * 1e5) / 1e5;
}
const caseAllCaps = {
  textTransform: 'uppercase'
};
const defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';

/**
 * @see @link{https://m2.material.io/design/typography/the-type-system.html}
 * @see @link{https://m2.material.io/design/typography/understanding-typography.html}
 */
function createTypography(palette, typography) {
  const _ref = typeof typography === 'function' ? typography(palette) : typography,
    {
      fontFamily = defaultFontFamily,
      // The default font size of the Material Specification.
      fontSize = 14,
      // px
      fontWeightLight = 300,
      fontWeightRegular = 400,
      fontWeightMedium = 500,
      fontWeightBold = 700,
      // Tell MUI what's the font-size on the html element.
      // 16px is the default font-size used by browsers.
      htmlFontSize = 16,
      // Apply the CSS properties to all the variants.
      allVariants,
      pxToRem: pxToRem2
    } = _ref,
    other = _objectWithoutPropertiesLoose$1(_ref, _excluded$9);
  if (process.env.NODE_ENV !== 'production') {
    if (typeof fontSize !== 'number') {
      console.error('MUI: `fontSize` is required to be a number.');
    }
    if (typeof htmlFontSize !== 'number') {
      console.error('MUI: `htmlFontSize` is required to be a number.');
    }
  }
  const coef = fontSize / 14;
  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);
  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends({
    fontFamily,
    fontWeight,
    fontSize: pxToRem(size),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight
  }, fontFamily === defaultFontFamily ? {
    letterSpacing: `${round$2(letterSpacing / size)}em`
  } : {}, casing, allVariants);
  const variants = {
    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: 'inherit',
      fontWeight: 'inherit',
      fontSize: 'inherit',
      lineHeight: 'inherit',
      letterSpacing: 'inherit'
    }
  };
  return deepmerge(_extends({
    htmlFontSize,
    pxToRem,
    fontFamily,
    fontSize,
    fontWeightLight,
    fontWeightRegular,
    fontWeightMedium,
    fontWeightBold
  }, variants), other, {
    clone: false // No need to clone deep
  });
}

const shadowKeyUmbraOpacity = 0.2;
const shadowKeyPenumbraOpacity = 0.14;
const shadowAmbientShadowOpacity = 0.12;
function createShadow(...px) {
  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');
}

// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss
const shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
var shadows$1 = shadows;

const _excluded$8 = ["duration", "easing", "delay"];
// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
// to learn the context in which each easing should be used.
const easing = {
  // This is the most common easing curve.
  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
};

// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
// to learn when use what timing
const duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function formatMs(milliseconds) {
  return `${Math.round(milliseconds)}ms`;
}
function getAutoHeightDuration(height) {
  if (!height) {
    return 0;
  }
  const constant = height / 36;

  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}
function createTransitions(inputTransitions) {
  const mergedEasing = _extends({}, easing, inputTransitions.easing);
  const mergedDuration = _extends({}, duration, inputTransitions.duration);
  const create = (props = ['all'], options = {}) => {
    const {
        duration: durationOption = mergedDuration.standard,
        easing: easingOption = mergedEasing.easeInOut,
        delay = 0
      } = options,
      other = _objectWithoutPropertiesLoose$1(options, _excluded$8);
    if (process.env.NODE_ENV !== 'production') {
      const isString = value => typeof value === 'string';
      // IE11 support, replace with Number.isNaN
      // eslint-disable-next-line no-restricted-globals
      const isNumber = value => !isNaN(parseFloat(value));
      if (!isString(props) && !Array.isArray(props)) {
        console.error('MUI: Argument "props" must be a string or Array.');
      }
      if (!isNumber(durationOption) && !isString(durationOption)) {
        console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
      }
      if (!isString(easingOption)) {
        console.error('MUI: Argument "easing" must be a string.');
      }
      if (!isNumber(delay) && !isString(delay)) {
        console.error('MUI: Argument "delay" must be a number or a string.');
      }
      if (typeof options !== 'object') {
        console.error(['MUI: Secong argument of transition.create must be an object.', "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join('\n'));
      }
      if (Object.keys(other).length !== 0) {
        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);
      }
    }
    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');
  };
  return _extends({
    getAutoHeightDuration,
    create
  }, inputTransitions, {
    easing: mergedEasing,
    duration: mergedDuration
  });
}

// We need to centralize the zIndex definitions as they work
// like global values in the browser.
const zIndex = {
  mobileStepper: 1000,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
var zIndex$1 = zIndex;

const _excluded$7 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
function createTheme(options = {}, ...args) {
  const {
      mixins: mixinsInput = {},
      palette: paletteInput = {},
      transitions: transitionsInput = {},
      typography: typographyInput = {}
    } = options,
    other = _objectWithoutPropertiesLoose$1(options, _excluded$7);
  if (options.vars) {
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: \`vars\` is a private field used for CSS variables support.
Please use another name.` : formatMuiErrorMessage(18));
  }
  const palette = createPalette(paletteInput);
  const systemTheme = createTheme$1(options);
  let muiTheme = deepmerge(systemTheme, {
    mixins: createMixins(systemTheme.breakpoints, mixinsInput),
    palette,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: shadows$1.slice(),
    typography: createTypography(palette, typographyInput),
    transitions: createTransitions(transitionsInput),
    zIndex: _extends({}, zIndex$1)
  });
  muiTheme = deepmerge(muiTheme, other);
  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);
  if (process.env.NODE_ENV !== 'production') {
    // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.
    const stateClasses = ['active', 'checked', 'completed', 'disabled', 'error', 'expanded', 'focused', 'focusVisible', 'required', 'selected'];
    const traverse = (node, component) => {
      let key;

      // eslint-disable-next-line guard-for-in, no-restricted-syntax
      for (key in node) {
        const child = node[key];
        if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {
          if (process.env.NODE_ENV !== 'production') {
            const stateClass = generateUtilityClass('', key);
            console.error([`MUI: The \`${component}\` component increases ` + `the CSS specificity of the \`${key}\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({
              root: {
                [`&.${stateClass}`]: child
              }
            }, null, 2), '', 'https://mui.com/r/state-classes-guide'].join('\n'));
          }
          // Remove the style to prevent global conflicts.
          node[key] = {};
        }
      }
    };
    Object.keys(muiTheme.components).forEach(component => {
      const styleOverrides = muiTheme.components[component].styleOverrides;
      if (styleOverrides && component.indexOf('Mui') === 0) {
        traverse(styleOverrides, component);
      }
    });
  }
  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig$1, other == null ? void 0 : other.unstable_sxConfig);
  muiTheme.unstable_sx = function sx(props) {
    return styleFunctionSx$1({
      sx: props,
      theme: this
    });
  };
  return muiTheme;
}

const defaultTheme = createTheme();
var defaultTheme$1 = defaultTheme;

function useTheme() {
  const theme = useTheme$1(defaultTheme$1);
  if (process.env.NODE_ENV !== 'production') {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    React__namespace.useDebugValue(theme);
  }
  return theme[THEME_ID] || theme;
}

function useThemeProps({
  props,
  name
}) {
  return useThemeProps$1({
    props,
    name,
    defaultTheme: defaultTheme$1,
    themeId: THEME_ID
  });
}

const rootShouldForwardProp = prop => shouldForwardProp(prop) && prop !== 'classes';
const styled = createStyled({
  themeId: THEME_ID,
  defaultTheme: defaultTheme$1,
  rootShouldForwardProp
});
var styled$1 = styled;

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

var config = {
  disabled: false
};

var timeoutsShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.number, PropTypes.shape({
  enter: PropTypes.number,
  exit: PropTypes.number,
  appear: PropTypes.number
}).isRequired]) : null;
process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.string, PropTypes.shape({
  enter: PropTypes.string,
  exit: PropTypes.string,
  active: PropTypes.string
}), PropTypes.shape({
  enter: PropTypes.string,
  enterDone: PropTypes.string,
  enterActive: PropTypes.string,
  exit: PropTypes.string,
  exitDone: PropTypes.string,
  exitActive: PropTypes.string
})]) : null;

var TransitionGroupContext = React.createContext(null);

var forceReflow = function forceReflow(node) {
  return node.scrollTop;
};

var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749
          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.
          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.

          if (node) forceReflow(node);
        }

        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;

    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],
        maybeNode = _ref2[0],
        maybeAppearing = _ref2[1];

    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }

    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);

      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };

  _proto.performExit = function performExit() {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }

    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);

      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
          maybeNode = _ref3[0],
          maybeNextCallback = _ref3[1];

      this.props.addEndListener(maybeNode, maybeNextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children;
        _this$props.in;
        _this$props.mountOnEnter;
        _this$props.unmountOnExit;
        _this$props.appear;
        _this$props.enter;
        _this$props.exit;
        _this$props.timeout;
        _this$props.addEndListener;
        _this$props.onEnter;
        _this$props.onEntering;
        _this$props.onEntered;
        _this$props.onExit;
        _this$props.onExiting;
        _this$props.onExited;
        _this$props.nodeRef;
        var childProps = _objectWithoutPropertiesLoose$1(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);

    return (
      /*#__PURE__*/
      // allows for nested Transitions
      React.createElement(TransitionGroupContext.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))
    );
  };

  return Transition;
}(React.Component);

Transition.contextType = TransitionGroupContext;
Transition.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: PropTypes.shape({
    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),

  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes.bool,

  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: PropTypes.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes.func
} : {}; // Name the function so it is clearer in the documentation

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition$1 = Transition;

const reflow = node => node.scrollTop;
function getTransitionProps(props, options) {
  var _style$transitionDura, _style$transitionTimi;
  const {
    timeout,
    easing,
    style = {}
  } = props;
  return {
    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,
    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,
    delay: style.transitionDelay
  };
}

/**
 * Determines if a given element is a DOM element name (i.e. not a React component).
 */
function isHostComponent(element) {
  return typeof element === 'string';
}

/**
 * Type of the ownerState based on the type of an element it applies to.
 * This resolves to the provided OwnerState for React components and `undefined` for host components.
 * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.
 */

/**
 * Appends the ownerState object to the props, merging with the existing one if necessary.
 *
 * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.
 * @param otherProps Props of the element.
 * @param ownerState
 */
function appendOwnerState(elementType, otherProps, ownerState) {
  if (elementType === undefined || isHostComponent(elementType)) {
    return otherProps;
  }
  return _extends({}, otherProps, {
    ownerState: _extends({}, otherProps.ownerState, ownerState)
  });
}

const defaultContextValue = {
  disableDefaultClasses: false
};
const ClassNameConfiguratorContext = /*#__PURE__*/React__namespace.createContext(defaultContextValue);
/**
 * @ignore - internal hook.
 *
 * Wraps the `generateUtilityClass` function and controls how the classes are generated.
 * Currently it only affects whether the classes are applied or not.
 *
 * @returns Function to be called with the `generateUtilityClass` function specific to a component to generate the classes.
 */
function useClassNamesOverride(generateUtilityClass) {
  const {
    disableDefaultClasses
  } = React__namespace.useContext(ClassNameConfiguratorContext);
  return slot => {
    if (disableDefaultClasses) {
      return '';
    }
    return generateUtilityClass(slot);
  };
}

/**
 * Extracts event handlers from a given object.
 * A prop is considered an event handler if it is a function and its name starts with `on`.
 *
 * @param object An object to extract event handlers from.
 * @param excludeKeys An array of keys to exclude from the returned object.
 */
function extractEventHandlers(object, excludeKeys = []) {
  if (object === undefined) {
    return {};
  }
  const result = {};
  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {
    result[prop] = object[prop];
  });
  return result;
}

/**
 * If `componentProps` is a function, calls it with the provided `ownerState`.
 * Otherwise, just returns `componentProps`.
 */
function resolveComponentProps(componentProps, ownerState, slotState) {
  if (typeof componentProps === 'function') {
    return componentProps(ownerState, slotState);
  }
  return componentProps;
}

/**
 * Removes event handlers from the given object.
 * A field is considered an event handler if it is a function with a name beginning with `on`.
 *
 * @param object Object to remove event handlers from.
 * @returns Object with event handlers removed.
 */
function omitEventHandlers(object) {
  if (object === undefined) {
    return {};
  }
  const result = {};
  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {
    result[prop] = object[prop];
  });
  return result;
}

/**
 * Merges the slot component internal props (usually coming from a hook)
 * with the externally provided ones.
 *
 * The merge order is (the latter overrides the former):
 * 1. The internal props (specified as a getter function to work with get*Props hook result)
 * 2. Additional props (specified internally on a Base UI component)
 * 3. External props specified on the owner component. These should only be used on a root slot.
 * 4. External props specified in the `slotProps.*` prop.
 * 5. The `className` prop - combined from all the above.
 * @param parameters
 * @returns
 */
function mergeSlotProps(parameters) {
  const {
    getSlotProps,
    additionalProps,
    externalSlotProps,
    externalForwardedProps,
    className
  } = parameters;
  if (!getSlotProps) {
    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,
    // so we can simply merge all the props without having to worry about extracting event handlers.
    const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);
    const mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);
    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);
    if (joinedClasses.length > 0) {
      props.className = joinedClasses;
    }
    if (Object.keys(mergedStyle).length > 0) {
      props.style = mergedStyle;
    }
    return {
      props,
      internalRef: undefined
    };
  }

  // In this case, getSlotProps is responsible for calling the external event handlers.
  // We don't need to include them in the merged props because of this.

  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));
  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);
  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);
  const internalSlotProps = getSlotProps(eventHandlers);

  // The order of classes is important here.
  // Emotion (that we use in libraries consuming Base UI) depends on this order
  // to properly override style. It requires the most important classes to be last
  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.
  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);
  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);
  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);
  if (joinedClasses.length > 0) {
    props.className = joinedClasses;
  }
  if (Object.keys(mergedStyle).length > 0) {
    props.style = mergedStyle;
  }
  return {
    props,
    internalRef: internalSlotProps.ref
  };
}

const _excluded$6 = ["elementType", "externalSlotProps", "ownerState", "skipResolvingSlotProps"];
/**
 * @ignore - do not document.
 * Builds the props to be passed into the slot of an unstyled component.
 * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.
 * If the slot component is not a host component, it also merges in the `ownerState`.
 *
 * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.
 */
function useSlotProps(parameters) {
  var _parameters$additiona;
  const {
      elementType,
      externalSlotProps,
      ownerState,
      skipResolvingSlotProps = false
    } = parameters,
    rest = _objectWithoutPropertiesLoose$1(parameters, _excluded$6);
  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);
  const {
    props: mergedProps,
    internalRef
  } = mergeSlotProps(_extends({}, rest, {
    externalSlotProps: resolvedComponentsProps
  }));
  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);
  const props = appendOwnerState(elementType, _extends({}, mergedProps, {
    ref
  }), ownerState);
  return props;
}

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement$1(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement$1(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect$2(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement$1(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect$2,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

var max = Math.max;
var min = Math.min;
var round$1 = Math.round;

function getUAString() {
  var uaData = navigator.userAgentData;

  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function (item) {
      return item.brand + "/" + item.version;
    }).join(' ');
  }

  return navigator.userAgent;
}

function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }

  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (includeScale && isHTMLElement$1(element)) {
    scaleX = element.offsetWidth > 0 ? round$1(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round$1(clientRect.height) / element.offsetHeight || 1 : 1;
  }

  var _ref = isElement(element) ? getWindow(element) : window,
      visualViewport = _ref.visualViewport;

  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x: x,
    y: y
  };
}

// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement$1(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());

  if (isIE && isHTMLElement$1(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode(element);

  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }

  while (isHTMLElement$1(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var arrow$1 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

function getVariation(placement) {
  return placement.split('-')[1];
}

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x,
      y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round$1(x * dpr) / dpr || 0,
    y: round$1(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }, getWindow(popper)) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};

var hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash$1[matched];
  });
}

var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();

    if (layoutViewport || !layoutViewport && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle(body || html).direction === 'rtl') {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement$1(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}

function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === 'fixed');
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement$1(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$strategy = _options.strategy,
      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$1 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$1 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$1 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min$1 = offset + overflow[mainSide];
    var max$1 = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? top : left;

    var _altSide = mainAxis === 'x' ? bottom : right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$1 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement$1(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round$1(rect.width) / element.offsetWidth || 1;
  var scaleY = round$1(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement$1(offsetParent);
  var offsetParentIsScaled = isHTMLElement$1(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement$1(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref) {
        var name = _ref.name,
            _ref$options = _ref.options,
            options = _ref$options === void 0 ? {} : _ref$options,
            effect = _ref.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
var createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

function getContainer(container) {
  return typeof container === 'function' ? container() : container;
}

/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 *
 * Demos:
 *
 * - [Portal](https://mui.com/base-ui/react-portal/)
 *
 * API:
 *
 * - [Portal API](https://mui.com/base-ui/react-portal/components-api/#portal)
 */
const Portal = /*#__PURE__*/React__namespace.forwardRef(function Portal(props, forwardedRef) {
  const {
    children,
    container,
    disablePortal = false
  } = props;
  const [mountNode, setMountNode] = React__namespace.useState(null);
  // @ts-expect-error TODO upstream fix
  const handleRef = useForkRef( /*#__PURE__*/React__namespace.isValidElement(children) ? children.ref : null, forwardedRef);
  useEnhancedEffect$1(() => {
    if (!disablePortal) {
      setMountNode(getContainer(container) || document.body);
    }
  }, [container, disablePortal]);
  useEnhancedEffect$1(() => {
    if (mountNode && !disablePortal) {
      setRef(forwardedRef, mountNode);
      return () => {
        setRef(forwardedRef, null);
      };
    }
    return undefined;
  }, [forwardedRef, mountNode, disablePortal]);
  if (disablePortal) {
    if ( /*#__PURE__*/React__namespace.isValidElement(children)) {
      const newProps = {
        ref: handleRef
      };
      return /*#__PURE__*/React__namespace.cloneElement(children, newProps);
    }
    return /*#__PURE__*/jsxRuntimeExports.jsx(React__namespace.Fragment, {
      children: children
    });
  }
  return /*#__PURE__*/jsxRuntimeExports.jsx(React__namespace.Fragment, {
    children: mountNode ? /*#__PURE__*/ReactDOM__namespace.createPortal(children, mountNode) : mountNode
  });
});
process.env.NODE_ENV !== "production" ? Portal.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The children to render into the `container`.
   */
  children: PropTypes.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: PropTypes.bool
} : void 0;
if (process.env.NODE_ENV !== 'production') {
  // eslint-disable-next-line
  Portal['propTypes' + ''] = exactProp(Portal.propTypes);
}

function getPopperUtilityClass(slot) {
  return generateUtilityClass('MuiPopper', slot);
}
generateUtilityClasses('MuiPopper', ['root']);

const _excluded$5 = ["anchorEl", "children", "direction", "disablePortal", "modifiers", "open", "placement", "popperOptions", "popperRef", "slotProps", "slots", "TransitionProps", "ownerState"],
  _excluded2 = ["anchorEl", "children", "container", "direction", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition", "slotProps", "slots"];
function flipPlacement(placement, direction) {
  if (direction === 'ltr') {
    return placement;
  }
  switch (placement) {
    case 'bottom-end':
      return 'bottom-start';
    case 'bottom-start':
      return 'bottom-end';
    case 'top-end':
      return 'top-start';
    case 'top-start':
      return 'top-end';
    default:
      return placement;
  }
}
function resolveAnchorEl(anchorEl) {
  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
}
function isHTMLElement(element) {
  return element.nodeType !== undefined;
}
function isVirtualElement(element) {
  return !isHTMLElement(element);
}
const useUtilityClasses$1 = () => {
  const slots = {
    root: ['root']
  };
  return composeClasses(slots, useClassNamesOverride(getPopperUtilityClass));
};
const defaultPopperOptions = {};
const PopperTooltip = /*#__PURE__*/React__namespace.forwardRef(function PopperTooltip(props, forwardedRef) {
  var _slots$root;
  const {
      anchorEl,
      children,
      direction,
      disablePortal,
      modifiers,
      open,
      placement: initialPlacement,
      popperOptions,
      popperRef: popperRefProp,
      slotProps = {},
      slots = {},
      TransitionProps
      // @ts-ignore internal logic
      // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    } = props,
    other = _objectWithoutPropertiesLoose$1(props, _excluded$5);
  const tooltipRef = React__namespace.useRef(null);
  const ownRef = useForkRef(tooltipRef, forwardedRef);
  const popperRef = React__namespace.useRef(null);
  const handlePopperRef = useForkRef(popperRef, popperRefProp);
  const handlePopperRefRef = React__namespace.useRef(handlePopperRef);
  useEnhancedEffect$1(() => {
    handlePopperRefRef.current = handlePopperRef;
  }, [handlePopperRef]);
  React__namespace.useImperativeHandle(popperRefProp, () => popperRef.current, []);
  const rtlPlacement = flipPlacement(initialPlacement, direction);
  /**
   * placement initialized from prop but can change during lifetime if modifiers.flip.
   * modifiers.flip is essentially a flip for controlled/uncontrolled behavior
   */
  const [placement, setPlacement] = React__namespace.useState(rtlPlacement);
  const [resolvedAnchorElement, setResolvedAnchorElement] = React__namespace.useState(resolveAnchorEl(anchorEl));
  React__namespace.useEffect(() => {
    if (popperRef.current) {
      popperRef.current.forceUpdate();
    }
  });
  React__namespace.useEffect(() => {
    if (anchorEl) {
      setResolvedAnchorElement(resolveAnchorEl(anchorEl));
    }
  }, [anchorEl]);
  useEnhancedEffect$1(() => {
    if (!resolvedAnchorElement || !open) {
      return undefined;
    }
    const handlePopperUpdate = data => {
      setPlacement(data.placement);
    };
    if (process.env.NODE_ENV !== 'production') {
      if (resolvedAnchorElement && isHTMLElement(resolvedAnchorElement) && resolvedAnchorElement.nodeType === 1) {
        const box = resolvedAnchorElement.getBoundingClientRect();
        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          console.warn(['MUI: The `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', "Make sure the element is present in the document or that it's not display none."].join('\n'));
        }
      }
    }
    let popperModifiers = [{
      name: 'preventOverflow',
      options: {
        altBoundary: disablePortal
      }
    }, {
      name: 'flip',
      options: {
        altBoundary: disablePortal
      }
    }, {
      name: 'onUpdate',
      enabled: true,
      phase: 'afterWrite',
      fn: ({
        state
      }) => {
        handlePopperUpdate(state);
      }
    }];
    if (modifiers != null) {
      popperModifiers = popperModifiers.concat(modifiers);
    }
    if (popperOptions && popperOptions.modifiers != null) {
      popperModifiers = popperModifiers.concat(popperOptions.modifiers);
    }
    const popper = createPopper(resolvedAnchorElement, tooltipRef.current, _extends({
      placement: rtlPlacement
    }, popperOptions, {
      modifiers: popperModifiers
    }));
    handlePopperRefRef.current(popper);
    return () => {
      popper.destroy();
      handlePopperRefRef.current(null);
    };
  }, [resolvedAnchorElement, disablePortal, modifiers, open, popperOptions, rtlPlacement]);
  const childProps = {
    placement: placement
  };
  if (TransitionProps !== null) {
    childProps.TransitionProps = TransitionProps;
  }
  const classes = useUtilityClasses$1();
  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      role: 'tooltip',
      ref: ownRef
    },
    ownerState: props,
    className: classes.root
  });
  return /*#__PURE__*/jsxRuntimeExports.jsx(Root, _extends({}, rootProps, {
    children: typeof children === 'function' ? children(childProps) : children
  }));
});

/**
 * Poppers rely on the 3rd party library [Popper.js](https://popper.js.org/docs/v2/) for positioning.
 *
 * Demos:
 *
 * - [Popper](https://mui.com/base-ui/react-popper/)
 *
 * API:
 *
 * - [Popper API](https://mui.com/base-ui/react-popper/components-api/#popper)
 */
const Popper$2 = /*#__PURE__*/React__namespace.forwardRef(function Popper(props, forwardedRef) {
  const {
      anchorEl,
      children,
      container: containerProp,
      direction = 'ltr',
      disablePortal = false,
      keepMounted = false,
      modifiers,
      open,
      placement = 'bottom',
      popperOptions = defaultPopperOptions,
      popperRef,
      style,
      transition = false,
      slotProps = {},
      slots = {}
    } = props,
    other = _objectWithoutPropertiesLoose$1(props, _excluded2);
  const [exited, setExited] = React__namespace.useState(true);
  const handleEnter = () => {
    setExited(false);
  };
  const handleExited = () => {
    setExited(true);
  };
  if (!keepMounted && !open && (!transition || exited)) {
    return null;
  }

  // If the container prop is provided, use that
  // If the anchorEl prop is provided, use its parent body element as the container
  // If neither are provided let the Modal take care of choosing the container
  let container;
  if (containerProp) {
    container = containerProp;
  } else if (anchorEl) {
    const resolvedAnchorEl = resolveAnchorEl(anchorEl);
    container = resolvedAnchorEl && isHTMLElement(resolvedAnchorEl) ? ownerDocument(resolvedAnchorEl).body : ownerDocument(null).body;
  }
  const display = !open && keepMounted && (!transition || exited) ? 'none' : undefined;
  const transitionProps = transition ? {
    in: open,
    onEnter: handleEnter,
    onExited: handleExited
  } : undefined;
  return /*#__PURE__*/jsxRuntimeExports.jsx(Portal, {
    disablePortal: disablePortal,
    container: container,
    children: /*#__PURE__*/jsxRuntimeExports.jsx(PopperTooltip, _extends({
      anchorEl: anchorEl,
      direction: direction,
      disablePortal: disablePortal,
      modifiers: modifiers,
      ref: forwardedRef,
      open: transition ? !exited : open,
      placement: placement,
      popperOptions: popperOptions,
      popperRef: popperRef,
      slotProps: slotProps,
      slots: slots
    }, other, {
      style: _extends({
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: 'fixed',
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display
      }, style),
      TransitionProps: transitionProps,
      children: children
    }))
  });
});
process.env.NODE_ENV !== "production" ? Popper$2.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: chainPropTypes(PropTypes.oneOfType([HTMLElementType, PropTypes.object, PropTypes.func]), props => {
    if (props.open) {
      const resolvedAnchorEl = resolveAnchorEl(props.anchorEl);
      if (resolvedAnchorEl && isHTMLElement(resolvedAnchorEl) && resolvedAnchorEl.nodeType === 1) {
        const box = resolvedAnchorEl.getBoundingClientRect();
        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          return new Error(['MUI: The `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', "Make sure the element is present in the document or that it's not display none."].join('\n'));
        }
      } else if (!resolvedAnchorEl || typeof resolvedAnchorEl.getBoundingClientRect !== 'function' || isVirtualElement(resolvedAnchorEl) && resolvedAnchorEl.contextElement != null && resolvedAnchorEl.contextElement.nodeType !== 1) {
        return new Error(['MUI: The `anchorEl` prop provided to the component is invalid.', 'It should be an HTML element instance or a virtualElement ', '(https://popper.js.org/docs/v2/virtual-elements/).'].join('\n'));
      }
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.node, PropTypes.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: PropTypes.oneOf(['ltr', 'rtl']),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: PropTypes.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: PropTypes.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: PropTypes.arrayOf(PropTypes.shape({
    data: PropTypes.object,
    effect: PropTypes.func,
    enabled: PropTypes.bool,
    fn: PropTypes.func,
    name: PropTypes.any,
    options: PropTypes.object,
    phase: PropTypes.oneOf(['afterMain', 'afterRead', 'afterWrite', 'beforeMain', 'beforeRead', 'beforeWrite', 'main', 'read', 'write']),
    requires: PropTypes.arrayOf(PropTypes.string),
    requiresIfExists: PropTypes.arrayOf(PropTypes.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: PropTypes.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: PropTypes.oneOf(['auto-end', 'auto-start', 'auto', 'bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: PropTypes.shape({
    modifiers: PropTypes.array,
    onFirstUpdate: PropTypes.func,
    placement: PropTypes.oneOf(['auto-end', 'auto-start', 'auto', 'bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),
    strategy: PropTypes.oneOf(['absolute', 'fixed'])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: refType$1,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: PropTypes.shape({
    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: PropTypes.shape({
    root: PropTypes.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: PropTypes.bool
} : void 0;

const _excluded$4 = ["anchorEl", "component", "components", "componentsProps", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "transition", "slots", "slotProps"];
const PopperRoot = styled$1(Popper$2, {
  name: 'MuiPopper',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({});

/**
 *
 * Demos:
 *
 * - [Autocomplete](https://mui.com/material-ui/react-autocomplete/)
 * - [Menu](https://mui.com/material-ui/react-menu/)
 * - [Popper](https://mui.com/material-ui/react-popper/)
 *
 * API:
 *
 * - [Popper API](https://mui.com/material-ui/api/popper/)
 */
const Popper = /*#__PURE__*/React__namespace.forwardRef(function Popper(inProps, ref) {
  var _slots$root;
  const theme = useTheme$2();
  const props = useThemeProps({
    props: inProps,
    name: 'MuiPopper'
  });
  const {
      anchorEl,
      component,
      components,
      componentsProps,
      container,
      disablePortal,
      keepMounted,
      modifiers,
      open,
      placement,
      popperOptions,
      popperRef,
      transition,
      slots,
      slotProps
    } = props,
    other = _objectWithoutPropertiesLoose$1(props, _excluded$4);
  const RootComponent = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components == null ? void 0 : components.Root;
  const otherProps = _extends({
    anchorEl,
    container,
    disablePortal,
    keepMounted,
    modifiers,
    open,
    placement,
    popperOptions,
    popperRef,
    transition
  }, other);
  return /*#__PURE__*/jsxRuntimeExports.jsx(PopperRoot, _extends({
    as: component,
    direction: theme == null ? void 0 : theme.direction,
    slots: {
      root: RootComponent
    },
    slotProps: slotProps != null ? slotProps : componentsProps
  }, otherProps, {
    ref: ref
  }));
});
process.env.NODE_ENV !== "production" ? Popper.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.object, PropTypes.func]),
  /**
   * Popper render function or node.
   */
  children: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.node, PropTypes.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: PropTypes.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  components: PropTypes.shape({
    Root: PropTypes.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  componentsProps: PropTypes.shape({
    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: PropTypes.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: PropTypes.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: PropTypes.arrayOf(PropTypes.shape({
    data: PropTypes.object,
    effect: PropTypes.func,
    enabled: PropTypes.bool,
    fn: PropTypes.func,
    name: PropTypes.any,
    options: PropTypes.object,
    phase: PropTypes.oneOf(['afterMain', 'afterRead', 'afterWrite', 'beforeMain', 'beforeRead', 'beforeWrite', 'main', 'read', 'write']),
    requires: PropTypes.arrayOf(PropTypes.string),
    requiresIfExists: PropTypes.arrayOf(PropTypes.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: PropTypes.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: PropTypes.oneOf(['auto-end', 'auto-start', 'auto', 'bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: PropTypes.shape({
    modifiers: PropTypes.array,
    onFirstUpdate: PropTypes.func,
    placement: PropTypes.oneOf(['auto-end', 'auto-start', 'auto', 'bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),
    strategy: PropTypes.oneOf(['absolute', 'fixed'])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: refType$1,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: PropTypes.shape({
    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: PropTypes.shape({
    root: PropTypes.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: PropTypes.bool
} : void 0;
var Popper$1 = Popper;

const _excluded$3 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function getScale(value) {
  return `scale(${value}, ${value ** 2})`;
}
const styles = {
  entering: {
    opacity: 1,
    transform: getScale(1)
  },
  entered: {
    opacity: 1,
    transform: 'none'
  }
};

/*
 TODO v6: remove
 Conditionally apply a workaround for the CSS transition bug in Safari 15.4 / WebKit browsers.
 */
const isWebKit154 = typeof navigator !== 'undefined' && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent);

/**
 * The Grow transition is used by the [Tooltip](/material-ui/react-tooltip/) and
 * [Popover](/material-ui/react-popover/) components.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */
const Grow = /*#__PURE__*/React__namespace.forwardRef(function Grow(props, ref) {
  const {
      addEndListener,
      appear = true,
      children,
      easing,
      in: inProp,
      onEnter,
      onEntered,
      onEntering,
      onExit,
      onExited,
      onExiting,
      style,
      timeout = 'auto',
      // eslint-disable-next-line react/prop-types
      TransitionComponent = Transition$1
    } = props,
    other = _objectWithoutPropertiesLoose$1(props, _excluded$3);
  const timer = React__namespace.useRef();
  const autoTimeout = React__namespace.useRef();
  const theme = useTheme();
  const nodeRef = React__namespace.useRef(null);
  const handleRef = useForkRef(nodeRef, children.ref, ref);
  const normalizedTransitionCallback = callback => maybeIsAppearing => {
    if (callback) {
      const node = nodeRef.current;

      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
      if (maybeIsAppearing === undefined) {
        callback(node);
      } else {
        callback(node, maybeIsAppearing);
      }
    }
  };
  const handleEntering = normalizedTransitionCallback(onEntering);
  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    reflow(node); // So the animation always start from the start.

    const {
      duration: transitionDuration,
      delay,
      easing: transitionTimingFunction
    } = getTransitionProps({
      style,
      timeout,
      easing
    }, {
      mode: 'enter'
    });
    let duration;
    if (timeout === 'auto') {
      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
      autoTimeout.current = duration;
    } else {
      duration = transitionDuration;
    }
    node.style.transition = [theme.transitions.create('opacity', {
      duration,
      delay
    }), theme.transitions.create('transform', {
      duration: isWebKit154 ? duration : duration * 0.666,
      delay,
      easing: transitionTimingFunction
    })].join(',');
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback(onEntered);
  const handleExiting = normalizedTransitionCallback(onExiting);
  const handleExit = normalizedTransitionCallback(node => {
    const {
      duration: transitionDuration,
      delay,
      easing: transitionTimingFunction
    } = getTransitionProps({
      style,
      timeout,
      easing
    }, {
      mode: 'exit'
    });
    let duration;
    if (timeout === 'auto') {
      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
      autoTimeout.current = duration;
    } else {
      duration = transitionDuration;
    }
    node.style.transition = [theme.transitions.create('opacity', {
      duration,
      delay
    }), theme.transitions.create('transform', {
      duration: isWebKit154 ? duration : duration * 0.666,
      delay: isWebKit154 ? delay : delay || duration * 0.333,
      easing: transitionTimingFunction
    })].join(',');
    node.style.opacity = 0;
    node.style.transform = getScale(0.75);
    if (onExit) {
      onExit(node);
    }
  });
  const handleExited = normalizedTransitionCallback(onExited);
  const handleAddEndListener = next => {
    if (timeout === 'auto') {
      timer.current = setTimeout(next, autoTimeout.current || 0);
    }
    if (addEndListener) {
      // Old call signature before `react-transition-group` implemented `nodeRef`
      addEndListener(nodeRef.current, next);
    }
  };
  React__namespace.useEffect(() => {
    return () => {
      clearTimeout(timer.current);
    };
  }, []);
  return /*#__PURE__*/jsxRuntimeExports.jsx(TransitionComponent, _extends({
    appear: appear,
    in: inProp,
    nodeRef: nodeRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout === 'auto' ? null : timeout
  }, other, {
    children: (state, childProps) => {
      return /*#__PURE__*/React__namespace.cloneElement(children, _extends({
        style: _extends({
          opacity: 0,
          transform: getScale(0.75),
          visibility: state === 'exited' && !inProp ? 'hidden' : undefined
        }, styles[state], style, children.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
process.env.NODE_ENV !== "production" ? Grow.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: PropTypes.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: PropTypes.bool,
  /**
   * A single child content element.
   */
  children: elementAcceptingRef$1.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: PropTypes.oneOfType([PropTypes.shape({
    enter: PropTypes.string,
    exit: PropTypes.string
  }), PropTypes.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: PropTypes.bool,
  /**
   * @ignore
   */
  onEnter: PropTypes.func,
  /**
   * @ignore
   */
  onEntered: PropTypes.func,
  /**
   * @ignore
   */
  onEntering: PropTypes.func,
  /**
   * @ignore
   */
  onExit: PropTypes.func,
  /**
   * @ignore
   */
  onExited: PropTypes.func,
  /**
   * @ignore
   */
  onExiting: PropTypes.func,
  /**
   * @ignore
   */
  style: PropTypes.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({
    appear: PropTypes.number,
    enter: PropTypes.number,
    exit: PropTypes.number
  })])
} : void 0;
Grow.muiSupportAuto = true;
var Grow$1 = Grow;

function getTooltipUtilityClass(slot) {
  return generateUtilityClass('MuiTooltip', slot);
}
const tooltipClasses = generateUtilityClasses('MuiTooltip', ['popper', 'popperInteractive', 'popperArrow', 'popperClose', 'tooltip', 'tooltipArrow', 'touch', 'tooltipPlacementLeft', 'tooltipPlacementRight', 'tooltipPlacementTop', 'tooltipPlacementBottom', 'arrow']);
var tooltipClasses$1 = tooltipClasses;

const _excluded$2 = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "slotProps", "slots", "title", "TransitionComponent", "TransitionProps"];
function round(value) {
  return Math.round(value * 1e5) / 1e5;
}
const useUtilityClasses = ownerState => {
  const {
    classes,
    disableInteractive,
    arrow,
    touch,
    placement
  } = ownerState;
  const slots = {
    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],
    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', `tooltipPlacement${capitalize(placement.split('-')[0])}`],
    arrow: ['arrow']
  };
  return composeClasses(slots, getTooltipUtilityClass, classes);
};
const TooltipPopper = styled$1(Popper$1, {
  name: 'MuiTooltip',
  slot: 'Popper',
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.popper, !ownerState.disableInteractive && styles.popperInteractive, ownerState.arrow && styles.popperArrow, !ownerState.open && styles.popperClose];
  }
})(({
  theme,
  ownerState,
  open
}) => _extends({
  zIndex: (theme.vars || theme).zIndex.tooltip,
  pointerEvents: 'none'
}, !ownerState.disableInteractive && {
  pointerEvents: 'auto'
}, !open && {
  pointerEvents: 'none'
}, ownerState.arrow && {
  [`&[data-popper-placement*="bottom"] .${tooltipClasses$1.arrow}`]: {
    top: 0,
    marginTop: '-0.71em',
    '&::before': {
      transformOrigin: '0 100%'
    }
  },
  [`&[data-popper-placement*="top"] .${tooltipClasses$1.arrow}`]: {
    bottom: 0,
    marginBottom: '-0.71em',
    '&::before': {
      transformOrigin: '100% 0'
    }
  },
  [`&[data-popper-placement*="right"] .${tooltipClasses$1.arrow}`]: _extends({}, !ownerState.isRtl ? {
    left: 0,
    marginLeft: '-0.71em'
  } : {
    right: 0,
    marginRight: '-0.71em'
  }, {
    height: '1em',
    width: '0.71em',
    '&::before': {
      transformOrigin: '100% 100%'
    }
  }),
  [`&[data-popper-placement*="left"] .${tooltipClasses$1.arrow}`]: _extends({}, !ownerState.isRtl ? {
    right: 0,
    marginRight: '-0.71em'
  } : {
    left: 0,
    marginLeft: '-0.71em'
  }, {
    height: '1em',
    width: '0.71em',
    '&::before': {
      transformOrigin: '0 0'
    }
  })
}));
const TooltipTooltip = styled$1('div', {
  name: 'MuiTooltip',
  slot: 'Tooltip',
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.tooltip, ownerState.touch && styles.touch, ownerState.arrow && styles.tooltipArrow, styles[`tooltipPlacement${capitalize(ownerState.placement.split('-')[0])}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  backgroundColor: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.92),
  borderRadius: (theme.vars || theme).shape.borderRadius,
  color: (theme.vars || theme).palette.common.white,
  fontFamily: theme.typography.fontFamily,
  padding: '4px 8px',
  fontSize: theme.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: 'break-word',
  fontWeight: theme.typography.fontWeightMedium
}, ownerState.arrow && {
  position: 'relative',
  margin: 0
}, ownerState.touch && {
  padding: '8px 16px',
  fontSize: theme.typography.pxToRem(14),
  lineHeight: `${round(16 / 14)}em`,
  fontWeight: theme.typography.fontWeightRegular
}, {
  [`.${tooltipClasses$1.popper}[data-popper-placement*="left"] &`]: _extends({
    transformOrigin: 'right center'
  }, !ownerState.isRtl ? _extends({
    marginRight: '14px'
  }, ownerState.touch && {
    marginRight: '24px'
  }) : _extends({
    marginLeft: '14px'
  }, ownerState.touch && {
    marginLeft: '24px'
  })),
  [`.${tooltipClasses$1.popper}[data-popper-placement*="right"] &`]: _extends({
    transformOrigin: 'left center'
  }, !ownerState.isRtl ? _extends({
    marginLeft: '14px'
  }, ownerState.touch && {
    marginLeft: '24px'
  }) : _extends({
    marginRight: '14px'
  }, ownerState.touch && {
    marginRight: '24px'
  })),
  [`.${tooltipClasses$1.popper}[data-popper-placement*="top"] &`]: _extends({
    transformOrigin: 'center bottom',
    marginBottom: '14px'
  }, ownerState.touch && {
    marginBottom: '24px'
  }),
  [`.${tooltipClasses$1.popper}[data-popper-placement*="bottom"] &`]: _extends({
    transformOrigin: 'center top',
    marginTop: '14px'
  }, ownerState.touch && {
    marginTop: '24px'
  })
}));
const TooltipArrow = styled$1('span', {
  name: 'MuiTooltip',
  slot: 'Arrow',
  overridesResolver: (props, styles) => styles.arrow
})(({
  theme
}) => ({
  overflow: 'hidden',
  position: 'absolute',
  width: '1em',
  height: '0.71em' /* = width / sqrt(2) = (length of the hypotenuse) */,
  boxSizing: 'border-box',
  color: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.9),
  '&::before': {
    content: '""',
    margin: 'auto',
    display: 'block',
    width: '100%',
    height: '100%',
    backgroundColor: 'currentColor',
    transform: 'rotate(45deg)'
  }
}));
let hystersisOpen = false;
let hystersisTimer = null;
let cursorPosition = {
  x: 0,
  y: 0
};
function composeEventHandler(handler, eventHandler) {
  return event => {
    if (eventHandler) {
      eventHandler(event);
    }
    handler(event);
  };
}

// TODO v6: Remove PopperComponent, PopperProps, TransitionComponent and TransitionProps.
const Tooltip = /*#__PURE__*/React__namespace.forwardRef(function Tooltip(inProps, ref) {
  var _ref, _slots$popper, _ref2, _ref3, _slots$transition, _ref4, _slots$tooltip, _ref5, _slots$arrow, _slotProps$popper, _ref6, _slotProps$popper2, _slotProps$transition, _slotProps$tooltip, _ref7, _slotProps$tooltip2, _slotProps$arrow, _ref8, _slotProps$arrow2;
  const props = useThemeProps({
    props: inProps,
    name: 'MuiTooltip'
  });
  const {
      arrow = false,
      children: childrenProp,
      components = {},
      componentsProps = {},
      describeChild = false,
      disableFocusListener = false,
      disableHoverListener = false,
      disableInteractive: disableInteractiveProp = false,
      disableTouchListener = false,
      enterDelay = 100,
      enterNextDelay = 0,
      enterTouchDelay = 700,
      followCursor = false,
      id: idProp,
      leaveDelay = 0,
      leaveTouchDelay = 1500,
      onClose,
      onOpen,
      open: openProp,
      placement = 'bottom',
      PopperComponent: PopperComponentProp,
      PopperProps = {},
      slotProps = {},
      slots = {},
      title,
      TransitionComponent: TransitionComponentProp = Grow$1,
      TransitionProps
    } = props,
    other = _objectWithoutPropertiesLoose$1(props, _excluded$2);

  // to prevent runtime errors, developers will need to provide a child as a React element anyway.
  const children = /*#__PURE__*/React__namespace.isValidElement(childrenProp) ? childrenProp : /*#__PURE__*/jsxRuntimeExports.jsx("span", {
    children: childrenProp
  });
  const theme = useTheme();
  const isRtl = theme.direction === 'rtl';
  const [childNode, setChildNode] = React__namespace.useState();
  const [arrowRef, setArrowRef] = React__namespace.useState(null);
  const ignoreNonTouchEvents = React__namespace.useRef(false);
  const disableInteractive = disableInteractiveProp || followCursor;
  const closeTimer = React__namespace.useRef();
  const enterTimer = React__namespace.useRef();
  const leaveTimer = React__namespace.useRef();
  const touchTimer = React__namespace.useRef();
  const [openState, setOpenState] = useControlled({
    controlled: openProp,
    default: false,
    name: 'Tooltip',
    state: 'open'
  });
  let open = openState;
  if (process.env.NODE_ENV !== 'production') {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    const {
      current: isControlled
    } = React__namespace.useRef(openProp !== undefined);

    // eslint-disable-next-line react-hooks/rules-of-hooks
    React__namespace.useEffect(() => {
      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {
        console.error(['MUI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', "Tooltip needs to listen to the child element's events to display the title.", '', 'Add a simple wrapper element, such as a `span`.'].join('\n'));
      }
    }, [title, childNode, isControlled]);
  }
  const id = useId(idProp);
  const prevUserSelect = React__namespace.useRef();
  const stopTouchInteraction = React__namespace.useCallback(() => {
    if (prevUserSelect.current !== undefined) {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      prevUserSelect.current = undefined;
    }
    clearTimeout(touchTimer.current);
  }, []);
  React__namespace.useEffect(() => {
    return () => {
      clearTimeout(closeTimer.current);
      clearTimeout(enterTimer.current);
      clearTimeout(leaveTimer.current);
      stopTouchInteraction();
    };
  }, [stopTouchInteraction]);
  const handleOpen = event => {
    clearTimeout(hystersisTimer);
    hystersisOpen = true;

    // The mouseover event will trigger for every nested element in the tooltip.
    // We can skip rerendering when the tooltip is already open.
    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.
    setOpenState(true);
    if (onOpen && !open) {
      onOpen(event);
    }
  };
  const handleClose = useEventCallback(
  /**
   * @param {React.SyntheticEvent | Event} event
   */
  event => {
    clearTimeout(hystersisTimer);
    hystersisTimer = setTimeout(() => {
      hystersisOpen = false;
    }, 800 + leaveDelay);
    setOpenState(false);
    if (onClose && open) {
      onClose(event);
    }
    clearTimeout(closeTimer.current);
    closeTimer.current = setTimeout(() => {
      ignoreNonTouchEvents.current = false;
    }, theme.transitions.duration.shortest);
  });
  const handleEnter = event => {
    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {
      return;
    }

    // Remove the title ahead of time.
    // We don't want to wait for the next render commit.
    // We would risk displaying two tooltips at the same time (native + this one).
    if (childNode) {
      childNode.removeAttribute('title');
    }
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    if (enterDelay || hystersisOpen && enterNextDelay) {
      enterTimer.current = setTimeout(() => {
        handleOpen(event);
      }, hystersisOpen ? enterNextDelay : enterDelay);
    } else {
      handleOpen(event);
    }
  };
  const handleLeave = event => {
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveDelay);
  };
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).
  // We just need to re-render the Tooltip if the focus-visible state changes.
  const [, setChildIsFocusVisible] = React__namespace.useState(false);
  const handleBlur = event => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setChildIsFocusVisible(false);
      handleLeave(event);
    }
  };
  const handleFocus = event => {
    // Workaround for https://github.com/facebook/react/issues/7769
    // The autoFocus of React might trigger the event before the componentDidMount.
    // We need to account for this eventuality.
    if (!childNode) {
      setChildNode(event.currentTarget);
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setChildIsFocusVisible(true);
      handleEnter(event);
    }
  };
  const detectTouchStart = event => {
    ignoreNonTouchEvents.current = true;
    const childrenProps = children.props;
    if (childrenProps.onTouchStart) {
      childrenProps.onTouchStart(event);
    }
  };
  const handleMouseOver = handleEnter;
  const handleMouseLeave = handleLeave;
  const handleTouchStart = event => {
    detectTouchStart(event);
    clearTimeout(leaveTimer.current);
    clearTimeout(closeTimer.current);
    stopTouchInteraction();
    prevUserSelect.current = document.body.style.WebkitUserSelect;
    // Prevent iOS text selection on long-tap.
    document.body.style.WebkitUserSelect = 'none';
    touchTimer.current = setTimeout(() => {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      handleEnter(event);
    }, enterTouchDelay);
  };
  const handleTouchEnd = event => {
    if (children.props.onTouchEnd) {
      children.props.onTouchEnd(event);
    }
    stopTouchInteraction();
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveTouchDelay);
  };
  React__namespace.useEffect(() => {
    if (!open) {
      return undefined;
    }

    /**
     * @param {KeyboardEvent} nativeEvent
     */
    function handleKeyDown(nativeEvent) {
      // IE11, Edge (prior to using Bink?) use 'Esc'
      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {
        handleClose(nativeEvent);
      }
    }
    document.addEventListener('keydown', handleKeyDown);
    return () => {
      document.removeEventListener('keydown', handleKeyDown);
    };
  }, [handleClose, open]);
  const handleRef = useForkRef(children.ref, focusVisibleRef, setChildNode, ref);

  // There is no point in displaying an empty tooltip.
  if (!title && title !== 0) {
    open = false;
  }
  const popperRef = React__namespace.useRef();
  const handleMouseMove = event => {
    const childrenProps = children.props;
    if (childrenProps.onMouseMove) {
      childrenProps.onMouseMove(event);
    }
    cursorPosition = {
      x: event.clientX,
      y: event.clientY
    };
    if (popperRef.current) {
      popperRef.current.update();
    }
  };
  const nameOrDescProps = {};
  const titleIsString = typeof title === 'string';
  if (describeChild) {
    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;
    nameOrDescProps['aria-describedby'] = open ? id : null;
  } else {
    nameOrDescProps['aria-label'] = titleIsString ? title : null;
    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;
  }
  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {
    className: clsx(other.className, children.props.className),
    onTouchStart: detectTouchStart,
    ref: handleRef
  }, followCursor ? {
    onMouseMove: handleMouseMove
  } : {});
  if (process.env.NODE_ENV !== 'production') {
    childrenProps['data-mui-internal-clone-element'] = true;

    // eslint-disable-next-line react-hooks/rules-of-hooks
    React__namespace.useEffect(() => {
      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {
        console.error(['MUI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\n'));
      }
    }, [childNode]);
  }
  const interactiveWrapperListeners = {};
  if (!disableTouchListener) {
    childrenProps.onTouchStart = handleTouchStart;
    childrenProps.onTouchEnd = handleTouchEnd;
  }
  if (!disableHoverListener) {
    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);
    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);
    if (!disableInteractive) {
      interactiveWrapperListeners.onMouseOver = handleMouseOver;
      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;
    }
  }
  if (!disableFocusListener) {
    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);
    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);
    if (!disableInteractive) {
      interactiveWrapperListeners.onFocus = handleFocus;
      interactiveWrapperListeners.onBlur = handleBlur;
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (children.props.title) {
      console.error(['MUI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \`${children.props.title}\` or the Tooltip component.`].join('\n'));
    }
  }
  const popperOptions = React__namespace.useMemo(() => {
    var _PopperProps$popperOp;
    let tooltipModifiers = [{
      name: 'arrow',
      enabled: Boolean(arrowRef),
      options: {
        element: arrowRef,
        padding: 4
      }
    }];
    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {
      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);
    }
    return _extends({}, PopperProps.popperOptions, {
      modifiers: tooltipModifiers
    });
  }, [arrowRef, PopperProps]);
  const ownerState = _extends({}, props, {
    isRtl,
    arrow,
    disableInteractive,
    placement,
    PopperComponentProp,
    touch: ignoreNonTouchEvents.current
  });
  const classes = useUtilityClasses(ownerState);
  const PopperComponent = (_ref = (_slots$popper = slots.popper) != null ? _slots$popper : components.Popper) != null ? _ref : TooltipPopper;
  const TransitionComponent = (_ref2 = (_ref3 = (_slots$transition = slots.transition) != null ? _slots$transition : components.Transition) != null ? _ref3 : TransitionComponentProp) != null ? _ref2 : Grow$1;
  const TooltipComponent = (_ref4 = (_slots$tooltip = slots.tooltip) != null ? _slots$tooltip : components.Tooltip) != null ? _ref4 : TooltipTooltip;
  const ArrowComponent = (_ref5 = (_slots$arrow = slots.arrow) != null ? _slots$arrow : components.Arrow) != null ? _ref5 : TooltipArrow;
  const popperProps = appendOwnerState(PopperComponent, _extends({}, PopperProps, (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper, {
    className: clsx(classes.popper, PopperProps == null ? void 0 : PopperProps.className, (_ref6 = (_slotProps$popper2 = slotProps.popper) != null ? _slotProps$popper2 : componentsProps.popper) == null ? void 0 : _ref6.className)
  }), ownerState);
  const transitionProps = appendOwnerState(TransitionComponent, _extends({}, TransitionProps, (_slotProps$transition = slotProps.transition) != null ? _slotProps$transition : componentsProps.transition), ownerState);
  const tooltipProps = appendOwnerState(TooltipComponent, _extends({}, (_slotProps$tooltip = slotProps.tooltip) != null ? _slotProps$tooltip : componentsProps.tooltip, {
    className: clsx(classes.tooltip, (_ref7 = (_slotProps$tooltip2 = slotProps.tooltip) != null ? _slotProps$tooltip2 : componentsProps.tooltip) == null ? void 0 : _ref7.className)
  }), ownerState);
  const tooltipArrowProps = appendOwnerState(ArrowComponent, _extends({}, (_slotProps$arrow = slotProps.arrow) != null ? _slotProps$arrow : componentsProps.arrow, {
    className: clsx(classes.arrow, (_ref8 = (_slotProps$arrow2 = slotProps.arrow) != null ? _slotProps$arrow2 : componentsProps.arrow) == null ? void 0 : _ref8.className)
  }), ownerState);
  return /*#__PURE__*/jsxRuntimeExports.jsxs(React__namespace.Fragment, {
    children: [/*#__PURE__*/React__namespace.cloneElement(children, childrenProps), /*#__PURE__*/jsxRuntimeExports.jsx(PopperComponent, _extends({
      as: PopperComponentProp != null ? PopperComponentProp : Popper$1,
      placement: placement,
      anchorEl: followCursor ? {
        getBoundingClientRect: () => ({
          top: cursorPosition.y,
          left: cursorPosition.x,
          right: cursorPosition.x,
          bottom: cursorPosition.y,
          width: 0,
          height: 0
        })
      } : childNode,
      popperRef: popperRef,
      open: childNode ? open : false,
      id: id,
      transition: true
    }, interactiveWrapperListeners, popperProps, {
      popperOptions: popperOptions,
      children: ({
        TransitionProps: TransitionPropsInner
      }) => /*#__PURE__*/jsxRuntimeExports.jsx(TransitionComponent, _extends({
        timeout: theme.transitions.duration.shorter
      }, TransitionPropsInner, transitionProps, {
        children: /*#__PURE__*/jsxRuntimeExports.jsxs(TooltipComponent, _extends({}, tooltipProps, {
          children: [title, arrow ? /*#__PURE__*/jsxRuntimeExports.jsx(ArrowComponent, _extends({}, tooltipArrowProps, {
            ref: setArrowRef
          })) : null]
        }))
      }))
    }))]
  });
});
process.env.NODE_ENV !== "production" ? Tooltip.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: PropTypes.bool,
  /**
   * Tooltip reference element.
   */
  children: elementAcceptingRef$1.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: PropTypes.object,
  /**
   * @ignore
   */
  className: PropTypes.string,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: PropTypes.shape({
    Arrow: PropTypes.elementType,
    Popper: PropTypes.elementType,
    Tooltip: PropTypes.elementType,
    Transition: PropTypes.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: PropTypes.shape({
    arrow: PropTypes.object,
    popper: PropTypes.object,
    tooltip: PropTypes.object,
    transition: PropTypes.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: PropTypes.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: PropTypes.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: PropTypes.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: PropTypes.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: PropTypes.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: PropTypes.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: PropTypes.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: PropTypes.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: PropTypes.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: PropTypes.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: PropTypes.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: PropTypes.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: PropTypes.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: PropTypes.func,
  /**
   * If `true`, the component is shown.
   */
  open: PropTypes.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),
  /**
   * The component used for the popper.
   * @default Popper
   */
  PopperComponent: PropTypes.elementType,
  /**
   * Props applied to the [`Popper`](/material-ui/api/popper/) element.
   * @default {}
   */
  PopperProps: PropTypes.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: PropTypes.shape({
    arrow: PropTypes.object,
    popper: PropTypes.object,
    tooltip: PropTypes.object,
    transition: PropTypes.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: PropTypes.shape({
    arrow: PropTypes.elementType,
    popper: PropTypes.elementType,
    tooltip: PropTypes.elementType,
    transition: PropTypes.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: PropTypes.node,
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: PropTypes.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: PropTypes.object
} : void 0;
var Tooltip$1 = Tooltip;

var lottie$1 = {exports: {}};

(function (module, exports) {
	(typeof navigator !== "undefined") && (function (global, factory) {
	  module.exports = factory() ;
	})(commonjsGlobal, (function () {
	  var svgNS = 'http://www.w3.org/2000/svg';
	  var locationHref = '';
	  var _useWebWorker = false;
	  var initialDefaultFrame = -999999;

	  var setWebWorker = function setWebWorker(flag) {
	    _useWebWorker = !!flag;
	  };

	  var getWebWorker = function getWebWorker() {
	    return _useWebWorker;
	  };

	  var setLocationHref = function setLocationHref(value) {
	    locationHref = value;
	  };

	  var getLocationHref = function getLocationHref() {
	    return locationHref;
	  };

	  function createTag(type) {
	    // return {appendChild:function(){},setAttribute:function(){},style:{}}
	    return document.createElement(type);
	  }

	  function extendPrototype(sources, destination) {
	    var i;
	    var len = sources.length;
	    var sourcePrototype;

	    for (i = 0; i < len; i += 1) {
	      sourcePrototype = sources[i].prototype;

	      for (var attr in sourcePrototype) {
	        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];
	      }
	    }
	  }

	  function getDescriptor(object, prop) {
	    return Object.getOwnPropertyDescriptor(object, prop);
	  }

	  function createProxyFunction(prototype) {
	    function ProxyFunction() {}

	    ProxyFunction.prototype = prototype;
	    return ProxyFunction;
	  }

	  // import Howl from '../../3rd_party/howler';
	  var audioControllerFactory = function () {
	    function AudioController(audioFactory) {
	      this.audios = [];
	      this.audioFactory = audioFactory;
	      this._volume = 1;
	      this._isMuted = false;
	    }

	    AudioController.prototype = {
	      addAudio: function addAudio(audio) {
	        this.audios.push(audio);
	      },
	      pause: function pause() {
	        var i;
	        var len = this.audios.length;

	        for (i = 0; i < len; i += 1) {
	          this.audios[i].pause();
	        }
	      },
	      resume: function resume() {
	        var i;
	        var len = this.audios.length;

	        for (i = 0; i < len; i += 1) {
	          this.audios[i].resume();
	        }
	      },
	      setRate: function setRate(rateValue) {
	        var i;
	        var len = this.audios.length;

	        for (i = 0; i < len; i += 1) {
	          this.audios[i].setRate(rateValue);
	        }
	      },
	      createAudio: function createAudio(assetPath) {
	        if (this.audioFactory) {
	          return this.audioFactory(assetPath);
	        }

	        if (window.Howl) {
	          return new window.Howl({
	            src: [assetPath]
	          });
	        }

	        return {
	          isPlaying: false,
	          play: function play() {
	            this.isPlaying = true;
	          },
	          seek: function seek() {
	            this.isPlaying = false;
	          },
	          playing: function playing() {},
	          rate: function rate() {},
	          setVolume: function setVolume() {}
	        };
	      },
	      setAudioFactory: function setAudioFactory(audioFactory) {
	        this.audioFactory = audioFactory;
	      },
	      setVolume: function setVolume(value) {
	        this._volume = value;

	        this._updateVolume();
	      },
	      mute: function mute() {
	        this._isMuted = true;

	        this._updateVolume();
	      },
	      unmute: function unmute() {
	        this._isMuted = false;

	        this._updateVolume();
	      },
	      getVolume: function getVolume() {
	        return this._volume;
	      },
	      _updateVolume: function _updateVolume() {
	        var i;
	        var len = this.audios.length;

	        for (i = 0; i < len; i += 1) {
	          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));
	        }
	      }
	    };
	    return function () {
	      return new AudioController();
	    };
	  }();

	  var createTypedArray = function () {
	    function createRegularArray(type, len) {
	      var i = 0;
	      var arr = [];
	      var value;

	      switch (type) {
	        case 'int16':
	        case 'uint8c':
	          value = 1;
	          break;

	        default:
	          value = 1.1;
	          break;
	      }

	      for (i = 0; i < len; i += 1) {
	        arr.push(value);
	      }

	      return arr;
	    }

	    function createTypedArrayFactory(type, len) {
	      if (type === 'float32') {
	        return new Float32Array(len);
	      }

	      if (type === 'int16') {
	        return new Int16Array(len);
	      }

	      if (type === 'uint8c') {
	        return new Uint8ClampedArray(len);
	      }

	      return createRegularArray(type, len);
	    }

	    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {
	      return createTypedArrayFactory;
	    }

	    return createRegularArray;
	  }();

	  function createSizedArray(len) {
	    return Array.apply(null, {
	      length: len
	    });
	  }

	  function _typeof$6(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$6 = function _typeof(obj) { return typeof obj; }; } else { _typeof$6 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$6(obj); }
	  var subframeEnabled = true;
	  var expressionsPlugin = null;
	  var expressionsInterfaces = null;
	  var idPrefix$1 = '';
	  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
	  var bmPow = Math.pow;
	  var bmSqrt = Math.sqrt;
	  var bmFloor = Math.floor;
	  var bmMax = Math.max;
	  var bmMin = Math.min;
	  var BMMath = {};

	  (function () {
	    var propertyNames = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'atan2', 'ceil', 'cbrt', 'expm1', 'clz32', 'cos', 'cosh', 'exp', 'floor', 'fround', 'hypot', 'imul', 'log', 'log1p', 'log2', 'log10', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc', 'E', 'LN10', 'LN2', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];
	    var i;
	    var len = propertyNames.length;

	    for (i = 0; i < len; i += 1) {
	      BMMath[propertyNames[i]] = Math[propertyNames[i]];
	    }
	  })();

	  BMMath.random = Math.random;

	  BMMath.abs = function (val) {
	    var tOfVal = _typeof$6(val);

	    if (tOfVal === 'object' && val.length) {
	      var absArr = createSizedArray(val.length);
	      var i;
	      var len = val.length;

	      for (i = 0; i < len; i += 1) {
	        absArr[i] = Math.abs(val[i]);
	      }

	      return absArr;
	    }

	    return Math.abs(val);
	  };

	  var defaultCurveSegments = 150;
	  var degToRads = Math.PI / 180;
	  var roundCorner = 0.5519;

	  function styleDiv(element) {
	    element.style.position = 'absolute';
	    element.style.top = 0;
	    element.style.left = 0;
	    element.style.display = 'block';
	    element.style.transformOrigin = '0 0';
	    element.style.webkitTransformOrigin = '0 0';
	    element.style.backfaceVisibility = 'visible';
	    element.style.webkitBackfaceVisibility = 'visible';
	    element.style.transformStyle = 'preserve-3d';
	    element.style.webkitTransformStyle = 'preserve-3d';
	    element.style.mozTransformStyle = 'preserve-3d';
	  }

	  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {
	    this.type = type;
	    this.currentTime = currentTime;
	    this.totalTime = totalTime;
	    this.direction = frameMultiplier < 0 ? -1 : 1;
	  }

	  function BMCompleteEvent(type, frameMultiplier) {
	    this.type = type;
	    this.direction = frameMultiplier < 0 ? -1 : 1;
	  }

	  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {
	    this.type = type;
	    this.currentLoop = currentLoop;
	    this.totalLoops = totalLoops;
	    this.direction = frameMultiplier < 0 ? -1 : 1;
	  }

	  function BMSegmentStartEvent(type, firstFrame, totalFrames) {
	    this.type = type;
	    this.firstFrame = firstFrame;
	    this.totalFrames = totalFrames;
	  }

	  function BMDestroyEvent(type, target) {
	    this.type = type;
	    this.target = target;
	  }

	  function BMRenderFrameErrorEvent(nativeError, currentTime) {
	    this.type = 'renderFrameError';
	    this.nativeError = nativeError;
	    this.currentTime = currentTime;
	  }

	  function BMConfigErrorEvent(nativeError) {
	    this.type = 'configError';
	    this.nativeError = nativeError;
	  }

	  var createElementID = function () {
	    var _count = 0;
	    return function createID() {
	      _count += 1;
	      return idPrefix$1 + '__lottie_element_' + _count;
	    };
	  }();

	  function HSVtoRGB(h, s, v) {
	    var r;
	    var g;
	    var b;
	    var i;
	    var f;
	    var p;
	    var q;
	    var t;
	    i = Math.floor(h * 6);
	    f = h * 6 - i;
	    p = v * (1 - s);
	    q = v * (1 - f * s);
	    t = v * (1 - (1 - f) * s);

	    switch (i % 6) {
	      case 0:
	        r = v;
	        g = t;
	        b = p;
	        break;

	      case 1:
	        r = q;
	        g = v;
	        b = p;
	        break;

	      case 2:
	        r = p;
	        g = v;
	        b = t;
	        break;

	      case 3:
	        r = p;
	        g = q;
	        b = v;
	        break;

	      case 4:
	        r = t;
	        g = p;
	        b = v;
	        break;

	      case 5:
	        r = v;
	        g = p;
	        b = q;
	        break;
	    }

	    return [r, g, b];
	  }

	  function RGBtoHSV(r, g, b) {
	    var max = Math.max(r, g, b);
	    var min = Math.min(r, g, b);
	    var d = max - min;
	    var h;
	    var s = max === 0 ? 0 : d / max;
	    var v = max / 255;

	    switch (max) {
	      case min:
	        h = 0;
	        break;

	      case r:
	        h = g - b + d * (g < b ? 6 : 0);
	        h /= 6 * d;
	        break;

	      case g:
	        h = b - r + d * 2;
	        h /= 6 * d;
	        break;

	      case b:
	        h = r - g + d * 4;
	        h /= 6 * d;
	        break;
	    }

	    return [h, s, v];
	  }

	  function addSaturationToRGB(color, offset) {
	    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
	    hsv[1] += offset;

	    if (hsv[1] > 1) {
	      hsv[1] = 1;
	    } else if (hsv[1] <= 0) {
	      hsv[1] = 0;
	    }

	    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
	  }

	  function addBrightnessToRGB(color, offset) {
	    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
	    hsv[2] += offset;

	    if (hsv[2] > 1) {
	      hsv[2] = 1;
	    } else if (hsv[2] < 0) {
	      hsv[2] = 0;
	    }

	    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
	  }

	  function addHueToRGB(color, offset) {
	    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
	    hsv[0] += offset / 360;

	    if (hsv[0] > 1) {
	      hsv[0] -= 1;
	    } else if (hsv[0] < 0) {
	      hsv[0] += 1;
	    }

	    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
	  }

	  var rgbToHex = function () {
	    var colorMap = [];
	    var i;
	    var hex;

	    for (i = 0; i < 256; i += 1) {
	      hex = i.toString(16);
	      colorMap[i] = hex.length === 1 ? '0' + hex : hex;
	    }

	    return function (r, g, b) {
	      if (r < 0) {
	        r = 0;
	      }

	      if (g < 0) {
	        g = 0;
	      }

	      if (b < 0) {
	        b = 0;
	      }

	      return '#' + colorMap[r] + colorMap[g] + colorMap[b];
	    };
	  }();

	  var setSubframeEnabled = function setSubframeEnabled(flag) {
	    subframeEnabled = !!flag;
	  };

	  var getSubframeEnabled = function getSubframeEnabled() {
	    return subframeEnabled;
	  };

	  var setExpressionsPlugin = function setExpressionsPlugin(value) {
	    expressionsPlugin = value;
	  };

	  var getExpressionsPlugin = function getExpressionsPlugin() {
	    return expressionsPlugin;
	  };

	  var setExpressionInterfaces = function setExpressionInterfaces(value) {
	    expressionsInterfaces = value;
	  };

	  var getExpressionInterfaces = function getExpressionInterfaces() {
	    return expressionsInterfaces;
	  };

	  var setDefaultCurveSegments = function setDefaultCurveSegments(value) {
	    defaultCurveSegments = value;
	  };

	  var getDefaultCurveSegments = function getDefaultCurveSegments() {
	    return defaultCurveSegments;
	  };

	  var setIdPrefix = function setIdPrefix(value) {
	    idPrefix$1 = value;
	  };

	  function createNS(type) {
	    // return {appendChild:function(){},setAttribute:function(){},style:{}}
	    return document.createElementNS(svgNS, type);
	  }

	  function _typeof$5(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$5 = function _typeof(obj) { return typeof obj; }; } else { _typeof$5 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$5(obj); }

	  var dataManager = function () {
	    var _counterId = 1;
	    var processes = [];
	    var workerFn;
	    var workerInstance;
	    var workerProxy = {
	      onmessage: function onmessage() {},
	      postMessage: function postMessage(path) {
	        workerFn({
	          data: path
	        });
	      }
	    };
	    var _workerSelf = {
	      postMessage: function postMessage(data) {
	        workerProxy.onmessage({
	          data: data
	        });
	      }
	    };

	    function createWorker(fn) {
	      if (window.Worker && window.Blob && getWebWorker()) {
	        var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], {
	          type: 'text/javascript'
	        }); // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });

	        var url = URL.createObjectURL(blob);
	        return new Worker(url);
	      }

	      workerFn = fn;
	      return workerProxy;
	    }

	    function setupWorker() {
	      if (!workerInstance) {
	        workerInstance = createWorker(function workerStart(e) {
	          function dataFunctionManager() {
	            function completeLayers(layers, comps) {
	              var layerData;
	              var i;
	              var len = layers.length;
	              var j;
	              var jLen;
	              var k;
	              var kLen;

	              for (i = 0; i < len; i += 1) {
	                layerData = layers[i];

	                if ('ks' in layerData && !layerData.completed) {
	                  layerData.completed = true;

	                  if (layerData.hasMask) {
	                    var maskProps = layerData.masksProperties;
	                    jLen = maskProps.length;

	                    for (j = 0; j < jLen; j += 1) {
	                      if (maskProps[j].pt.k.i) {
	                        convertPathsToAbsoluteValues(maskProps[j].pt.k);
	                      } else {
	                        kLen = maskProps[j].pt.k.length;

	                        for (k = 0; k < kLen; k += 1) {
	                          if (maskProps[j].pt.k[k].s) {
	                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);
	                          }

	                          if (maskProps[j].pt.k[k].e) {
	                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);
	                          }
	                        }
	                      }
	                    }
	                  }

	                  if (layerData.ty === 0) {
	                    layerData.layers = findCompLayers(layerData.refId, comps);
	                    completeLayers(layerData.layers, comps);
	                  } else if (layerData.ty === 4) {
	                    completeShapes(layerData.shapes);
	                  } else if (layerData.ty === 5) {
	                    completeText(layerData);
	                  }
	                }
	              }
	            }

	            function completeChars(chars, assets) {
	              if (chars) {
	                var i = 0;
	                var len = chars.length;

	                for (i = 0; i < len; i += 1) {
	                  if (chars[i].t === 1) {
	                    // var compData = findComp(chars[i].data.refId, assets);
	                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets); // chars[i].data.ip = 0;
	                    // chars[i].data.op = 99999;
	                    // chars[i].data.st = 0;
	                    // chars[i].data.sr = 1;
	                    // chars[i].w = compData.w;
	                    // chars[i].data.ks = {
	                    //   a: { k: [0, 0, 0], a: 0 },
	                    //   p: { k: [0, -compData.h, 0], a: 0 },
	                    //   r: { k: 0, a: 0 },
	                    //   s: { k: [100, 100], a: 0 },
	                    //   o: { k: 100, a: 0 },
	                    // };

	                    completeLayers(chars[i].data.layers, assets);
	                  }
	                }
	              }
	            }

	            function findComp(id, comps) {
	              var i = 0;
	              var len = comps.length;

	              while (i < len) {
	                if (comps[i].id === id) {
	                  return comps[i];
	                }

	                i += 1;
	              }

	              return null;
	            }

	            function findCompLayers(id, comps) {
	              var comp = findComp(id, comps);

	              if (comp) {
	                if (!comp.layers.__used) {
	                  comp.layers.__used = true;
	                  return comp.layers;
	                }

	                return JSON.parse(JSON.stringify(comp.layers));
	              }

	              return null;
	            }

	            function completeShapes(arr) {
	              var i;
	              var len = arr.length;
	              var j;
	              var jLen;

	              for (i = len - 1; i >= 0; i -= 1) {
	                if (arr[i].ty === 'sh') {
	                  if (arr[i].ks.k.i) {
	                    convertPathsToAbsoluteValues(arr[i].ks.k);
	                  } else {
	                    jLen = arr[i].ks.k.length;

	                    for (j = 0; j < jLen; j += 1) {
	                      if (arr[i].ks.k[j].s) {
	                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);
	                      }

	                      if (arr[i].ks.k[j].e) {
	                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);
	                      }
	                    }
	                  }
	                } else if (arr[i].ty === 'gr') {
	                  completeShapes(arr[i].it);
	                }
	              }
	            }

	            function convertPathsToAbsoluteValues(path) {
	              var i;
	              var len = path.i.length;

	              for (i = 0; i < len; i += 1) {
	                path.i[i][0] += path.v[i][0];
	                path.i[i][1] += path.v[i][1];
	                path.o[i][0] += path.v[i][0];
	                path.o[i][1] += path.v[i][1];
	              }
	            }

	            function checkVersion(minimum, animVersionString) {
	              var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];

	              if (minimum[0] > animVersion[0]) {
	                return true;
	              }

	              if (animVersion[0] > minimum[0]) {
	                return false;
	              }

	              if (minimum[1] > animVersion[1]) {
	                return true;
	              }

	              if (animVersion[1] > minimum[1]) {
	                return false;
	              }

	              if (minimum[2] > animVersion[2]) {
	                return true;
	              }

	              if (animVersion[2] > minimum[2]) {
	                return false;
	              }

	              return null;
	            }

	            var checkText = function () {
	              var minimumVersion = [4, 4, 14];

	              function updateTextLayer(textLayer) {
	                var documentData = textLayer.t.d;
	                textLayer.t.d = {
	                  k: [{
	                    s: documentData,
	                    t: 0
	                  }]
	                };
	              }

	              function iterateLayers(layers) {
	                var i;
	                var len = layers.length;

	                for (i = 0; i < len; i += 1) {
	                  if (layers[i].ty === 5) {
	                    updateTextLayer(layers[i]);
	                  }
	                }
	              }

	              return function (animationData) {
	                if (checkVersion(minimumVersion, animationData.v)) {
	                  iterateLayers(animationData.layers);

	                  if (animationData.assets) {
	                    var i;
	                    var len = animationData.assets.length;

	                    for (i = 0; i < len; i += 1) {
	                      if (animationData.assets[i].layers) {
	                        iterateLayers(animationData.assets[i].layers);
	                      }
	                    }
	                  }
	                }
	              };
	            }();

	            var checkChars = function () {
	              var minimumVersion = [4, 7, 99];
	              return function (animationData) {
	                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {
	                  var i;
	                  var len = animationData.chars.length;

	                  for (i = 0; i < len; i += 1) {
	                    var charData = animationData.chars[i];

	                    if (charData.data && charData.data.shapes) {
	                      completeShapes(charData.data.shapes);
	                      charData.data.ip = 0;
	                      charData.data.op = 99999;
	                      charData.data.st = 0;
	                      charData.data.sr = 1;
	                      charData.data.ks = {
	                        p: {
	                          k: [0, 0],
	                          a: 0
	                        },
	                        s: {
	                          k: [100, 100],
	                          a: 0
	                        },
	                        a: {
	                          k: [0, 0],
	                          a: 0
	                        },
	                        r: {
	                          k: 0,
	                          a: 0
	                        },
	                        o: {
	                          k: 100,
	                          a: 0
	                        }
	                      };

	                      if (!animationData.chars[i].t) {
	                        charData.data.shapes.push({
	                          ty: 'no'
	                        });
	                        charData.data.shapes[0].it.push({
	                          p: {
	                            k: [0, 0],
	                            a: 0
	                          },
	                          s: {
	                            k: [100, 100],
	                            a: 0
	                          },
	                          a: {
	                            k: [0, 0],
	                            a: 0
	                          },
	                          r: {
	                            k: 0,
	                            a: 0
	                          },
	                          o: {
	                            k: 100,
	                            a: 0
	                          },
	                          sk: {
	                            k: 0,
	                            a: 0
	                          },
	                          sa: {
	                            k: 0,
	                            a: 0
	                          },
	                          ty: 'tr'
	                        });
	                      }
	                    }
	                  }
	                }
	              };
	            }();

	            var checkPathProperties = function () {
	              var minimumVersion = [5, 7, 15];

	              function updateTextLayer(textLayer) {
	                var pathData = textLayer.t.p;

	                if (typeof pathData.a === 'number') {
	                  pathData.a = {
	                    a: 0,
	                    k: pathData.a
	                  };
	                }

	                if (typeof pathData.p === 'number') {
	                  pathData.p = {
	                    a: 0,
	                    k: pathData.p
	                  };
	                }

	                if (typeof pathData.r === 'number') {
	                  pathData.r = {
	                    a: 0,
	                    k: pathData.r
	                  };
	                }
	              }

	              function iterateLayers(layers) {
	                var i;
	                var len = layers.length;

	                for (i = 0; i < len; i += 1) {
	                  if (layers[i].ty === 5) {
	                    updateTextLayer(layers[i]);
	                  }
	                }
	              }

	              return function (animationData) {
	                if (checkVersion(minimumVersion, animationData.v)) {
	                  iterateLayers(animationData.layers);

	                  if (animationData.assets) {
	                    var i;
	                    var len = animationData.assets.length;

	                    for (i = 0; i < len; i += 1) {
	                      if (animationData.assets[i].layers) {
	                        iterateLayers(animationData.assets[i].layers);
	                      }
	                    }
	                  }
	                }
	              };
	            }();

	            var checkColors = function () {
	              var minimumVersion = [4, 1, 9];

	              function iterateShapes(shapes) {
	                var i;
	                var len = shapes.length;
	                var j;
	                var jLen;

	                for (i = 0; i < len; i += 1) {
	                  if (shapes[i].ty === 'gr') {
	                    iterateShapes(shapes[i].it);
	                  } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {
	                    if (shapes[i].c.k && shapes[i].c.k[0].i) {
	                      jLen = shapes[i].c.k.length;

	                      for (j = 0; j < jLen; j += 1) {
	                        if (shapes[i].c.k[j].s) {
	                          shapes[i].c.k[j].s[0] /= 255;
	                          shapes[i].c.k[j].s[1] /= 255;
	                          shapes[i].c.k[j].s[2] /= 255;
	                          shapes[i].c.k[j].s[3] /= 255;
	                        }

	                        if (shapes[i].c.k[j].e) {
	                          shapes[i].c.k[j].e[0] /= 255;
	                          shapes[i].c.k[j].e[1] /= 255;
	                          shapes[i].c.k[j].e[2] /= 255;
	                          shapes[i].c.k[j].e[3] /= 255;
	                        }
	                      }
	                    } else {
	                      shapes[i].c.k[0] /= 255;
	                      shapes[i].c.k[1] /= 255;
	                      shapes[i].c.k[2] /= 255;
	                      shapes[i].c.k[3] /= 255;
	                    }
	                  }
	                }
	              }

	              function iterateLayers(layers) {
	                var i;
	                var len = layers.length;

	                for (i = 0; i < len; i += 1) {
	                  if (layers[i].ty === 4) {
	                    iterateShapes(layers[i].shapes);
	                  }
	                }
	              }

	              return function (animationData) {
	                if (checkVersion(minimumVersion, animationData.v)) {
	                  iterateLayers(animationData.layers);

	                  if (animationData.assets) {
	                    var i;
	                    var len = animationData.assets.length;

	                    for (i = 0; i < len; i += 1) {
	                      if (animationData.assets[i].layers) {
	                        iterateLayers(animationData.assets[i].layers);
	                      }
	                    }
	                  }
	                }
	              };
	            }();

	            var checkShapes = function () {
	              var minimumVersion = [4, 4, 18];

	              function completeClosingShapes(arr) {
	                var i;
	                var len = arr.length;
	                var j;
	                var jLen;

	                for (i = len - 1; i >= 0; i -= 1) {
	                  if (arr[i].ty === 'sh') {
	                    if (arr[i].ks.k.i) {
	                      arr[i].ks.k.c = arr[i].closed;
	                    } else {
	                      jLen = arr[i].ks.k.length;

	                      for (j = 0; j < jLen; j += 1) {
	                        if (arr[i].ks.k[j].s) {
	                          arr[i].ks.k[j].s[0].c = arr[i].closed;
	                        }

	                        if (arr[i].ks.k[j].e) {
	                          arr[i].ks.k[j].e[0].c = arr[i].closed;
	                        }
	                      }
	                    }
	                  } else if (arr[i].ty === 'gr') {
	                    completeClosingShapes(arr[i].it);
	                  }
	                }
	              }

	              function iterateLayers(layers) {
	                var layerData;
	                var i;
	                var len = layers.length;
	                var j;
	                var jLen;
	                var k;
	                var kLen;

	                for (i = 0; i < len; i += 1) {
	                  layerData = layers[i];

	                  if (layerData.hasMask) {
	                    var maskProps = layerData.masksProperties;
	                    jLen = maskProps.length;

	                    for (j = 0; j < jLen; j += 1) {
	                      if (maskProps[j].pt.k.i) {
	                        maskProps[j].pt.k.c = maskProps[j].cl;
	                      } else {
	                        kLen = maskProps[j].pt.k.length;

	                        for (k = 0; k < kLen; k += 1) {
	                          if (maskProps[j].pt.k[k].s) {
	                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;
	                          }

	                          if (maskProps[j].pt.k[k].e) {
	                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;
	                          }
	                        }
	                      }
	                    }
	                  }

	                  if (layerData.ty === 4) {
	                    completeClosingShapes(layerData.shapes);
	                  }
	                }
	              }

	              return function (animationData) {
	                if (checkVersion(minimumVersion, animationData.v)) {
	                  iterateLayers(animationData.layers);

	                  if (animationData.assets) {
	                    var i;
	                    var len = animationData.assets.length;

	                    for (i = 0; i < len; i += 1) {
	                      if (animationData.assets[i].layers) {
	                        iterateLayers(animationData.assets[i].layers);
	                      }
	                    }
	                  }
	                }
	              };
	            }();

	            function completeData(animationData) {
	              if (animationData.__complete) {
	                return;
	              }

	              checkColors(animationData);
	              checkText(animationData);
	              checkChars(animationData);
	              checkPathProperties(animationData);
	              checkShapes(animationData);
	              completeLayers(animationData.layers, animationData.assets);
	              completeChars(animationData.chars, animationData.assets);
	              animationData.__complete = true;
	            }

	            function completeText(data) {
	              if (data.t.a.length === 0 && !('m' in data.t.p)) ;
	            }

	            var moduleOb = {};
	            moduleOb.completeData = completeData;
	            moduleOb.checkColors = checkColors;
	            moduleOb.checkChars = checkChars;
	            moduleOb.checkPathProperties = checkPathProperties;
	            moduleOb.checkShapes = checkShapes;
	            moduleOb.completeLayers = completeLayers;
	            return moduleOb;
	          }

	          if (!_workerSelf.dataManager) {
	            _workerSelf.dataManager = dataFunctionManager();
	          }

	          if (!_workerSelf.assetLoader) {
	            _workerSelf.assetLoader = function () {
	              function formatResponse(xhr) {
	                // using typeof doubles the time of execution of this method,
	                // so if available, it's better to use the header to validate the type
	                var contentTypeHeader = xhr.getResponseHeader('content-type');

	                if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {
	                  return xhr.response;
	                }

	                if (xhr.response && _typeof$5(xhr.response) === 'object') {
	                  return xhr.response;
	                }

	                if (xhr.response && typeof xhr.response === 'string') {
	                  return JSON.parse(xhr.response);
	                }

	                if (xhr.responseText) {
	                  return JSON.parse(xhr.responseText);
	                }

	                return null;
	              }

	              function loadAsset(path, fullPath, callback, errorCallback) {
	                var response;
	                var xhr = new XMLHttpRequest(); // set responseType after calling open or IE will break.

	                try {
	                  // This crashes on Android WebView prior to KitKat
	                  xhr.responseType = 'json';
	                } catch (err) {} // eslint-disable-line no-empty


	                xhr.onreadystatechange = function () {
	                  if (xhr.readyState === 4) {
	                    if (xhr.status === 200) {
	                      response = formatResponse(xhr);
	                      callback(response);
	                    } else {
	                      try {
	                        response = formatResponse(xhr);
	                        callback(response);
	                      } catch (err) {
	                        if (errorCallback) {
	                          errorCallback(err);
	                        }
	                      }
	                    }
	                  }
	                };

	                try {
	                  // Hack to workaround banner validation
	                  xhr.open(['G', 'E', 'T'].join(''), path, true);
	                } catch (error) {
	                  // Hack to workaround banner validation
	                  xhr.open(['G', 'E', 'T'].join(''), fullPath + '/' + path, true);
	                }

	                xhr.send();
	              }

	              return {
	                load: loadAsset
	              };
	            }();
	          }

	          if (e.data.type === 'loadAnimation') {
	            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {
	              _workerSelf.dataManager.completeData(data);

	              _workerSelf.postMessage({
	                id: e.data.id,
	                payload: data,
	                status: 'success'
	              });
	            }, function () {
	              _workerSelf.postMessage({
	                id: e.data.id,
	                status: 'error'
	              });
	            });
	          } else if (e.data.type === 'complete') {
	            var animation = e.data.animation;

	            _workerSelf.dataManager.completeData(animation);

	            _workerSelf.postMessage({
	              id: e.data.id,
	              payload: animation,
	              status: 'success'
	            });
	          } else if (e.data.type === 'loadData') {
	            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {
	              _workerSelf.postMessage({
	                id: e.data.id,
	                payload: data,
	                status: 'success'
	              });
	            }, function () {
	              _workerSelf.postMessage({
	                id: e.data.id,
	                status: 'error'
	              });
	            });
	          }
	        });

	        workerInstance.onmessage = function (event) {
	          var data = event.data;
	          var id = data.id;
	          var process = processes[id];
	          processes[id] = null;

	          if (data.status === 'success') {
	            process.onComplete(data.payload);
	          } else if (process.onError) {
	            process.onError();
	          }
	        };
	      }
	    }

	    function createProcess(onComplete, onError) {
	      _counterId += 1;
	      var id = 'processId_' + _counterId;
	      processes[id] = {
	        onComplete: onComplete,
	        onError: onError
	      };
	      return id;
	    }

	    function loadAnimation(path, onComplete, onError) {
	      setupWorker();
	      var processId = createProcess(onComplete, onError);
	      workerInstance.postMessage({
	        type: 'loadAnimation',
	        path: path,
	        fullPath: window.location.origin + window.location.pathname,
	        id: processId
	      });
	    }

	    function loadData(path, onComplete, onError) {
	      setupWorker();
	      var processId = createProcess(onComplete, onError);
	      workerInstance.postMessage({
	        type: 'loadData',
	        path: path,
	        fullPath: window.location.origin + window.location.pathname,
	        id: processId
	      });
	    }

	    function completeAnimation(anim, onComplete, onError) {
	      setupWorker();
	      var processId = createProcess(onComplete, onError);
	      workerInstance.postMessage({
	        type: 'complete',
	        animation: anim,
	        id: processId
	      });
	    }

	    return {
	      loadAnimation: loadAnimation,
	      loadData: loadData,
	      completeAnimation: completeAnimation
	    };
	  }();

	  var ImagePreloader = function () {
	    var proxyImage = function () {
	      var canvas = createTag('canvas');
	      canvas.width = 1;
	      canvas.height = 1;
	      var ctx = canvas.getContext('2d');
	      ctx.fillStyle = 'rgba(0,0,0,0)';
	      ctx.fillRect(0, 0, 1, 1);
	      return canvas;
	    }();

	    function imageLoaded() {
	      this.loadedAssets += 1;

	      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
	        if (this.imagesLoadedCb) {
	          this.imagesLoadedCb(null);
	        }
	      }
	    }

	    function footageLoaded() {
	      this.loadedFootagesCount += 1;

	      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
	        if (this.imagesLoadedCb) {
	          this.imagesLoadedCb(null);
	        }
	      }
	    }

	    function getAssetsPath(assetData, assetsPath, originalPath) {
	      var path = '';

	      if (assetData.e) {
	        path = assetData.p;
	      } else if (assetsPath) {
	        var imagePath = assetData.p;

	        if (imagePath.indexOf('images/') !== -1) {
	          imagePath = imagePath.split('/')[1];
	        }

	        path = assetsPath + imagePath;
	      } else {
	        path = originalPath;
	        path += assetData.u ? assetData.u : '';
	        path += assetData.p;
	      }

	      return path;
	    }

	    function testImageLoaded(img) {
	      var _count = 0;
	      var intervalId = setInterval(function () {
	        var box = img.getBBox();

	        if (box.width || _count > 500) {
	          this._imageLoaded();

	          clearInterval(intervalId);
	        }

	        _count += 1;
	      }.bind(this), 50);
	    }

	    function createImageData(assetData) {
	      var path = getAssetsPath(assetData, this.assetsPath, this.path);
	      var img = createNS('image');

	      if (isSafari) {
	        this.testImageLoaded(img);
	      } else {
	        img.addEventListener('load', this._imageLoaded, false);
	      }

	      img.addEventListener('error', function () {
	        ob.img = proxyImage;

	        this._imageLoaded();
	      }.bind(this), false);
	      img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);

	      if (this._elementHelper.append) {
	        this._elementHelper.append(img);
	      } else {
	        this._elementHelper.appendChild(img);
	      }

	      var ob = {
	        img: img,
	        assetData: assetData
	      };
	      return ob;
	    }

	    function createImgData(assetData) {
	      var path = getAssetsPath(assetData, this.assetsPath, this.path);
	      var img = createTag('img');
	      img.crossOrigin = 'anonymous';
	      img.addEventListener('load', this._imageLoaded, false);
	      img.addEventListener('error', function () {
	        ob.img = proxyImage;

	        this._imageLoaded();
	      }.bind(this), false);
	      img.src = path;
	      var ob = {
	        img: img,
	        assetData: assetData
	      };
	      return ob;
	    }

	    function createFootageData(data) {
	      var ob = {
	        assetData: data
	      };
	      var path = getAssetsPath(data, this.assetsPath, this.path);
	      dataManager.loadData(path, function (footageData) {
	        ob.img = footageData;

	        this._footageLoaded();
	      }.bind(this), function () {
	        ob.img = {};

	        this._footageLoaded();
	      }.bind(this));
	      return ob;
	    }

	    function loadAssets(assets, cb) {
	      this.imagesLoadedCb = cb;
	      var i;
	      var len = assets.length;

	      for (i = 0; i < len; i += 1) {
	        if (!assets[i].layers) {
	          if (!assets[i].t || assets[i].t === 'seq') {
	            this.totalImages += 1;
	            this.images.push(this._createImageData(assets[i]));
	          } else if (assets[i].t === 3) {
	            this.totalFootages += 1;
	            this.images.push(this.createFootageData(assets[i]));
	          }
	        }
	      }
	    }

	    function setPath(path) {
	      this.path = path || '';
	    }

	    function setAssetsPath(path) {
	      this.assetsPath = path || '';
	    }

	    function getAsset(assetData) {
	      var i = 0;
	      var len = this.images.length;

	      while (i < len) {
	        if (this.images[i].assetData === assetData) {
	          return this.images[i].img;
	        }

	        i += 1;
	      }

	      return null;
	    }

	    function destroy() {
	      this.imagesLoadedCb = null;
	      this.images.length = 0;
	    }

	    function loadedImages() {
	      return this.totalImages === this.loadedAssets;
	    }

	    function loadedFootages() {
	      return this.totalFootages === this.loadedFootagesCount;
	    }

	    function setCacheType(type, elementHelper) {
	      if (type === 'svg') {
	        this._elementHelper = elementHelper;
	        this._createImageData = this.createImageData.bind(this);
	      } else {
	        this._createImageData = this.createImgData.bind(this);
	      }
	    }

	    function ImagePreloaderFactory() {
	      this._imageLoaded = imageLoaded.bind(this);
	      this._footageLoaded = footageLoaded.bind(this);
	      this.testImageLoaded = testImageLoaded.bind(this);
	      this.createFootageData = createFootageData.bind(this);
	      this.assetsPath = '';
	      this.path = '';
	      this.totalImages = 0;
	      this.totalFootages = 0;
	      this.loadedAssets = 0;
	      this.loadedFootagesCount = 0;
	      this.imagesLoadedCb = null;
	      this.images = [];
	    }

	    ImagePreloaderFactory.prototype = {
	      loadAssets: loadAssets,
	      setAssetsPath: setAssetsPath,
	      setPath: setPath,
	      loadedImages: loadedImages,
	      loadedFootages: loadedFootages,
	      destroy: destroy,
	      getAsset: getAsset,
	      createImgData: createImgData,
	      createImageData: createImageData,
	      imageLoaded: imageLoaded,
	      footageLoaded: footageLoaded,
	      setCacheType: setCacheType
	    };
	    return ImagePreloaderFactory;
	  }();

	  function BaseEvent() {}

	  BaseEvent.prototype = {
	    triggerEvent: function triggerEvent(eventName, args) {
	      if (this._cbs[eventName]) {
	        var callbacks = this._cbs[eventName];

	        for (var i = 0; i < callbacks.length; i += 1) {
	          callbacks[i](args);
	        }
	      }
	    },
	    addEventListener: function addEventListener(eventName, callback) {
	      if (!this._cbs[eventName]) {
	        this._cbs[eventName] = [];
	      }

	      this._cbs[eventName].push(callback);

	      return function () {
	        this.removeEventListener(eventName, callback);
	      }.bind(this);
	    },
	    removeEventListener: function removeEventListener(eventName, callback) {
	      if (!callback) {
	        this._cbs[eventName] = null;
	      } else if (this._cbs[eventName]) {
	        var i = 0;
	        var len = this._cbs[eventName].length;

	        while (i < len) {
	          if (this._cbs[eventName][i] === callback) {
	            this._cbs[eventName].splice(i, 1);

	            i -= 1;
	            len -= 1;
	          }

	          i += 1;
	        }

	        if (!this._cbs[eventName].length) {
	          this._cbs[eventName] = null;
	        }
	      }
	    }
	  };

	  var markerParser = function () {
	    function parsePayloadLines(payload) {
	      var lines = payload.split('\r\n');
	      var keys = {};
	      var line;
	      var keysCount = 0;

	      for (var i = 0; i < lines.length; i += 1) {
	        line = lines[i].split(':');

	        if (line.length === 2) {
	          keys[line[0]] = line[1].trim();
	          keysCount += 1;
	        }
	      }

	      if (keysCount === 0) {
	        throw new Error();
	      }

	      return keys;
	    }

	    return function (_markers) {
	      var markers = [];

	      for (var i = 0; i < _markers.length; i += 1) {
	        var _marker = _markers[i];
	        var markerData = {
	          time: _marker.tm,
	          duration: _marker.dr
	        };

	        try {
	          markerData.payload = JSON.parse(_markers[i].cm);
	        } catch (_) {
	          try {
	            markerData.payload = parsePayloadLines(_markers[i].cm);
	          } catch (__) {
	            markerData.payload = {
	              name: _markers[i].cm
	            };
	          }
	        }

	        markers.push(markerData);
	      }

	      return markers;
	    };
	  }();

	  var ProjectInterface = function () {
	    function registerComposition(comp) {
	      this.compositions.push(comp);
	    }

	    return function () {
	      function _thisProjectFunction(name) {
	        var i = 0;
	        var len = this.compositions.length;

	        while (i < len) {
	          if (this.compositions[i].data && this.compositions[i].data.nm === name) {
	            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {
	              this.compositions[i].prepareFrame(this.currentFrame);
	            }

	            return this.compositions[i].compInterface;
	          }

	          i += 1;
	        }

	        return null;
	      }

	      _thisProjectFunction.compositions = [];
	      _thisProjectFunction.currentFrame = 0;
	      _thisProjectFunction.registerComposition = registerComposition;
	      return _thisProjectFunction;
	    };
	  }();

	  var renderers = {};

	  var registerRenderer = function registerRenderer(key, value) {
	    renderers[key] = value;
	  };

	  function getRenderer(key) {
	    return renderers[key];
	  }

	  function getRegisteredRenderer() {
	    // Returns canvas by default for compatibility
	    if (renderers.canvas) {
	      return 'canvas';
	    } // Returns any renderer that is registered


	    for (var key in renderers) {
	      if (renderers[key]) {
	        return key;
	      }
	    }

	    return '';
	  }

	  function _typeof$4(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$4 = function _typeof(obj) { return typeof obj; }; } else { _typeof$4 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$4(obj); }

	  var AnimationItem = function AnimationItem() {
	    this._cbs = [];
	    this.name = '';
	    this.path = '';
	    this.isLoaded = false;
	    this.currentFrame = 0;
	    this.currentRawFrame = 0;
	    this.firstFrame = 0;
	    this.totalFrames = 0;
	    this.frameRate = 0;
	    this.frameMult = 0;
	    this.playSpeed = 1;
	    this.playDirection = 1;
	    this.playCount = 0;
	    this.animationData = {};
	    this.assets = [];
	    this.isPaused = true;
	    this.autoplay = false;
	    this.loop = true;
	    this.renderer = null;
	    this.animationID = createElementID();
	    this.assetsPath = '';
	    this.timeCompleted = 0;
	    this.segmentPos = 0;
	    this.isSubframeEnabled = getSubframeEnabled();
	    this.segments = [];
	    this._idle = true;
	    this._completedLoop = false;
	    this.projectInterface = ProjectInterface();
	    this.imagePreloader = new ImagePreloader();
	    this.audioController = audioControllerFactory();
	    this.markers = [];
	    this.configAnimation = this.configAnimation.bind(this);
	    this.onSetupError = this.onSetupError.bind(this);
	    this.onSegmentComplete = this.onSegmentComplete.bind(this);
	    this.drawnFrameEvent = new BMEnterFrameEvent('drawnFrame', 0, 0, 0);
	    this.expressionsPlugin = getExpressionsPlugin();
	  };

	  extendPrototype([BaseEvent], AnimationItem);

	  AnimationItem.prototype.setParams = function (params) {
	    if (params.wrapper || params.container) {
	      this.wrapper = params.wrapper || params.container;
	    }

	    var animType = 'svg';

	    if (params.animType) {
	      animType = params.animType;
	    } else if (params.renderer) {
	      animType = params.renderer;
	    }

	    var RendererClass = getRenderer(animType);
	    this.renderer = new RendererClass(this, params.rendererSettings);
	    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);
	    this.renderer.setProjectInterface(this.projectInterface);
	    this.animType = animType;

	    if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {
	      this.loop = true;
	    } else if (params.loop === false) {
	      this.loop = false;
	    } else {
	      this.loop = parseInt(params.loop, 10);
	    }

	    this.autoplay = 'autoplay' in params ? params.autoplay : true;
	    this.name = params.name ? params.name : '';
	    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments') ? params.autoloadSegments : true;
	    this.assetsPath = params.assetsPath;
	    this.initialSegment = params.initialSegment;

	    if (params.audioFactory) {
	      this.audioController.setAudioFactory(params.audioFactory);
	    }

	    if (params.animationData) {
	      this.setupAnimation(params.animationData);
	    } else if (params.path) {
	      if (params.path.lastIndexOf('\\') !== -1) {
	        this.path = params.path.substr(0, params.path.lastIndexOf('\\') + 1);
	      } else {
	        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);
	      }

	      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);
	      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));
	      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);
	    }
	  };

	  AnimationItem.prototype.onSetupError = function () {
	    this.trigger('data_failed');
	  };

	  AnimationItem.prototype.setupAnimation = function (data) {
	    dataManager.completeAnimation(data, this.configAnimation);
	  };

	  AnimationItem.prototype.setData = function (wrapper, animationData) {
	    if (animationData) {
	      if (_typeof$4(animationData) !== 'object') {
	        animationData = JSON.parse(animationData);
	      }
	    }

	    var params = {
	      wrapper: wrapper,
	      animationData: animationData
	    };
	    var wrapperAttributes = wrapper.attributes;
	    params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';
	    params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : getRegisteredRenderer() || 'canvas';
	    var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';

	    if (loop === 'false') {
	      params.loop = false;
	    } else if (loop === 'true') {
	      params.loop = true;
	    } else if (loop !== '') {
	      params.loop = parseInt(loop, 10);
	    }

	    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;
	    params.autoplay = autoplay !== 'false';
	    params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';
	    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary
	    ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';

	    if (prerender === 'false') {
	      params.prerender = false;
	    }

	    if (!params.path) {
	      this.trigger('destroy');
	    } else {
	      this.setParams(params);
	    }
	  };

	  AnimationItem.prototype.includeLayers = function (data) {
	    if (data.op > this.animationData.op) {
	      this.animationData.op = data.op;
	      this.totalFrames = Math.floor(data.op - this.animationData.ip);
	    }

	    var layers = this.animationData.layers;
	    var i;
	    var len = layers.length;
	    var newLayers = data.layers;
	    var j;
	    var jLen = newLayers.length;

	    for (j = 0; j < jLen; j += 1) {
	      i = 0;

	      while (i < len) {
	        if (layers[i].id === newLayers[j].id) {
	          layers[i] = newLayers[j];
	          break;
	        }

	        i += 1;
	      }
	    }

	    if (data.chars || data.fonts) {
	      this.renderer.globalData.fontManager.addChars(data.chars);
	      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);
	    }

	    if (data.assets) {
	      len = data.assets.length;

	      for (i = 0; i < len; i += 1) {
	        this.animationData.assets.push(data.assets[i]);
	      }
	    }

	    this.animationData.__complete = false;
	    dataManager.completeAnimation(this.animationData, this.onSegmentComplete);
	  };

	  AnimationItem.prototype.onSegmentComplete = function (data) {
	    this.animationData = data;
	    var expressionsPlugin = getExpressionsPlugin();

	    if (expressionsPlugin) {
	      expressionsPlugin.initExpressions(this);
	    }

	    this.loadNextSegment();
	  };

	  AnimationItem.prototype.loadNextSegment = function () {
	    var segments = this.animationData.segments;

	    if (!segments || segments.length === 0 || !this.autoloadSegments) {
	      this.trigger('data_ready');
	      this.timeCompleted = this.totalFrames;
	      return;
	    }

	    var segment = segments.shift();
	    this.timeCompleted = segment.time * this.frameRate;
	    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';
	    this.segmentPos += 1;
	    dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {
	      this.trigger('data_failed');
	    }.bind(this));
	  };

	  AnimationItem.prototype.loadSegments = function () {
	    var segments = this.animationData.segments;

	    if (!segments) {
	      this.timeCompleted = this.totalFrames;
	    }

	    this.loadNextSegment();
	  };

	  AnimationItem.prototype.imagesLoaded = function () {
	    this.trigger('loaded_images');
	    this.checkLoaded();
	  };

	  AnimationItem.prototype.preloadImages = function () {
	    this.imagePreloader.setAssetsPath(this.assetsPath);
	    this.imagePreloader.setPath(this.path);
	    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
	  };

	  AnimationItem.prototype.configAnimation = function (animData) {
	    if (!this.renderer) {
	      return;
	    }

	    try {
	      this.animationData = animData;

	      if (this.initialSegment) {
	        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);
	        this.firstFrame = Math.round(this.initialSegment[0]);
	      } else {
	        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);
	        this.firstFrame = Math.round(this.animationData.ip);
	      }

	      this.renderer.configAnimation(animData);

	      if (!animData.assets) {
	        animData.assets = [];
	      }

	      this.assets = this.animationData.assets;
	      this.frameRate = this.animationData.fr;
	      this.frameMult = this.animationData.fr / 1000;
	      this.renderer.searchExtraCompositions(animData.assets);
	      this.markers = markerParser(animData.markers || []);
	      this.trigger('config_ready');
	      this.preloadImages();
	      this.loadSegments();
	      this.updaFrameModifier();
	      this.waitForFontsLoaded();

	      if (this.isPaused) {
	        this.audioController.pause();
	      }
	    } catch (error) {
	      this.triggerConfigError(error);
	    }
	  };

	  AnimationItem.prototype.waitForFontsLoaded = function () {
	    if (!this.renderer) {
	      return;
	    }

	    if (this.renderer.globalData.fontManager.isLoaded) {
	      this.checkLoaded();
	    } else {
	      setTimeout(this.waitForFontsLoaded.bind(this), 20);
	    }
	  };

	  AnimationItem.prototype.checkLoaded = function () {
	    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas') && this.imagePreloader.loadedFootages()) {
	      this.isLoaded = true;
	      var expressionsPlugin = getExpressionsPlugin();

	      if (expressionsPlugin) {
	        expressionsPlugin.initExpressions(this);
	      }

	      this.renderer.initItems();
	      setTimeout(function () {
	        this.trigger('DOMLoaded');
	      }.bind(this), 0);
	      this.gotoFrame();

	      if (this.autoplay) {
	        this.play();
	      }
	    }
	  };

	  AnimationItem.prototype.resize = function (width, height) {
	    // Adding this validation for backwards compatibility in case an event object was being passed down
	    var _width = typeof width === 'number' ? width : undefined;

	    var _height = typeof height === 'number' ? height : undefined;

	    this.renderer.updateContainerSize(_width, _height);
	  };

	  AnimationItem.prototype.setSubframe = function (flag) {
	    this.isSubframeEnabled = !!flag;
	  };

	  AnimationItem.prototype.gotoFrame = function () {
	    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame; // eslint-disable-line no-bitwise

	    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {
	      this.currentFrame = this.timeCompleted;
	    }

	    this.trigger('enterFrame');
	    this.renderFrame();
	    this.trigger('drawnFrame');
	  };

	  AnimationItem.prototype.renderFrame = function () {
	    if (this.isLoaded === false || !this.renderer) {
	      return;
	    }

	    try {
	      if (this.expressionsPlugin) {
	        this.expressionsPlugin.resetFrame();
	      }

	      this.renderer.renderFrame(this.currentFrame + this.firstFrame);
	    } catch (error) {
	      this.triggerRenderFrameError(error);
	    }
	  };

	  AnimationItem.prototype.play = function (name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    if (this.isPaused === true) {
	      this.isPaused = false;
	      this.trigger('_play');
	      this.audioController.resume();

	      if (this._idle) {
	        this._idle = false;
	        this.trigger('_active');
	      }
	    }
	  };

	  AnimationItem.prototype.pause = function (name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    if (this.isPaused === false) {
	      this.isPaused = true;
	      this.trigger('_pause');
	      this._idle = true;
	      this.trigger('_idle');
	      this.audioController.pause();
	    }
	  };

	  AnimationItem.prototype.togglePause = function (name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    if (this.isPaused === true) {
	      this.play();
	    } else {
	      this.pause();
	    }
	  };

	  AnimationItem.prototype.stop = function (name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    this.pause();
	    this.playCount = 0;
	    this._completedLoop = false;
	    this.setCurrentRawFrameValue(0);
	  };

	  AnimationItem.prototype.getMarkerData = function (markerName) {
	    var marker;

	    for (var i = 0; i < this.markers.length; i += 1) {
	      marker = this.markers[i];

	      if (marker.payload && marker.payload.name === markerName) {
	        return marker;
	      }
	    }

	    return null;
	  };

	  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    var numValue = Number(value);

	    if (isNaN(numValue)) {
	      var marker = this.getMarkerData(value);

	      if (marker) {
	        this.goToAndStop(marker.time, true);
	      }
	    } else if (isFrame) {
	      this.setCurrentRawFrameValue(value);
	    } else {
	      this.setCurrentRawFrameValue(value * this.frameModifier);
	    }

	    this.pause();
	  };

	  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    var numValue = Number(value);

	    if (isNaN(numValue)) {
	      var marker = this.getMarkerData(value);

	      if (marker) {
	        if (!marker.duration) {
	          this.goToAndStop(marker.time, true);
	        } else {
	          this.playSegments([marker.time, marker.time + marker.duration], true);
	        }
	      }
	    } else {
	      this.goToAndStop(numValue, isFrame, name);
	    }

	    this.play();
	  };

	  AnimationItem.prototype.advanceTime = function (value) {
	    if (this.isPaused === true || this.isLoaded === false) {
	      return;
	    }

	    var nextValue = this.currentRawFrame + value * this.frameModifier;
	    var _isComplete = false; // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.
	    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.

	    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {
	      if (!this.loop || this.playCount === this.loop) {
	        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {
	          _isComplete = true;
	          nextValue = this.totalFrames - 1;
	        }
	      } else if (nextValue >= this.totalFrames) {
	        this.playCount += 1;

	        if (!this.checkSegments(nextValue % this.totalFrames)) {
	          this.setCurrentRawFrameValue(nextValue % this.totalFrames);
	          this._completedLoop = true;
	          this.trigger('loopComplete');
	        }
	      } else {
	        this.setCurrentRawFrameValue(nextValue);
	      }
	    } else if (nextValue < 0) {
	      if (!this.checkSegments(nextValue % this.totalFrames)) {
	        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {
	          // eslint-disable-line no-plusplus
	          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);

	          if (!this._completedLoop) {
	            this._completedLoop = true;
	          } else {
	            this.trigger('loopComplete');
	          }
	        } else {
	          _isComplete = true;
	          nextValue = 0;
	        }
	      }
	    } else {
	      this.setCurrentRawFrameValue(nextValue);
	    }

	    if (_isComplete) {
	      this.setCurrentRawFrameValue(nextValue);
	      this.pause();
	      this.trigger('complete');
	    }
	  };

	  AnimationItem.prototype.adjustSegment = function (arr, offset) {
	    this.playCount = 0;

	    if (arr[1] < arr[0]) {
	      if (this.frameModifier > 0) {
	        if (this.playSpeed < 0) {
	          this.setSpeed(-this.playSpeed);
	        } else {
	          this.setDirection(-1);
	        }
	      }

	      this.totalFrames = arr[0] - arr[1];
	      this.timeCompleted = this.totalFrames;
	      this.firstFrame = arr[1];
	      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);
	    } else if (arr[1] > arr[0]) {
	      if (this.frameModifier < 0) {
	        if (this.playSpeed < 0) {
	          this.setSpeed(-this.playSpeed);
	        } else {
	          this.setDirection(1);
	        }
	      }

	      this.totalFrames = arr[1] - arr[0];
	      this.timeCompleted = this.totalFrames;
	      this.firstFrame = arr[0];
	      this.setCurrentRawFrameValue(0.001 + offset);
	    }

	    this.trigger('segmentStart');
	  };

	  AnimationItem.prototype.setSegment = function (init, end) {
	    var pendingFrame = -1;

	    if (this.isPaused) {
	      if (this.currentRawFrame + this.firstFrame < init) {
	        pendingFrame = init;
	      } else if (this.currentRawFrame + this.firstFrame > end) {
	        pendingFrame = end - init;
	      }
	    }

	    this.firstFrame = init;
	    this.totalFrames = end - init;
	    this.timeCompleted = this.totalFrames;

	    if (pendingFrame !== -1) {
	      this.goToAndStop(pendingFrame, true);
	    }
	  };

	  AnimationItem.prototype.playSegments = function (arr, forceFlag) {
	    if (forceFlag) {
	      this.segments.length = 0;
	    }

	    if (_typeof$4(arr[0]) === 'object') {
	      var i;
	      var len = arr.length;

	      for (i = 0; i < len; i += 1) {
	        this.segments.push(arr[i]);
	      }
	    } else {
	      this.segments.push(arr);
	    }

	    if (this.segments.length && forceFlag) {
	      this.adjustSegment(this.segments.shift(), 0);
	    }

	    if (this.isPaused) {
	      this.play();
	    }
	  };

	  AnimationItem.prototype.resetSegments = function (forceFlag) {
	    this.segments.length = 0;
	    this.segments.push([this.animationData.ip, this.animationData.op]);

	    if (forceFlag) {
	      this.checkSegments(0);
	    }
	  };

	  AnimationItem.prototype.checkSegments = function (offset) {
	    if (this.segments.length) {
	      this.adjustSegment(this.segments.shift(), offset);
	      return true;
	    }

	    return false;
	  };

	  AnimationItem.prototype.destroy = function (name) {
	    if (name && this.name !== name || !this.renderer) {
	      return;
	    }

	    this.renderer.destroy();
	    this.imagePreloader.destroy();
	    this.trigger('destroy');
	    this._cbs = null;
	    this.onEnterFrame = null;
	    this.onLoopComplete = null;
	    this.onComplete = null;
	    this.onSegmentStart = null;
	    this.onDestroy = null;
	    this.renderer = null;
	    this.expressionsPlugin = null;
	    this.imagePreloader = null;
	    this.projectInterface = null;
	  };

	  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {
	    this.currentRawFrame = value;
	    this.gotoFrame();
	  };

	  AnimationItem.prototype.setSpeed = function (val) {
	    this.playSpeed = val;
	    this.updaFrameModifier();
	  };

	  AnimationItem.prototype.setDirection = function (val) {
	    this.playDirection = val < 0 ? -1 : 1;
	    this.updaFrameModifier();
	  };

	  AnimationItem.prototype.setLoop = function (isLooping) {
	    this.loop = isLooping;
	  };

	  AnimationItem.prototype.setVolume = function (val, name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    this.audioController.setVolume(val);
	  };

	  AnimationItem.prototype.getVolume = function () {
	    return this.audioController.getVolume();
	  };

	  AnimationItem.prototype.mute = function (name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    this.audioController.mute();
	  };

	  AnimationItem.prototype.unmute = function (name) {
	    if (name && this.name !== name) {
	      return;
	    }

	    this.audioController.unmute();
	  };

	  AnimationItem.prototype.updaFrameModifier = function () {
	    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;
	    this.audioController.setRate(this.playSpeed * this.playDirection);
	  };

	  AnimationItem.prototype.getPath = function () {
	    return this.path;
	  };

	  AnimationItem.prototype.getAssetsPath = function (assetData) {
	    var path = '';

	    if (assetData.e) {
	      path = assetData.p;
	    } else if (this.assetsPath) {
	      var imagePath = assetData.p;

	      if (imagePath.indexOf('images/') !== -1) {
	        imagePath = imagePath.split('/')[1];
	      }

	      path = this.assetsPath + imagePath;
	    } else {
	      path = this.path;
	      path += assetData.u ? assetData.u : '';
	      path += assetData.p;
	    }

	    return path;
	  };

	  AnimationItem.prototype.getAssetData = function (id) {
	    var i = 0;
	    var len = this.assets.length;

	    while (i < len) {
	      if (id === this.assets[i].id) {
	        return this.assets[i];
	      }

	      i += 1;
	    }

	    return null;
	  };

	  AnimationItem.prototype.hide = function () {
	    this.renderer.hide();
	  };

	  AnimationItem.prototype.show = function () {
	    this.renderer.show();
	  };

	  AnimationItem.prototype.getDuration = function (isFrame) {
	    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;
	  };

	  AnimationItem.prototype.updateDocumentData = function (path, documentData, index) {
	    try {
	      var element = this.renderer.getElementByPath(path);
	      element.updateDocumentData(documentData, index);
	    } catch (error) {// TODO: decide how to handle catch case
	    }
	  };

	  AnimationItem.prototype.trigger = function (name) {
	    if (this._cbs && this._cbs[name]) {
	      switch (name) {
	        case 'enterFrame':
	          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));
	          break;

	        case 'drawnFrame':
	          this.drawnFrameEvent.currentTime = this.currentFrame;
	          this.drawnFrameEvent.totalTime = this.totalFrames;
	          this.drawnFrameEvent.direction = this.frameModifier;
	          this.triggerEvent(name, this.drawnFrameEvent);
	          break;

	        case 'loopComplete':
	          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));
	          break;

	        case 'complete':
	          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));
	          break;

	        case 'segmentStart':
	          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));
	          break;

	        case 'destroy':
	          this.triggerEvent(name, new BMDestroyEvent(name, this));
	          break;

	        default:
	          this.triggerEvent(name);
	      }
	    }

	    if (name === 'enterFrame' && this.onEnterFrame) {
	      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));
	    }

	    if (name === 'loopComplete' && this.onLoopComplete) {
	      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));
	    }

	    if (name === 'complete' && this.onComplete) {
	      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));
	    }

	    if (name === 'segmentStart' && this.onSegmentStart) {
	      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));
	    }

	    if (name === 'destroy' && this.onDestroy) {
	      this.onDestroy.call(this, new BMDestroyEvent(name, this));
	    }
	  };

	  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {
	    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);
	    this.triggerEvent('error', error);

	    if (this.onError) {
	      this.onError.call(this, error);
	    }
	  };

	  AnimationItem.prototype.triggerConfigError = function (nativeError) {
	    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);
	    this.triggerEvent('error', error);

	    if (this.onError) {
	      this.onError.call(this, error);
	    }
	  };

	  var animationManager = function () {
	    var moduleOb = {};
	    var registeredAnimations = [];
	    var initTime = 0;
	    var len = 0;
	    var playingAnimationsNum = 0;
	    var _stopped = true;
	    var _isFrozen = false;

	    function removeElement(ev) {
	      var i = 0;
	      var animItem = ev.target;

	      while (i < len) {
	        if (registeredAnimations[i].animation === animItem) {
	          registeredAnimations.splice(i, 1);
	          i -= 1;
	          len -= 1;

	          if (!animItem.isPaused) {
	            subtractPlayingCount();
	          }
	        }

	        i += 1;
	      }
	    }

	    function registerAnimation(element, animationData) {
	      if (!element) {
	        return null;
	      }

	      var i = 0;

	      while (i < len) {
	        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {
	          return registeredAnimations[i].animation;
	        }

	        i += 1;
	      }

	      var animItem = new AnimationItem();
	      setupAnimation(animItem, element);
	      animItem.setData(element, animationData);
	      return animItem;
	    }

	    function getRegisteredAnimations() {
	      var i;
	      var lenAnims = registeredAnimations.length;
	      var animations = [];

	      for (i = 0; i < lenAnims; i += 1) {
	        animations.push(registeredAnimations[i].animation);
	      }

	      return animations;
	    }

	    function addPlayingCount() {
	      playingAnimationsNum += 1;
	      activate();
	    }

	    function subtractPlayingCount() {
	      playingAnimationsNum -= 1;
	    }

	    function setupAnimation(animItem, element) {
	      animItem.addEventListener('destroy', removeElement);
	      animItem.addEventListener('_active', addPlayingCount);
	      animItem.addEventListener('_idle', subtractPlayingCount);
	      registeredAnimations.push({
	        elem: element,
	        animation: animItem
	      });
	      len += 1;
	    }

	    function loadAnimation(params) {
	      var animItem = new AnimationItem();
	      setupAnimation(animItem, null);
	      animItem.setParams(params);
	      return animItem;
	    }

	    function setSpeed(val, animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.setSpeed(val, animation);
	      }
	    }

	    function setDirection(val, animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.setDirection(val, animation);
	      }
	    }

	    function play(animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.play(animation);
	      }
	    }

	    function resume(nowTime) {
	      var elapsedTime = nowTime - initTime;
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.advanceTime(elapsedTime);
	      }

	      initTime = nowTime;

	      if (playingAnimationsNum && !_isFrozen) {
	        window.requestAnimationFrame(resume);
	      } else {
	        _stopped = true;
	      }
	    }

	    function first(nowTime) {
	      initTime = nowTime;
	      window.requestAnimationFrame(resume);
	    }

	    function pause(animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.pause(animation);
	      }
	    }

	    function goToAndStop(value, isFrame, animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);
	      }
	    }

	    function stop(animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.stop(animation);
	      }
	    }

	    function togglePause(animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.togglePause(animation);
	      }
	    }

	    function destroy(animation) {
	      var i;

	      for (i = len - 1; i >= 0; i -= 1) {
	        registeredAnimations[i].animation.destroy(animation);
	      }
	    }

	    function searchAnimations(animationData, standalone, renderer) {
	      var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')), [].slice.call(document.getElementsByClassName('bodymovin')));
	      var i;
	      var lenAnims = animElements.length;

	      for (i = 0; i < lenAnims; i += 1) {
	        if (renderer) {
	          animElements[i].setAttribute('data-bm-type', renderer);
	        }

	        registerAnimation(animElements[i], animationData);
	      }

	      if (standalone && lenAnims === 0) {
	        if (!renderer) {
	          renderer = 'svg';
	        }

	        var body = document.getElementsByTagName('body')[0];
	        body.innerText = '';
	        var div = createTag('div');
	        div.style.width = '100%';
	        div.style.height = '100%';
	        div.setAttribute('data-bm-type', renderer);
	        body.appendChild(div);
	        registerAnimation(div, animationData);
	      }
	    }

	    function resize() {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.resize();
	      }
	    }

	    function activate() {
	      if (!_isFrozen && playingAnimationsNum) {
	        if (_stopped) {
	          window.requestAnimationFrame(first);
	          _stopped = false;
	        }
	      }
	    }

	    function freeze() {
	      _isFrozen = true;
	    }

	    function unfreeze() {
	      _isFrozen = false;
	      activate();
	    }

	    function setVolume(val, animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.setVolume(val, animation);
	      }
	    }

	    function mute(animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.mute(animation);
	      }
	    }

	    function unmute(animation) {
	      var i;

	      for (i = 0; i < len; i += 1) {
	        registeredAnimations[i].animation.unmute(animation);
	      }
	    }

	    moduleOb.registerAnimation = registerAnimation;
	    moduleOb.loadAnimation = loadAnimation;
	    moduleOb.setSpeed = setSpeed;
	    moduleOb.setDirection = setDirection;
	    moduleOb.play = play;
	    moduleOb.pause = pause;
	    moduleOb.stop = stop;
	    moduleOb.togglePause = togglePause;
	    moduleOb.searchAnimations = searchAnimations;
	    moduleOb.resize = resize; // moduleOb.start = start;

	    moduleOb.goToAndStop = goToAndStop;
	    moduleOb.destroy = destroy;
	    moduleOb.freeze = freeze;
	    moduleOb.unfreeze = unfreeze;
	    moduleOb.setVolume = setVolume;
	    moduleOb.mute = mute;
	    moduleOb.unmute = unmute;
	    moduleOb.getRegisteredAnimations = getRegisteredAnimations;
	    return moduleOb;
	  }();

	  /* eslint-disable */
	  var BezierFactory = function () {
	    /**
	       * BezierEasing - use bezier curve for transition easing function
	       * by Gaëtan Renaudeau 2014 - 2015 – MIT License
	       *
	       * Credits: is based on Firefox's nsSMILKeySpline.cpp
	       * Usage:
	       * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])
	       * spline.get(x) => returns the easing value | x must be in [0, 1] range
	       *
	       */
	    var ob = {};
	    ob.getBezierEasing = getBezierEasing;
	    var beziers = {};

	    function getBezierEasing(a, b, c, d, nm) {
	      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\./g, 'p');

	      if (beziers[str]) {
	        return beziers[str];
	      }

	      var bezEasing = new BezierEasing([a, b, c, d]);
	      beziers[str] = bezEasing;
	      return bezEasing;
	    } // These values are established by empiricism with tests (tradeoff: performance VS precision)


	    var NEWTON_ITERATIONS = 4;
	    var NEWTON_MIN_SLOPE = 0.001;
	    var SUBDIVISION_PRECISION = 0.0000001;
	    var SUBDIVISION_MAX_ITERATIONS = 10;
	    var kSplineTableSize = 11;
	    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);
	    var float32ArraySupported = typeof Float32Array === 'function';

	    function A(aA1, aA2) {
	      return 1.0 - 3.0 * aA2 + 3.0 * aA1;
	    }

	    function B(aA1, aA2) {
	      return 3.0 * aA2 - 6.0 * aA1;
	    }

	    function C(aA1) {
	      return 3.0 * aA1;
	    } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.


	    function calcBezier(aT, aA1, aA2) {
	      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
	    } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.


	    function getSlope(aT, aA1, aA2) {
	      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
	    }

	    function binarySubdivide(aX, aA, aB, mX1, mX2) {
	      var currentX,
	          currentT,
	          i = 0;

	      do {
	        currentT = aA + (aB - aA) / 2.0;
	        currentX = calcBezier(currentT, mX1, mX2) - aX;

	        if (currentX > 0.0) {
	          aB = currentT;
	        } else {
	          aA = currentT;
	        }
	      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);

	      return currentT;
	    }

	    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
	      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
	        var currentSlope = getSlope(aGuessT, mX1, mX2);
	        if (currentSlope === 0.0) return aGuessT;
	        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
	        aGuessT -= currentX / currentSlope;
	      }

	      return aGuessT;
	    }
	    /**
	       * points is an array of [ mX1, mY1, mX2, mY2 ]
	       */


	    function BezierEasing(points) {
	      this._p = points;
	      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
	      this._precomputed = false;
	      this.get = this.get.bind(this);
	    }

	    BezierEasing.prototype = {
	      get: function get(x) {
	        var mX1 = this._p[0],
	            mY1 = this._p[1],
	            mX2 = this._p[2],
	            mY2 = this._p[3];
	        if (!this._precomputed) this._precompute();
	        if (mX1 === mY1 && mX2 === mY2) return x; // linear
	        // Because JavaScript number are imprecise, we should guarantee the extremes are right.

	        if (x === 0) return 0;
	        if (x === 1) return 1;
	        return calcBezier(this._getTForX(x), mY1, mY2);
	      },
	      // Private part
	      _precompute: function _precompute() {
	        var mX1 = this._p[0],
	            mY1 = this._p[1],
	            mX2 = this._p[2],
	            mY2 = this._p[3];
	        this._precomputed = true;

	        if (mX1 !== mY1 || mX2 !== mY2) {
	          this._calcSampleValues();
	        }
	      },
	      _calcSampleValues: function _calcSampleValues() {
	        var mX1 = this._p[0],
	            mX2 = this._p[2];

	        for (var i = 0; i < kSplineTableSize; ++i) {
	          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
	        }
	      },

	      /**
	           * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
	           */
	      _getTForX: function _getTForX(aX) {
	        var mX1 = this._p[0],
	            mX2 = this._p[2],
	            mSampleValues = this._mSampleValues;
	        var intervalStart = 0.0;
	        var currentSample = 1;
	        var lastSample = kSplineTableSize - 1;

	        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
	          intervalStart += kSampleStepSize;
	        }

	        --currentSample; // Interpolate to provide an initial guess for t

	        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);
	        var guessForT = intervalStart + dist * kSampleStepSize;
	        var initialSlope = getSlope(guessForT, mX1, mX2);

	        if (initialSlope >= NEWTON_MIN_SLOPE) {
	          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
	        }

	        if (initialSlope === 0.0) {
	          return guessForT;
	        }

	        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
	      }
	    };
	    return ob;
	  }();

	  var pooling = function () {
	    function _double(arr) {
	      return arr.concat(createSizedArray(arr.length));
	    }

	    return {
	      "double": _double
	    };
	  }();

	  var poolFactory = function () {
	    return function (initialLength, _create, _release) {
	      var _length = 0;
	      var _maxLength = initialLength;
	      var pool = createSizedArray(_maxLength);
	      var ob = {
	        newElement: newElement,
	        release: release
	      };

	      function newElement() {
	        var element;

	        if (_length) {
	          _length -= 1;
	          element = pool[_length];
	        } else {
	          element = _create();
	        }

	        return element;
	      }

	      function release(element) {
	        if (_length === _maxLength) {
	          pool = pooling["double"](pool);
	          _maxLength *= 2;
	        }

	        if (_release) {
	          _release(element);
	        }

	        pool[_length] = element;
	        _length += 1;
	      }

	      return ob;
	    };
	  }();

	  var bezierLengthPool = function () {
	    function create() {
	      return {
	        addedLength: 0,
	        percents: createTypedArray('float32', getDefaultCurveSegments()),
	        lengths: createTypedArray('float32', getDefaultCurveSegments())
	      };
	    }

	    return poolFactory(8, create);
	  }();

	  var segmentsLengthPool = function () {
	    function create() {
	      return {
	        lengths: [],
	        totalLength: 0
	      };
	    }

	    function release(element) {
	      var i;
	      var len = element.lengths.length;

	      for (i = 0; i < len; i += 1) {
	        bezierLengthPool.release(element.lengths[i]);
	      }

	      element.lengths.length = 0;
	    }

	    return poolFactory(8, create, release);
	  }();

	  function bezFunction() {
	    var math = Math;

	    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {
	      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;
	      return det1 > -0.001 && det1 < 0.001;
	    }

	    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {
	      if (z1 === 0 && z2 === 0 && z3 === 0) {
	        return pointOnLine2D(x1, y1, x2, y2, x3, y3);
	      }

	      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));
	      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));
	      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));
	      var diffDist;

	      if (dist1 > dist2) {
	        if (dist1 > dist3) {
	          diffDist = dist1 - dist2 - dist3;
	        } else {
	          diffDist = dist3 - dist2 - dist1;
	        }
	      } else if (dist3 > dist2) {
	        diffDist = dist3 - dist2 - dist1;
	      } else {
	        diffDist = dist2 - dist1 - dist3;
	      }

	      return diffDist > -0.0001 && diffDist < 0.0001;
	    }

	    var getBezierLength = function () {
	      return function (pt1, pt2, pt3, pt4) {
	        var curveSegments = getDefaultCurveSegments();
	        var k;
	        var i;
	        var len;
	        var ptCoord;
	        var perc;
	        var addedLength = 0;
	        var ptDistance;
	        var point = [];
	        var lastPoint = [];
	        var lengthData = bezierLengthPool.newElement();
	        len = pt3.length;

	        for (k = 0; k < curveSegments; k += 1) {
	          perc = k / (curveSegments - 1);
	          ptDistance = 0;

	          for (i = 0; i < len; i += 1) {
	            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];
	            point[i] = ptCoord;

	            if (lastPoint[i] !== null) {
	              ptDistance += bmPow(point[i] - lastPoint[i], 2);
	            }

	            lastPoint[i] = point[i];
	          }

	          if (ptDistance) {
	            ptDistance = bmSqrt(ptDistance);
	            addedLength += ptDistance;
	          }

	          lengthData.percents[k] = perc;
	          lengthData.lengths[k] = addedLength;
	        }

	        lengthData.addedLength = addedLength;
	        return lengthData;
	      };
	    }();

	    function getSegmentsLength(shapeData) {
	      var segmentsLength = segmentsLengthPool.newElement();
	      var closed = shapeData.c;
	      var pathV = shapeData.v;
	      var pathO = shapeData.o;
	      var pathI = shapeData.i;
	      var i;
	      var len = shapeData._length;
	      var lengths = segmentsLength.lengths;
	      var totalLength = 0;

	      for (i = 0; i < len - 1; i += 1) {
	        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);
	        totalLength += lengths[i].addedLength;
	      }

	      if (closed && len) {
	        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);
	        totalLength += lengths[i].addedLength;
	      }

	      segmentsLength.totalLength = totalLength;
	      return segmentsLength;
	    }

	    function BezierData(length) {
	      this.segmentLength = 0;
	      this.points = new Array(length);
	    }

	    function PointData(partial, point) {
	      this.partialLength = partial;
	      this.point = point;
	    }

	    var buildBezierData = function () {
	      var storedData = {};
	      return function (pt1, pt2, pt3, pt4) {
	        var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\./g, 'p');

	        if (!storedData[bezierName]) {
	          var curveSegments = getDefaultCurveSegments();
	          var k;
	          var i;
	          var len;
	          var ptCoord;
	          var perc;
	          var addedLength = 0;
	          var ptDistance;
	          var point;
	          var lastPoint = null;

	          if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {
	            curveSegments = 2;
	          }

	          var bezierData = new BezierData(curveSegments);
	          len = pt3.length;

	          for (k = 0; k < curveSegments; k += 1) {
	            point = createSizedArray(len);
	            perc = k / (curveSegments - 1);
	            ptDistance = 0;

	            for (i = 0; i < len; i += 1) {
	              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];
	              point[i] = ptCoord;

	              if (lastPoint !== null) {
	                ptDistance += bmPow(point[i] - lastPoint[i], 2);
	              }
	            }

	            ptDistance = bmSqrt(ptDistance);
	            addedLength += ptDistance;
	            bezierData.points[k] = new PointData(ptDistance, point);
	            lastPoint = point;
	          }

	          bezierData.segmentLength = addedLength;
	          storedData[bezierName] = bezierData;
	        }

	        return storedData[bezierName];
	      };
	    }();

	    function getDistancePerc(perc, bezierData) {
	      var percents = bezierData.percents;
	      var lengths = bezierData.lengths;
	      var len = percents.length;
	      var initPos = bmFloor((len - 1) * perc);
	      var lengthPos = perc * bezierData.addedLength;
	      var lPerc = 0;

	      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {
	        return percents[initPos];
	      }

	      var dir = lengths[initPos] > lengthPos ? -1 : 1;
	      var flag = true;

	      while (flag) {
	        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {
	          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);
	          flag = false;
	        } else {
	          initPos += dir;
	        }

	        if (initPos < 0 || initPos >= len - 1) {
	          // FIX for TypedArrays that don't store floating point values with enough accuracy
	          if (initPos === len - 1) {
	            return percents[initPos];
	          }

	          flag = false;
	        }
	      }

	      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;
	    }

	    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {
	      var t1 = getDistancePerc(percent, bezierData);
	      var u1 = 1 - t1;
	      var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;
	      var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;
	      return [ptX, ptY];
	    }

	    var bezierSegmentPoints = createTypedArray('float32', 8);

	    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {
	      if (startPerc < 0) {
	        startPerc = 0;
	      } else if (startPerc > 1) {
	        startPerc = 1;
	      }

	      var t0 = getDistancePerc(startPerc, bezierData);
	      endPerc = endPerc > 1 ? 1 : endPerc;
	      var t1 = getDistancePerc(endPerc, bezierData);
	      var i;
	      var len = pt1.length;
	      var u0 = 1 - t0;
	      var u1 = 1 - t1;
	      var u0u0u0 = u0 * u0 * u0;
	      var t0u0u0_3 = t0 * u0 * u0 * 3; // eslint-disable-line camelcase

	      var t0t0u0_3 = t0 * t0 * u0 * 3; // eslint-disable-line camelcase

	      var t0t0t0 = t0 * t0 * t0; //

	      var u0u0u1 = u0 * u0 * u1;
	      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1; // eslint-disable-line camelcase

	      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1; // eslint-disable-line camelcase

	      var t0t0t1 = t0 * t0 * t1; //

	      var u0u1u1 = u0 * u1 * u1;
	      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1; // eslint-disable-line camelcase

	      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1; // eslint-disable-line camelcase

	      var t0t1t1 = t0 * t1 * t1; //

	      var u1u1u1 = u1 * u1 * u1;
	      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1; // eslint-disable-line camelcase

	      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1; // eslint-disable-line camelcase

	      var t1t1t1 = t1 * t1 * t1;

	      for (i = 0; i < len; i += 1) {
	        bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase

	        bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase

	        bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase

	        bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase
	      }

	      return bezierSegmentPoints;
	    }

	    return {
	      getSegmentsLength: getSegmentsLength,
	      getNewSegment: getNewSegment,
	      getPointInSegment: getPointInSegment,
	      buildBezierData: buildBezierData,
	      pointOnLine2D: pointOnLine2D,
	      pointOnLine3D: pointOnLine3D
	    };
	  }

	  var bez = bezFunction();

	  var initFrame = initialDefaultFrame;
	  var mathAbs = Math.abs;

	  function interpolateValue(frameNum, caching) {
	    var offsetTime = this.offsetTime;
	    var newValue;

	    if (this.propType === 'multidimensional') {
	      newValue = createTypedArray('float32', this.pv.length);
	    }

	    var iterationIndex = caching.lastIndex;
	    var i = iterationIndex;
	    var len = this.keyframes.length - 1;
	    var flag = true;
	    var keyData;
	    var nextKeyData;
	    var keyframeMetadata;

	    while (flag) {
	      keyData = this.keyframes[i];
	      nextKeyData = this.keyframes[i + 1];

	      if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {
	        if (keyData.h) {
	          keyData = nextKeyData;
	        }

	        iterationIndex = 0;
	        break;
	      }

	      if (nextKeyData.t - offsetTime > frameNum) {
	        iterationIndex = i;
	        break;
	      }

	      if (i < len - 1) {
	        i += 1;
	      } else {
	        iterationIndex = 0;
	        flag = false;
	      }
	    }

	    keyframeMetadata = this.keyframesMetadata[i] || {};
	    var k;
	    var kLen;
	    var perc;
	    var jLen;
	    var j;
	    var fnc;
	    var nextKeyTime = nextKeyData.t - offsetTime;
	    var keyTime = keyData.t - offsetTime;
	    var endValue;

	    if (keyData.to) {
	      if (!keyframeMetadata.bezierData) {
	        keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);
	      }

	      var bezierData = keyframeMetadata.bezierData;

	      if (frameNum >= nextKeyTime || frameNum < keyTime) {
	        var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;
	        kLen = bezierData.points[ind].point.length;

	        for (k = 0; k < kLen; k += 1) {
	          newValue[k] = bezierData.points[ind].point[k];
	        } // caching._lastKeyframeIndex = -1;

	      } else {
	        if (keyframeMetadata.__fnct) {
	          fnc = keyframeMetadata.__fnct;
	        } else {
	          fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;
	          keyframeMetadata.__fnct = fnc;
	        }

	        perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
	        var distanceInLine = bezierData.segmentLength * perc;
	        var segmentPerc;
	        var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;
	        j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;
	        flag = true;
	        jLen = bezierData.points.length;

	        while (flag) {
	          addedLength += bezierData.points[j].partialLength;

	          if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {
	            kLen = bezierData.points[j].point.length;

	            for (k = 0; k < kLen; k += 1) {
	              newValue[k] = bezierData.points[j].point[k];
	            }

	            break;
	          } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {
	            segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;
	            kLen = bezierData.points[j].point.length;

	            for (k = 0; k < kLen; k += 1) {
	              newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;
	            }

	            break;
	          }

	          if (j < jLen - 1) {
	            j += 1;
	          } else {
	            flag = false;
	          }
	        }

	        caching._lastPoint = j;
	        caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;
	        caching._lastKeyframeIndex = i;
	      }
	    } else {
	      var outX;
	      var outY;
	      var inX;
	      var inY;
	      var keyValue;
	      len = keyData.s.length;
	      endValue = nextKeyData.s || keyData.e;

	      if (this.sh && keyData.h !== 1) {
	        if (frameNum >= nextKeyTime) {
	          newValue[0] = endValue[0];
	          newValue[1] = endValue[1];
	          newValue[2] = endValue[2];
	        } else if (frameNum <= keyTime) {
	          newValue[0] = keyData.s[0];
	          newValue[1] = keyData.s[1];
	          newValue[2] = keyData.s[2];
	        } else {
	          var quatStart = createQuaternion(keyData.s);
	          var quatEnd = createQuaternion(endValue);
	          var time = (frameNum - keyTime) / (nextKeyTime - keyTime);
	          quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));
	        }
	      } else {
	        for (i = 0; i < len; i += 1) {
	          if (keyData.h !== 1) {
	            if (frameNum >= nextKeyTime) {
	              perc = 1;
	            } else if (frameNum < keyTime) {
	              perc = 0;
	            } else {
	              if (keyData.o.x.constructor === Array) {
	                if (!keyframeMetadata.__fnct) {
	                  keyframeMetadata.__fnct = [];
	                }

	                if (!keyframeMetadata.__fnct[i]) {
	                  outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i];
	                  outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i];
	                  inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i];
	                  inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i];
	                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
	                  keyframeMetadata.__fnct[i] = fnc;
	                } else {
	                  fnc = keyframeMetadata.__fnct[i];
	                }
	              } else if (!keyframeMetadata.__fnct) {
	                outX = keyData.o.x;
	                outY = keyData.o.y;
	                inX = keyData.i.x;
	                inY = keyData.i.y;
	                fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
	                keyData.keyframeMetadata = fnc;
	              } else {
	                fnc = keyframeMetadata.__fnct;
	              }

	              perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
	            }
	          }

	          endValue = nextKeyData.s || keyData.e;
	          keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;

	          if (this.propType === 'multidimensional') {
	            newValue[i] = keyValue;
	          } else {
	            newValue = keyValue;
	          }
	        }
	      }
	    }

	    caching.lastIndex = iterationIndex;
	    return newValue;
	  } // based on @Toji's https://github.com/toji/gl-matrix/


	  function slerp(a, b, t) {
	    var out = [];
	    var ax = a[0];
	    var ay = a[1];
	    var az = a[2];
	    var aw = a[3];
	    var bx = b[0];
	    var by = b[1];
	    var bz = b[2];
	    var bw = b[3];
	    var omega;
	    var cosom;
	    var sinom;
	    var scale0;
	    var scale1;
	    cosom = ax * bx + ay * by + az * bz + aw * bw;

	    if (cosom < 0.0) {
	      cosom = -cosom;
	      bx = -bx;
	      by = -by;
	      bz = -bz;
	      bw = -bw;
	    }

	    if (1.0 - cosom > 0.000001) {
	      omega = Math.acos(cosom);
	      sinom = Math.sin(omega);
	      scale0 = Math.sin((1.0 - t) * omega) / sinom;
	      scale1 = Math.sin(t * omega) / sinom;
	    } else {
	      scale0 = 1.0 - t;
	      scale1 = t;
	    }

	    out[0] = scale0 * ax + scale1 * bx;
	    out[1] = scale0 * ay + scale1 * by;
	    out[2] = scale0 * az + scale1 * bz;
	    out[3] = scale0 * aw + scale1 * bw;
	    return out;
	  }

	  function quaternionToEuler(out, quat) {
	    var qx = quat[0];
	    var qy = quat[1];
	    var qz = quat[2];
	    var qw = quat[3];
	    var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);
	    var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);
	    var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);
	    out[0] = heading / degToRads;
	    out[1] = attitude / degToRads;
	    out[2] = bank / degToRads;
	  }

	  function createQuaternion(values) {
	    var heading = values[0] * degToRads;
	    var attitude = values[1] * degToRads;
	    var bank = values[2] * degToRads;
	    var c1 = Math.cos(heading / 2);
	    var c2 = Math.cos(attitude / 2);
	    var c3 = Math.cos(bank / 2);
	    var s1 = Math.sin(heading / 2);
	    var s2 = Math.sin(attitude / 2);
	    var s3 = Math.sin(bank / 2);
	    var w = c1 * c2 * c3 - s1 * s2 * s3;
	    var x = s1 * s2 * c3 + c1 * c2 * s3;
	    var y = s1 * c2 * c3 + c1 * s2 * s3;
	    var z = c1 * s2 * c3 - s1 * c2 * s3;
	    return [x, y, z, w];
	  }

	  function getValueAtCurrentTime() {
	    var frameNum = this.comp.renderedFrame - this.offsetTime;
	    var initTime = this.keyframes[0].t - this.offsetTime;
	    var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;

	    if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {
	      if (this._caching.lastFrame >= frameNum) {
	        this._caching._lastKeyframeIndex = -1;
	        this._caching.lastIndex = 0;
	      }

	      var renderResult = this.interpolateValue(frameNum, this._caching);
	      this.pv = renderResult;
	    }

	    this._caching.lastFrame = frameNum;
	    return this.pv;
	  }

	  function setVValue(val) {
	    var multipliedValue;

	    if (this.propType === 'unidimensional') {
	      multipliedValue = val * this.mult;

	      if (mathAbs(this.v - multipliedValue) > 0.00001) {
	        this.v = multipliedValue;
	        this._mdf = true;
	      }
	    } else {
	      var i = 0;
	      var len = this.v.length;

	      while (i < len) {
	        multipliedValue = val[i] * this.mult;

	        if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {
	          this.v[i] = multipliedValue;
	          this._mdf = true;
	        }

	        i += 1;
	      }
	    }
	  }

	  function processEffectsSequence() {
	    if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {
	      return;
	    }

	    if (this.lock) {
	      this.setVValue(this.pv);
	      return;
	    }

	    this.lock = true;
	    this._mdf = this._isFirstFrame;
	    var i;
	    var len = this.effectsSequence.length;
	    var finalValue = this.kf ? this.pv : this.data.k;

	    for (i = 0; i < len; i += 1) {
	      finalValue = this.effectsSequence[i](finalValue);
	    }

	    this.setVValue(finalValue);
	    this._isFirstFrame = false;
	    this.lock = false;
	    this.frameId = this.elem.globalData.frameId;
	  }

	  function addEffect(effectFunction) {
	    this.effectsSequence.push(effectFunction);
	    this.container.addDynamicProperty(this);
	  }

	  function ValueProperty(elem, data, mult, container) {
	    this.propType = 'unidimensional';
	    this.mult = mult || 1;
	    this.data = data;
	    this.v = mult ? data.k * mult : data.k;
	    this.pv = data.k;
	    this._mdf = false;
	    this.elem = elem;
	    this.container = container;
	    this.comp = elem.comp;
	    this.k = false;
	    this.kf = false;
	    this.vel = 0;
	    this.effectsSequence = [];
	    this._isFirstFrame = true;
	    this.getValue = processEffectsSequence;
	    this.setVValue = setVValue;
	    this.addEffect = addEffect;
	  }

	  function MultiDimensionalProperty(elem, data, mult, container) {
	    this.propType = 'multidimensional';
	    this.mult = mult || 1;
	    this.data = data;
	    this._mdf = false;
	    this.elem = elem;
	    this.container = container;
	    this.comp = elem.comp;
	    this.k = false;
	    this.kf = false;
	    this.frameId = -1;
	    var i;
	    var len = data.k.length;
	    this.v = createTypedArray('float32', len);
	    this.pv = createTypedArray('float32', len);
	    this.vel = createTypedArray('float32', len);

	    for (i = 0; i < len; i += 1) {
	      this.v[i] = data.k[i] * this.mult;
	      this.pv[i] = data.k[i];
	    }

	    this._isFirstFrame = true;
	    this.effectsSequence = [];
	    this.getValue = processEffectsSequence;
	    this.setVValue = setVValue;
	    this.addEffect = addEffect;
	  }

	  function KeyframedValueProperty(elem, data, mult, container) {
	    this.propType = 'unidimensional';
	    this.keyframes = data.k;
	    this.keyframesMetadata = [];
	    this.offsetTime = elem.data.st;
	    this.frameId = -1;
	    this._caching = {
	      lastFrame: initFrame,
	      lastIndex: 0,
	      value: 0,
	      _lastKeyframeIndex: -1
	    };
	    this.k = true;
	    this.kf = true;
	    this.data = data;
	    this.mult = mult || 1;
	    this.elem = elem;
	    this.container = container;
	    this.comp = elem.comp;
	    this.v = initFrame;
	    this.pv = initFrame;
	    this._isFirstFrame = true;
	    this.getValue = processEffectsSequence;
	    this.setVValue = setVValue;
	    this.interpolateValue = interpolateValue;
	    this.effectsSequence = [getValueAtCurrentTime.bind(this)];
	    this.addEffect = addEffect;
	  }

	  function KeyframedMultidimensionalProperty(elem, data, mult, container) {
	    this.propType = 'multidimensional';
	    var i;
	    var len = data.k.length;
	    var s;
	    var e;
	    var to;
	    var ti;

	    for (i = 0; i < len - 1; i += 1) {
	      if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {
	        s = data.k[i].s;
	        e = data.k[i + 1].s;
	        to = data.k[i].to;
	        ti = data.k[i].ti;

	        if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {
	          data.k[i].to = null;
	          data.k[i].ti = null;
	        }

	        if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {
	          if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {
	            data.k[i].to = null;
	            data.k[i].ti = null;
	          }
	        }
	      }
	    }

	    this.effectsSequence = [getValueAtCurrentTime.bind(this)];
	    this.data = data;
	    this.keyframes = data.k;
	    this.keyframesMetadata = [];
	    this.offsetTime = elem.data.st;
	    this.k = true;
	    this.kf = true;
	    this._isFirstFrame = true;
	    this.mult = mult || 1;
	    this.elem = elem;
	    this.container = container;
	    this.comp = elem.comp;
	    this.getValue = processEffectsSequence;
	    this.setVValue = setVValue;
	    this.interpolateValue = interpolateValue;
	    this.frameId = -1;
	    var arrLen = data.k[0].s.length;
	    this.v = createTypedArray('float32', arrLen);
	    this.pv = createTypedArray('float32', arrLen);

	    for (i = 0; i < arrLen; i += 1) {
	      this.v[i] = initFrame;
	      this.pv[i] = initFrame;
	    }

	    this._caching = {
	      lastFrame: initFrame,
	      lastIndex: 0,
	      value: createTypedArray('float32', arrLen)
	    };
	    this.addEffect = addEffect;
	  }

	  var PropertyFactory = function () {
	    function getProp(elem, data, type, mult, container) {
	      if (data.sid) {
	        data = elem.globalData.slotManager.getProp(data);
	      }

	      var p;

	      if (!data.k.length) {
	        p = new ValueProperty(elem, data, mult, container);
	      } else if (typeof data.k[0] === 'number') {
	        p = new MultiDimensionalProperty(elem, data, mult, container);
	      } else {
	        switch (type) {
	          case 0:
	            p = new KeyframedValueProperty(elem, data, mult, container);
	            break;

	          case 1:
	            p = new KeyframedMultidimensionalProperty(elem, data, mult, container);
	            break;
	        }
	      }

	      if (p.effectsSequence.length) {
	        container.addDynamicProperty(p);
	      }

	      return p;
	    }

	    var ob = {
	      getProp: getProp
	    };
	    return ob;
	  }();

	  function DynamicPropertyContainer() {}

	  DynamicPropertyContainer.prototype = {
	    addDynamicProperty: function addDynamicProperty(prop) {
	      if (this.dynamicProperties.indexOf(prop) === -1) {
	        this.dynamicProperties.push(prop);
	        this.container.addDynamicProperty(this);
	        this._isAnimated = true;
	      }
	    },
	    iterateDynamicProperties: function iterateDynamicProperties() {
	      this._mdf = false;
	      var i;
	      var len = this.dynamicProperties.length;

	      for (i = 0; i < len; i += 1) {
	        this.dynamicProperties[i].getValue();

	        if (this.dynamicProperties[i]._mdf) {
	          this._mdf = true;
	        }
	      }
	    },
	    initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {
	      this.container = container;
	      this.dynamicProperties = [];
	      this._mdf = false;
	      this._isAnimated = false;
	    }
	  };

	  var pointPool = function () {
	    function create() {
	      return createTypedArray('float32', 2);
	    }

	    return poolFactory(8, create);
	  }();

	  function ShapePath() {
	    this.c = false;
	    this._length = 0;
	    this._maxLength = 8;
	    this.v = createSizedArray(this._maxLength);
	    this.o = createSizedArray(this._maxLength);
	    this.i = createSizedArray(this._maxLength);
	  }

	  ShapePath.prototype.setPathData = function (closed, len) {
	    this.c = closed;
	    this.setLength(len);
	    var i = 0;

	    while (i < len) {
	      this.v[i] = pointPool.newElement();
	      this.o[i] = pointPool.newElement();
	      this.i[i] = pointPool.newElement();
	      i += 1;
	    }
	  };

	  ShapePath.prototype.setLength = function (len) {
	    while (this._maxLength < len) {
	      this.doubleArrayLength();
	    }

	    this._length = len;
	  };

	  ShapePath.prototype.doubleArrayLength = function () {
	    this.v = this.v.concat(createSizedArray(this._maxLength));
	    this.i = this.i.concat(createSizedArray(this._maxLength));
	    this.o = this.o.concat(createSizedArray(this._maxLength));
	    this._maxLength *= 2;
	  };

	  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {
	    var arr;
	    this._length = Math.max(this._length, pos + 1);

	    if (this._length >= this._maxLength) {
	      this.doubleArrayLength();
	    }

	    switch (type) {
	      case 'v':
	        arr = this.v;
	        break;

	      case 'i':
	        arr = this.i;
	        break;

	      case 'o':
	        arr = this.o;
	        break;

	      default:
	        arr = [];
	        break;
	    }

	    if (!arr[pos] || arr[pos] && !replace) {
	      arr[pos] = pointPool.newElement();
	    }

	    arr[pos][0] = x;
	    arr[pos][1] = y;
	  };

	  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {
	    this.setXYAt(vX, vY, 'v', pos, replace);
	    this.setXYAt(oX, oY, 'o', pos, replace);
	    this.setXYAt(iX, iY, 'i', pos, replace);
	  };

	  ShapePath.prototype.reverse = function () {
	    var newPath = new ShapePath();
	    newPath.setPathData(this.c, this._length);
	    var vertices = this.v;
	    var outPoints = this.o;
	    var inPoints = this.i;
	    var init = 0;

	    if (this.c) {
	      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);
	      init = 1;
	    }

	    var cnt = this._length - 1;
	    var len = this._length;
	    var i;

	    for (i = init; i < len; i += 1) {
	      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);
	      cnt -= 1;
	    }

	    return newPath;
	  };

	  ShapePath.prototype.length = function () {
	    return this._length;
	  };

	  var shapePool = function () {
	    function create() {
	      return new ShapePath();
	    }

	    function release(shapePath) {
	      var len = shapePath._length;
	      var i;

	      for (i = 0; i < len; i += 1) {
	        pointPool.release(shapePath.v[i]);
	        pointPool.release(shapePath.i[i]);
	        pointPool.release(shapePath.o[i]);
	        shapePath.v[i] = null;
	        shapePath.i[i] = null;
	        shapePath.o[i] = null;
	      }

	      shapePath._length = 0;
	      shapePath.c = false;
	    }

	    function clone(shape) {
	      var cloned = factory.newElement();
	      var i;
	      var len = shape._length === undefined ? shape.v.length : shape._length;
	      cloned.setLength(len);
	      cloned.c = shape.c;

	      for (i = 0; i < len; i += 1) {
	        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);
	      }

	      return cloned;
	    }

	    var factory = poolFactory(4, create, release);
	    factory.clone = clone;
	    return factory;
	  }();

	  function ShapeCollection() {
	    this._length = 0;
	    this._maxLength = 4;
	    this.shapes = createSizedArray(this._maxLength);
	  }

	  ShapeCollection.prototype.addShape = function (shapeData) {
	    if (this._length === this._maxLength) {
	      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));
	      this._maxLength *= 2;
	    }

	    this.shapes[this._length] = shapeData;
	    this._length += 1;
	  };

	  ShapeCollection.prototype.releaseShapes = function () {
	    var i;

	    for (i = 0; i < this._length; i += 1) {
	      shapePool.release(this.shapes[i]);
	    }

	    this._length = 0;
	  };

	  var shapeCollectionPool = function () {
	    var ob = {
	      newShapeCollection: newShapeCollection,
	      release: release
	    };
	    var _length = 0;
	    var _maxLength = 4;
	    var pool = createSizedArray(_maxLength);

	    function newShapeCollection() {
	      var shapeCollection;

	      if (_length) {
	        _length -= 1;
	        shapeCollection = pool[_length];
	      } else {
	        shapeCollection = new ShapeCollection();
	      }

	      return shapeCollection;
	    }

	    function release(shapeCollection) {
	      var i;
	      var len = shapeCollection._length;

	      for (i = 0; i < len; i += 1) {
	        shapePool.release(shapeCollection.shapes[i]);
	      }

	      shapeCollection._length = 0;

	      if (_length === _maxLength) {
	        pool = pooling["double"](pool);
	        _maxLength *= 2;
	      }

	      pool[_length] = shapeCollection;
	      _length += 1;
	    }

	    return ob;
	  }();

	  var ShapePropertyFactory = function () {
	    var initFrame = -999999;

	    function interpolateShape(frameNum, previousValue, caching) {
	      var iterationIndex = caching.lastIndex;
	      var keyPropS;
	      var keyPropE;
	      var isHold;
	      var j;
	      var k;
	      var jLen;
	      var kLen;
	      var perc;
	      var vertexValue;
	      var kf = this.keyframes;

	      if (frameNum < kf[0].t - this.offsetTime) {
	        keyPropS = kf[0].s[0];
	        isHold = true;
	        iterationIndex = 0;
	      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {
	        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];
	        /* if(kf[kf.length - 1].s){
	                  keyPropS = kf[kf.length - 1].s[0];
	              }else{
	                  keyPropS = kf[kf.length - 2].e[0];
	              } */

	        isHold = true;
	      } else {
	        var i = iterationIndex;
	        var len = kf.length - 1;
	        var flag = true;
	        var keyData;
	        var nextKeyData;
	        var keyframeMetadata;

	        while (flag) {
	          keyData = kf[i];
	          nextKeyData = kf[i + 1];

	          if (nextKeyData.t - this.offsetTime > frameNum) {
	            break;
	          }

	          if (i < len - 1) {
	            i += 1;
	          } else {
	            flag = false;
	          }
	        }

	        keyframeMetadata = this.keyframesMetadata[i] || {};
	        isHold = keyData.h === 1;
	        iterationIndex = i;

	        if (!isHold) {
	          if (frameNum >= nextKeyData.t - this.offsetTime) {
	            perc = 1;
	          } else if (frameNum < keyData.t - this.offsetTime) {
	            perc = 0;
	          } else {
	            var fnc;

	            if (keyframeMetadata.__fnct) {
	              fnc = keyframeMetadata.__fnct;
	            } else {
	              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;
	              keyframeMetadata.__fnct = fnc;
	            }

	            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));
	          }

	          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];
	        }

	        keyPropS = keyData.s[0];
	      }

	      jLen = previousValue._length;
	      kLen = keyPropS.i[0].length;
	      caching.lastIndex = iterationIndex;

	      for (j = 0; j < jLen; j += 1) {
	        for (k = 0; k < kLen; k += 1) {
	          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;
	          previousValue.i[j][k] = vertexValue;
	          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;
	          previousValue.o[j][k] = vertexValue;
	          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;
	          previousValue.v[j][k] = vertexValue;
	        }
	      }
	    }

	    function interpolateShapeCurrentTime() {
	      var frameNum = this.comp.renderedFrame - this.offsetTime;
	      var initTime = this.keyframes[0].t - this.offsetTime;
	      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
	      var lastFrame = this._caching.lastFrame;

	      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {
	        /// /
	        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;
	        this.interpolateShape(frameNum, this.pv, this._caching); /// /
	      }

	      this._caching.lastFrame = frameNum;
	      return this.pv;
	    }

	    function resetShape() {
	      this.paths = this.localShapeCollection;
	    }

	    function shapesEqual(shape1, shape2) {
	      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {
	        return false;
	      }

	      var i;
	      var len = shape1._length;

	      for (i = 0; i < len; i += 1) {
	        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {
	          return false;
	        }
	      }

	      return true;
	    }

	    function setVValue(newPath) {
	      if (!shapesEqual(this.v, newPath)) {
	        this.v = shapePool.clone(newPath);
	        this.localShapeCollection.releaseShapes();
	        this.localShapeCollection.addShape(this.v);
	        this._mdf = true;
	        this.paths = this.localShapeCollection;
	      }
	    }

	    function processEffectsSequence() {
	      if (this.elem.globalData.frameId === this.frameId) {
	        return;
	      }

	      if (!this.effectsSequence.length) {
	        this._mdf = false;
	        return;
	      }

	      if (this.lock) {
	        this.setVValue(this.pv);
	        return;
	      }

	      this.lock = true;
	      this._mdf = false;
	      var finalValue;

	      if (this.kf) {
	        finalValue = this.pv;
	      } else if (this.data.ks) {
	        finalValue = this.data.ks.k;
	      } else {
	        finalValue = this.data.pt.k;
	      }

	      var i;
	      var len = this.effectsSequence.length;

	      for (i = 0; i < len; i += 1) {
	        finalValue = this.effectsSequence[i](finalValue);
	      }

	      this.setVValue(finalValue);
	      this.lock = false;
	      this.frameId = this.elem.globalData.frameId;
	    }

	    function ShapeProperty(elem, data, type) {
	      this.propType = 'shape';
	      this.comp = elem.comp;
	      this.container = elem;
	      this.elem = elem;
	      this.data = data;
	      this.k = false;
	      this.kf = false;
	      this._mdf = false;
	      var pathData = type === 3 ? data.pt.k : data.ks.k;
	      this.v = shapePool.clone(pathData);
	      this.pv = shapePool.clone(this.v);
	      this.localShapeCollection = shapeCollectionPool.newShapeCollection();
	      this.paths = this.localShapeCollection;
	      this.paths.addShape(this.v);
	      this.reset = resetShape;
	      this.effectsSequence = [];
	    }

	    function addEffect(effectFunction) {
	      this.effectsSequence.push(effectFunction);
	      this.container.addDynamicProperty(this);
	    }

	    ShapeProperty.prototype.interpolateShape = interpolateShape;
	    ShapeProperty.prototype.getValue = processEffectsSequence;
	    ShapeProperty.prototype.setVValue = setVValue;
	    ShapeProperty.prototype.addEffect = addEffect;

	    function KeyframedShapeProperty(elem, data, type) {
	      this.propType = 'shape';
	      this.comp = elem.comp;
	      this.elem = elem;
	      this.container = elem;
	      this.offsetTime = elem.data.st;
	      this.keyframes = type === 3 ? data.pt.k : data.ks.k;
	      this.keyframesMetadata = [];
	      this.k = true;
	      this.kf = true;
	      var len = this.keyframes[0].s[0].i.length;
	      this.v = shapePool.newElement();
	      this.v.setPathData(this.keyframes[0].s[0].c, len);
	      this.pv = shapePool.clone(this.v);
	      this.localShapeCollection = shapeCollectionPool.newShapeCollection();
	      this.paths = this.localShapeCollection;
	      this.paths.addShape(this.v);
	      this.lastFrame = initFrame;
	      this.reset = resetShape;
	      this._caching = {
	        lastFrame: initFrame,
	        lastIndex: 0
	      };
	      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];
	    }

	    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;
	    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;
	    KeyframedShapeProperty.prototype.setVValue = setVValue;
	    KeyframedShapeProperty.prototype.addEffect = addEffect;

	    var EllShapeProperty = function () {
	      var cPoint = roundCorner;

	      function EllShapePropertyFactory(elem, data) {
	        this.v = shapePool.newElement();
	        this.v.setPathData(true, 4);
	        this.localShapeCollection = shapeCollectionPool.newShapeCollection();
	        this.paths = this.localShapeCollection;
	        this.localShapeCollection.addShape(this.v);
	        this.d = data.d;
	        this.elem = elem;
	        this.comp = elem.comp;
	        this.frameId = -1;
	        this.initDynamicPropertyContainer(elem);
	        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
	        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);

	        if (this.dynamicProperties.length) {
	          this.k = true;
	        } else {
	          this.k = false;
	          this.convertEllToPath();
	        }
	      }

	      EllShapePropertyFactory.prototype = {
	        reset: resetShape,
	        getValue: function getValue() {
	          if (this.elem.globalData.frameId === this.frameId) {
	            return;
	          }

	          this.frameId = this.elem.globalData.frameId;
	          this.iterateDynamicProperties();

	          if (this._mdf) {
	            this.convertEllToPath();
	          }
	        },
	        convertEllToPath: function convertEllToPath() {
	          var p0 = this.p.v[0];
	          var p1 = this.p.v[1];
	          var s0 = this.s.v[0] / 2;
	          var s1 = this.s.v[1] / 2;

	          var _cw = this.d !== 3;

	          var _v = this.v;
	          _v.v[0][0] = p0;
	          _v.v[0][1] = p1 - s1;
	          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;
	          _v.v[1][1] = p1;
	          _v.v[2][0] = p0;
	          _v.v[2][1] = p1 + s1;
	          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;
	          _v.v[3][1] = p1;
	          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
	          _v.i[0][1] = p1 - s1;
	          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;
	          _v.i[1][1] = p1 - s1 * cPoint;
	          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
	          _v.i[2][1] = p1 + s1;
	          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;
	          _v.i[3][1] = p1 + s1 * cPoint;
	          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
	          _v.o[0][1] = p1 - s1;
	          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;
	          _v.o[1][1] = p1 + s1 * cPoint;
	          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
	          _v.o[2][1] = p1 + s1;
	          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;
	          _v.o[3][1] = p1 - s1 * cPoint;
	        }
	      };
	      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);
	      return EllShapePropertyFactory;
	    }();

	    var StarShapeProperty = function () {
	      function StarShapePropertyFactory(elem, data) {
	        this.v = shapePool.newElement();
	        this.v.setPathData(true, 0);
	        this.elem = elem;
	        this.comp = elem.comp;
	        this.data = data;
	        this.frameId = -1;
	        this.d = data.d;
	        this.initDynamicPropertyContainer(elem);

	        if (data.sy === 1) {
	          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);
	          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);
	          this.convertToPath = this.convertStarToPath;
	        } else {
	          this.convertToPath = this.convertPolygonToPath;
	        }

	        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);
	        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
	        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);
	        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);
	        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);
	        this.localShapeCollection = shapeCollectionPool.newShapeCollection();
	        this.localShapeCollection.addShape(this.v);
	        this.paths = this.localShapeCollection;

	        if (this.dynamicProperties.length) {
	          this.k = true;
	        } else {
	          this.k = false;
	          this.convertToPath();
	        }
	      }

	      StarShapePropertyFactory.prototype = {
	        reset: resetShape,
	        getValue: function getValue() {
	          if (this.elem.globalData.frameId === this.frameId) {
	            return;
	          }

	          this.frameId = this.elem.globalData.frameId;
	          this.iterateDynamicProperties();

	          if (this._mdf) {
	            this.convertToPath();
	          }
	        },
	        convertStarToPath: function convertStarToPath() {
	          var numPts = Math.floor(this.pt.v) * 2;
	          var angle = Math.PI * 2 / numPts;
	          /* this.v.v.length = numPts;
	                  this.v.i.length = numPts;
	                  this.v.o.length = numPts; */

	          var longFlag = true;
	          var longRad = this.or.v;
	          var shortRad = this.ir.v;
	          var longRound = this.os.v;
	          var shortRound = this.is.v;
	          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);
	          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);
	          var i;
	          var rad;
	          var roundness;
	          var perimSegment;
	          var currentAng = -Math.PI / 2;
	          currentAng += this.r.v;
	          var dir = this.data.d === 3 ? -1 : 1;
	          this.v._length = 0;

	          for (i = 0; i < numPts; i += 1) {
	            rad = longFlag ? longRad : shortRad;
	            roundness = longFlag ? longRound : shortRound;
	            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;
	            var x = rad * Math.cos(currentAng);
	            var y = rad * Math.sin(currentAng);
	            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);
	            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);
	            x += +this.p.v[0];
	            y += +this.p.v[1];
	            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);
	            /* this.v.v[i] = [x,y];
	                      this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];
	                      this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];
	                      this.v._length = numPts; */

	            longFlag = !longFlag;
	            currentAng += angle * dir;
	          }
	        },
	        convertPolygonToPath: function convertPolygonToPath() {
	          var numPts = Math.floor(this.pt.v);
	          var angle = Math.PI * 2 / numPts;
	          var rad = this.or.v;
	          var roundness = this.os.v;
	          var perimSegment = 2 * Math.PI * rad / (numPts * 4);
	          var i;
	          var currentAng = -Math.PI * 0.5;
	          var dir = this.data.d === 3 ? -1 : 1;
	          currentAng += this.r.v;
	          this.v._length = 0;

	          for (i = 0; i < numPts; i += 1) {
	            var x = rad * Math.cos(currentAng);
	            var y = rad * Math.sin(currentAng);
	            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);
	            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);
	            x += +this.p.v[0];
	            y += +this.p.v[1];
	            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);
	            currentAng += angle * dir;
	          }

	          this.paths.length = 0;
	          this.paths[0] = this.v;
	        }
	      };
	      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);
	      return StarShapePropertyFactory;
	    }();

	    var RectShapeProperty = function () {
	      function RectShapePropertyFactory(elem, data) {
	        this.v = shapePool.newElement();
	        this.v.c = true;
	        this.localShapeCollection = shapeCollectionPool.newShapeCollection();
	        this.localShapeCollection.addShape(this.v);
	        this.paths = this.localShapeCollection;
	        this.elem = elem;
	        this.comp = elem.comp;
	        this.frameId = -1;
	        this.d = data.d;
	        this.initDynamicPropertyContainer(elem);
	        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
	        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);
	        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);

	        if (this.dynamicProperties.length) {
	          this.k = true;
	        } else {
	          this.k = false;
	          this.convertRectToPath();
	        }
	      }

	      RectShapePropertyFactory.prototype = {
	        convertRectToPath: function convertRectToPath() {
	          var p0 = this.p.v[0];
	          var p1 = this.p.v[1];
	          var v0 = this.s.v[0] / 2;
	          var v1 = this.s.v[1] / 2;
	          var round = bmMin(v0, v1, this.r.v);
	          var cPoint = round * (1 - roundCorner);
	          this.v._length = 0;

	          if (this.d === 2 || this.d === 1) {
	            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);
	            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);

	            if (round !== 0) {
	              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);
	              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);
	              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);
	              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);
	              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);
	              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);
	            } else {
	              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);
	              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);
	            }
	          } else {
	            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);

	            if (round !== 0) {
	              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);
	              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);
	              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);
	              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);
	              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);
	              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);
	              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);
	            } else {
	              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);
	              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);
	              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);
	            }
	          }
	        },
	        getValue: function getValue() {
	          if (this.elem.globalData.frameId === this.frameId) {
	            return;
	          }

	          this.frameId = this.elem.globalData.frameId;
	          this.iterateDynamicProperties();

	          if (this._mdf) {
	            this.convertRectToPath();
	          }
	        },
	        reset: resetShape
	      };
	      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);
	      return RectShapePropertyFactory;
	    }();

	    function getShapeProp(elem, data, type) {
	      var prop;

	      if (type === 3 || type === 4) {
	        var dataProp = type === 3 ? data.pt : data.ks;
	        var keys = dataProp.k;

	        if (keys.length) {
	          prop = new KeyframedShapeProperty(elem, data, type);
	        } else {
	          prop = new ShapeProperty(elem, data, type);
	        }
	      } else if (type === 5) {
	        prop = new RectShapeProperty(elem, data);
	      } else if (type === 6) {
	        prop = new EllShapeProperty(elem, data);
	      } else if (type === 7) {
	        prop = new StarShapeProperty(elem, data);
	      }

	      if (prop.k) {
	        elem.addDynamicProperty(prop);
	      }

	      return prop;
	    }

	    function getConstructorFunction() {
	      return ShapeProperty;
	    }

	    function getKeyframedConstructorFunction() {
	      return KeyframedShapeProperty;
	    }

	    var ob = {};
	    ob.getShapeProp = getShapeProp;
	    ob.getConstructorFunction = getConstructorFunction;
	    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;
	    return ob;
	  }();

	  /*!
	   Transformation Matrix v2.0
	   (c) Epistemex 2014-2015
	   www.epistemex.com
	   By Ken Fyrstenberg
	   Contributions by leeoniya.
	   License: MIT, header required.
	   */

	  /**
	   * 2D transformation matrix object initialized with identity matrix.
	   *
	   * The matrix can synchronize a canvas context by supplying the context
	   * as an argument, or later apply current absolute transform to an
	   * existing context.
	   *
	   * All values are handled as floating point values.
	   *
	   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix
	   * @prop {number} a - scale x
	   * @prop {number} b - shear y
	   * @prop {number} c - shear x
	   * @prop {number} d - scale y
	   * @prop {number} e - translate x
	   * @prop {number} f - translate y
	   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context
	   * @constructor
	   */

	  var Matrix = function () {
	    var _cos = Math.cos;
	    var _sin = Math.sin;
	    var _tan = Math.tan;
	    var _rnd = Math.round;

	    function reset() {
	      this.props[0] = 1;
	      this.props[1] = 0;
	      this.props[2] = 0;
	      this.props[3] = 0;
	      this.props[4] = 0;
	      this.props[5] = 1;
	      this.props[6] = 0;
	      this.props[7] = 0;
	      this.props[8] = 0;
	      this.props[9] = 0;
	      this.props[10] = 1;
	      this.props[11] = 0;
	      this.props[12] = 0;
	      this.props[13] = 0;
	      this.props[14] = 0;
	      this.props[15] = 1;
	      return this;
	    }

	    function rotate(angle) {
	      if (angle === 0) {
	        return this;
	      }

	      var mCos = _cos(angle);

	      var mSin = _sin(angle);

	      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
	    }

	    function rotateX(angle) {
	      if (angle === 0) {
	        return this;
	      }

	      var mCos = _cos(angle);

	      var mSin = _sin(angle);

	      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);
	    }

	    function rotateY(angle) {
	      if (angle === 0) {
	        return this;
	      }

	      var mCos = _cos(angle);

	      var mSin = _sin(angle);

	      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);
	    }

	    function rotateZ(angle) {
	      if (angle === 0) {
	        return this;
	      }

	      var mCos = _cos(angle);

	      var mSin = _sin(angle);

	      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
	    }

	    function shear(sx, sy) {
	      return this._t(1, sy, sx, 1, 0, 0);
	    }

	    function skew(ax, ay) {
	      return this.shear(_tan(ax), _tan(ay));
	    }

	    function skewFromAxis(ax, angle) {
	      var mCos = _cos(angle);

	      var mSin = _sin(angle);

	      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
	    }

	    function scale(sx, sy, sz) {
	      if (!sz && sz !== 0) {
	        sz = 1;
	      }

	      if (sx === 1 && sy === 1 && sz === 1) {
	        return this;
	      }

	      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);
	    }

	    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
	      this.props[0] = a;
	      this.props[1] = b;
	      this.props[2] = c;
	      this.props[3] = d;
	      this.props[4] = e;
	      this.props[5] = f;
	      this.props[6] = g;
	      this.props[7] = h;
	      this.props[8] = i;
	      this.props[9] = j;
	      this.props[10] = k;
	      this.props[11] = l;
	      this.props[12] = m;
	      this.props[13] = n;
	      this.props[14] = o;
	      this.props[15] = p;
	      return this;
	    }

	    function translate(tx, ty, tz) {
	      tz = tz || 0;

	      if (tx !== 0 || ty !== 0 || tz !== 0) {
	        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);
	      }

	      return this;
	    }

	    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
	      var _p = this.props;

	      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {
	        // NOTE: commenting this condition because TurboFan deoptimizes code when present
	        // if(m2 !== 0 || n2 !== 0 || o2 !== 0){
	        _p[12] = _p[12] * a2 + _p[15] * m2;
	        _p[13] = _p[13] * f2 + _p[15] * n2;
	        _p[14] = _p[14] * k2 + _p[15] * o2;
	        _p[15] *= p2; // }

	        this._identityCalculated = false;
	        return this;
	      }

	      var a1 = _p[0];
	      var b1 = _p[1];
	      var c1 = _p[2];
	      var d1 = _p[3];
	      var e1 = _p[4];
	      var f1 = _p[5];
	      var g1 = _p[6];
	      var h1 = _p[7];
	      var i1 = _p[8];
	      var j1 = _p[9];
	      var k1 = _p[10];
	      var l1 = _p[11];
	      var m1 = _p[12];
	      var n1 = _p[13];
	      var o1 = _p[14];
	      var p1 = _p[15];
	      /* matrix order (canvas compatible):
	           * ace
	           * bdf
	           * 001
	           */

	      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
	      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;
	      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;
	      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;
	      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;
	      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;
	      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;
	      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;
	      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;
	      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;
	      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;
	      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;
	      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;
	      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;
	      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;
	      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;
	      this._identityCalculated = false;
	      return this;
	    }

	    function multiply(matrix) {
	      var matrixProps = matrix.props;
	      return this.transform(matrixProps[0], matrixProps[1], matrixProps[2], matrixProps[3], matrixProps[4], matrixProps[5], matrixProps[6], matrixProps[7], matrixProps[8], matrixProps[9], matrixProps[10], matrixProps[11], matrixProps[12], matrixProps[13], matrixProps[14], matrixProps[15]);
	    }

	    function isIdentity() {
	      if (!this._identityCalculated) {
	        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);
	        this._identityCalculated = true;
	      }

	      return this._identity;
	    }

	    function equals(matr) {
	      var i = 0;

	      while (i < 16) {
	        if (matr.props[i] !== this.props[i]) {
	          return false;
	        }

	        i += 1;
	      }

	      return true;
	    }

	    function clone(matr) {
	      var i;

	      for (i = 0; i < 16; i += 1) {
	        matr.props[i] = this.props[i];
	      }

	      return matr;
	    }

	    function cloneFromProps(props) {
	      var i;

	      for (i = 0; i < 16; i += 1) {
	        this.props[i] = props[i];
	      }
	    }

	    function applyToPoint(x, y, z) {
	      return {
	        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],
	        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],
	        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]
	      };
	      /* return {
	           x: x * me.a + y * me.c + me.e,
	           y: x * me.b + y * me.d + me.f
	           }; */
	    }

	    function applyToX(x, y, z) {
	      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];
	    }

	    function applyToY(x, y, z) {
	      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];
	    }

	    function applyToZ(x, y, z) {
	      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];
	    }

	    function getInverseMatrix() {
	      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];
	      var a = this.props[5] / determinant;
	      var b = -this.props[1] / determinant;
	      var c = -this.props[4] / determinant;
	      var d = this.props[0] / determinant;
	      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;
	      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;
	      var inverseMatrix = new Matrix();
	      inverseMatrix.props[0] = a;
	      inverseMatrix.props[1] = b;
	      inverseMatrix.props[4] = c;
	      inverseMatrix.props[5] = d;
	      inverseMatrix.props[12] = e;
	      inverseMatrix.props[13] = f;
	      return inverseMatrix;
	    }

	    function inversePoint(pt) {
	      var inverseMatrix = this.getInverseMatrix();
	      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);
	    }

	    function inversePoints(pts) {
	      var i;
	      var len = pts.length;
	      var retPts = [];

	      for (i = 0; i < len; i += 1) {
	        retPts[i] = inversePoint(pts[i]);
	      }

	      return retPts;
	    }

	    function applyToTriplePoints(pt1, pt2, pt3) {
	      var arr = createTypedArray('float32', 6);

	      if (this.isIdentity()) {
	        arr[0] = pt1[0];
	        arr[1] = pt1[1];
	        arr[2] = pt2[0];
	        arr[3] = pt2[1];
	        arr[4] = pt3[0];
	        arr[5] = pt3[1];
	      } else {
	        var p0 = this.props[0];
	        var p1 = this.props[1];
	        var p4 = this.props[4];
	        var p5 = this.props[5];
	        var p12 = this.props[12];
	        var p13 = this.props[13];
	        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;
	        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;
	        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;
	        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;
	        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;
	        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;
	      }

	      return arr;
	    }

	    function applyToPointArray(x, y, z) {
	      var arr;

	      if (this.isIdentity()) {
	        arr = [x, y, z];
	      } else {
	        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];
	      }

	      return arr;
	    }

	    function applyToPointStringified(x, y) {
	      if (this.isIdentity()) {
	        return x + ',' + y;
	      }

	      var _p = this.props;
	      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;
	    }

	    function toCSS() {
	      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.

	      /* if(this.isIdentity()) {
	              return '';
	          } */
	      var i = 0;
	      var props = this.props;
	      var cssValue = 'matrix3d(';
	      var v = 10000;

	      while (i < 16) {
	        cssValue += _rnd(props[i] * v) / v;
	        cssValue += i === 15 ? ')' : ',';
	        i += 1;
	      }

	      return cssValue;
	    }

	    function roundMatrixProperty(val) {
	      var v = 10000;

	      if (val < 0.000001 && val > 0 || val > -0.000001 && val < 0) {
	        return _rnd(val * v) / v;
	      }

	      return val;
	    }

	    function to2dCSS() {
	      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.

	      /* if(this.isIdentity()) {
	              return '';
	          } */
	      var props = this.props;

	      var _a = roundMatrixProperty(props[0]);

	      var _b = roundMatrixProperty(props[1]);

	      var _c = roundMatrixProperty(props[4]);

	      var _d = roundMatrixProperty(props[5]);

	      var _e = roundMatrixProperty(props[12]);

	      var _f = roundMatrixProperty(props[13]);

	      return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')';
	    }

	    return function () {
	      this.reset = reset;
	      this.rotate = rotate;
	      this.rotateX = rotateX;
	      this.rotateY = rotateY;
	      this.rotateZ = rotateZ;
	      this.skew = skew;
	      this.skewFromAxis = skewFromAxis;
	      this.shear = shear;
	      this.scale = scale;
	      this.setTransform = setTransform;
	      this.translate = translate;
	      this.transform = transform;
	      this.multiply = multiply;
	      this.applyToPoint = applyToPoint;
	      this.applyToX = applyToX;
	      this.applyToY = applyToY;
	      this.applyToZ = applyToZ;
	      this.applyToPointArray = applyToPointArray;
	      this.applyToTriplePoints = applyToTriplePoints;
	      this.applyToPointStringified = applyToPointStringified;
	      this.toCSS = toCSS;
	      this.to2dCSS = to2dCSS;
	      this.clone = clone;
	      this.cloneFromProps = cloneFromProps;
	      this.equals = equals;
	      this.inversePoints = inversePoints;
	      this.inversePoint = inversePoint;
	      this.getInverseMatrix = getInverseMatrix;
	      this._t = this.transform;
	      this.isIdentity = isIdentity;
	      this._identity = true;
	      this._identityCalculated = false;
	      this.props = createTypedArray('float32', 16);
	      this.reset();
	    };
	  }();

	  function _typeof$3(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$3 = function _typeof(obj) { return typeof obj; }; } else { _typeof$3 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$3(obj); }
	  var lottie = {};

	  function setLocation(href) {
	    setLocationHref(href);
	  }

	  function searchAnimations() {
	    {
	      animationManager.searchAnimations();
	    }
	  }

	  function setSubframeRendering(flag) {
	    setSubframeEnabled(flag);
	  }

	  function setPrefix(prefix) {
	    setIdPrefix(prefix);
	  }

	  function loadAnimation(params) {

	    return animationManager.loadAnimation(params);
	  }

	  function setQuality(value) {
	    if (typeof value === 'string') {
	      switch (value) {
	        case 'high':
	          setDefaultCurveSegments(200);
	          break;

	        default:
	        case 'medium':
	          setDefaultCurveSegments(50);
	          break;

	        case 'low':
	          setDefaultCurveSegments(10);
	          break;
	      }
	    } else if (!isNaN(value) && value > 1) {
	      setDefaultCurveSegments(value);
	    }
	  }

	  function inBrowser() {
	    return typeof navigator !== 'undefined';
	  }

	  function installPlugin(type, plugin) {
	    if (type === 'expressions') {
	      setExpressionsPlugin(plugin);
	    }
	  }

	  function getFactory(name) {
	    switch (name) {
	      case 'propertyFactory':
	        return PropertyFactory;

	      case 'shapePropertyFactory':
	        return ShapePropertyFactory;

	      case 'matrix':
	        return Matrix;

	      default:
	        return null;
	    }
	  }

	  lottie.play = animationManager.play;
	  lottie.pause = animationManager.pause;
	  lottie.setLocationHref = setLocation;
	  lottie.togglePause = animationManager.togglePause;
	  lottie.setSpeed = animationManager.setSpeed;
	  lottie.setDirection = animationManager.setDirection;
	  lottie.stop = animationManager.stop;
	  lottie.searchAnimations = searchAnimations;
	  lottie.registerAnimation = animationManager.registerAnimation;
	  lottie.loadAnimation = loadAnimation;
	  lottie.setSubframeRendering = setSubframeRendering;
	  lottie.resize = animationManager.resize; // lottie.start = start;

	  lottie.goToAndStop = animationManager.goToAndStop;
	  lottie.destroy = animationManager.destroy;
	  lottie.setQuality = setQuality;
	  lottie.inBrowser = inBrowser;
	  lottie.installPlugin = installPlugin;
	  lottie.freeze = animationManager.freeze;
	  lottie.unfreeze = animationManager.unfreeze;
	  lottie.setVolume = animationManager.setVolume;
	  lottie.mute = animationManager.mute;
	  lottie.unmute = animationManager.unmute;
	  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;
	  lottie.useWebWorker = setWebWorker;
	  lottie.setIDPrefix = setPrefix;
	  lottie.__getFactory = getFactory;
	  lottie.version = '5.12.2';

	  function checkReady() {
	    if (document.readyState === 'complete') {
	      clearInterval(readyStateCheckInterval);
	      searchAnimations();
	    }
	  }

	  function getQueryVariable(variable) {
	    var vars = queryString.split('&');

	    for (var i = 0; i < vars.length; i += 1) {
	      var pair = vars[i].split('=');

	      if (decodeURIComponent(pair[0]) == variable) {
	        // eslint-disable-line eqeqeq
	        return decodeURIComponent(pair[1]);
	      }
	    }

	    return null;
	  }

	  var queryString = '';

	  {
	    var scripts = document.getElementsByTagName('script');
	    var index = scripts.length - 1;
	    var myScript = scripts[index] || {
	      src: ''
	    };
	    queryString = myScript.src ? myScript.src.replace(/^[^\?]+\??/, '') : ''; // eslint-disable-line no-useless-escape

	    getQueryVariable('renderer');
	  }

	  var readyStateCheckInterval = setInterval(checkReady, 100); // this adds bodymovin to the window object for backwards compatibility

	  try {
	    if (!(('object' === "undefined" ? "undefined" : _typeof$3(exports)) === 'object' && 'object' !== 'undefined') && !(typeof undefined === 'function' && undefined.amd) // eslint-disable-line no-undef
	    ) {
	      window.bodymovin = lottie;
	    }
	  } catch (err) {//
	  }

	  var ShapeModifiers = function () {
	    var ob = {};
	    var modifiers = {};
	    ob.registerModifier = registerModifier;
	    ob.getModifier = getModifier;

	    function registerModifier(nm, factory) {
	      if (!modifiers[nm]) {
	        modifiers[nm] = factory;
	      }
	    }

	    function getModifier(nm, elem, data) {
	      return new modifiers[nm](elem, data);
	    }

	    return ob;
	  }();

	  function ShapeModifier() {}

	  ShapeModifier.prototype.initModifierProperties = function () {};

	  ShapeModifier.prototype.addShapeToModifier = function () {};

	  ShapeModifier.prototype.addShape = function (data) {
	    if (!this.closed) {
	      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.
	      data.sh.container.addDynamicProperty(data.sh);
	      var shapeData = {
	        shape: data.sh,
	        data: data,
	        localShapeCollection: shapeCollectionPool.newShapeCollection()
	      };
	      this.shapes.push(shapeData);
	      this.addShapeToModifier(shapeData);

	      if (this._isAnimated) {
	        data.setAsAnimated();
	      }
	    }
	  };

	  ShapeModifier.prototype.init = function (elem, data) {
	    this.shapes = [];
	    this.elem = elem;
	    this.initDynamicPropertyContainer(elem);
	    this.initModifierProperties(elem, data);
	    this.frameId = initialDefaultFrame;
	    this.closed = false;
	    this.k = false;

	    if (this.dynamicProperties.length) {
	      this.k = true;
	    } else {
	      this.getValue(true);
	    }
	  };

	  ShapeModifier.prototype.processKeys = function () {
	    if (this.elem.globalData.frameId === this.frameId) {
	      return;
	    }

	    this.frameId = this.elem.globalData.frameId;
	    this.iterateDynamicProperties();
	  };

	  extendPrototype([DynamicPropertyContainer], ShapeModifier);

	  function TrimModifier() {}

	  extendPrototype([ShapeModifier], TrimModifier);

	  TrimModifier.prototype.initModifierProperties = function (elem, data) {
	    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);
	    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);
	    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);
	    this.sValue = 0;
	    this.eValue = 0;
	    this.getValue = this.processKeys;
	    this.m = data.m;
	    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
	  };

	  TrimModifier.prototype.addShapeToModifier = function (shapeData) {
	    shapeData.pathsData = [];
	  };

	  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {
	    var segments = [];

	    if (e <= 1) {
	      segments.push({
	        s: s,
	        e: e
	      });
	    } else if (s >= 1) {
	      segments.push({
	        s: s - 1,
	        e: e - 1
	      });
	    } else {
	      segments.push({
	        s: s,
	        e: 1
	      });
	      segments.push({
	        s: 0,
	        e: e - 1
	      });
	    }

	    var shapeSegments = [];
	    var i;
	    var len = segments.length;
	    var segmentOb;

	    for (i = 0; i < len; i += 1) {
	      segmentOb = segments[i];

	      if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {
	        var shapeS;
	        var shapeE;

	        if (segmentOb.s * totalModifierLength <= addedLength) {
	          shapeS = 0;
	        } else {
	          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;
	        }

	        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {
	          shapeE = 1;
	        } else {
	          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;
	        }

	        shapeSegments.push([shapeS, shapeE]);
	      }
	    }

	    if (!shapeSegments.length) {
	      shapeSegments.push([0, 0]);
	    }

	    return shapeSegments;
	  };

	  TrimModifier.prototype.releasePathsData = function (pathsData) {
	    var i;
	    var len = pathsData.length;

	    for (i = 0; i < len; i += 1) {
	      segmentsLengthPool.release(pathsData[i]);
	    }

	    pathsData.length = 0;
	    return pathsData;
	  };

	  TrimModifier.prototype.processShapes = function (_isFirstFrame) {
	    var s;
	    var e;

	    if (this._mdf || _isFirstFrame) {
	      var o = this.o.v % 360 / 360;

	      if (o < 0) {
	        o += 1;
	      }

	      if (this.s.v > 1) {
	        s = 1 + o;
	      } else if (this.s.v < 0) {
	        s = 0 + o;
	      } else {
	        s = this.s.v + o;
	      }

	      if (this.e.v > 1) {
	        e = 1 + o;
	      } else if (this.e.v < 0) {
	        e = 0 + o;
	      } else {
	        e = this.e.v + o;
	      }

	      if (s > e) {
	        var _s = s;
	        s = e;
	        e = _s;
	      }

	      s = Math.round(s * 10000) * 0.0001;
	      e = Math.round(e * 10000) * 0.0001;
	      this.sValue = s;
	      this.eValue = e;
	    } else {
	      s = this.sValue;
	      e = this.eValue;
	    }

	    var shapePaths;
	    var i;
	    var len = this.shapes.length;
	    var j;
	    var jLen;
	    var pathsData;
	    var pathData;
	    var totalShapeLength;
	    var totalModifierLength = 0;

	    if (e === s) {
	      for (i = 0; i < len; i += 1) {
	        this.shapes[i].localShapeCollection.releaseShapes();
	        this.shapes[i].shape._mdf = true;
	        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;

	        if (this._mdf) {
	          this.shapes[i].pathsData.length = 0;
	        }
	      }
	    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {
	      var segments = [];
	      var shapeData;
	      var localShapeCollection;

	      for (i = 0; i < len; i += 1) {
	        shapeData = this.shapes[i]; // if shape hasn't changed and trim properties haven't changed, cached previous path can be used

	        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {
	          shapeData.shape.paths = shapeData.localShapeCollection;
	        } else {
	          shapePaths = shapeData.shape.paths;
	          jLen = shapePaths._length;
	          totalShapeLength = 0;

	          if (!shapeData.shape._mdf && shapeData.pathsData.length) {
	            totalShapeLength = shapeData.totalShapeLength;
	          } else {
	            pathsData = this.releasePathsData(shapeData.pathsData);

	            for (j = 0; j < jLen; j += 1) {
	              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);
	              pathsData.push(pathData);
	              totalShapeLength += pathData.totalLength;
	            }

	            shapeData.totalShapeLength = totalShapeLength;
	            shapeData.pathsData = pathsData;
	          }

	          totalModifierLength += totalShapeLength;
	          shapeData.shape._mdf = true;
	        }
	      }

	      var shapeS = s;
	      var shapeE = e;
	      var addedLength = 0;
	      var edges;

	      for (i = len - 1; i >= 0; i -= 1) {
	        shapeData = this.shapes[i];

	        if (shapeData.shape._mdf) {
	          localShapeCollection = shapeData.localShapeCollection;
	          localShapeCollection.releaseShapes(); // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group

	          if (this.m === 2 && len > 1) {
	            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);
	            addedLength += shapeData.totalShapeLength;
	          } else {
	            edges = [[shapeS, shapeE]];
	          }

	          jLen = edges.length;

	          for (j = 0; j < jLen; j += 1) {
	            shapeS = edges[j][0];
	            shapeE = edges[j][1];
	            segments.length = 0;

	            if (shapeE <= 1) {
	              segments.push({
	                s: shapeData.totalShapeLength * shapeS,
	                e: shapeData.totalShapeLength * shapeE
	              });
	            } else if (shapeS >= 1) {
	              segments.push({
	                s: shapeData.totalShapeLength * (shapeS - 1),
	                e: shapeData.totalShapeLength * (shapeE - 1)
	              });
	            } else {
	              segments.push({
	                s: shapeData.totalShapeLength * shapeS,
	                e: shapeData.totalShapeLength
	              });
	              segments.push({
	                s: 0,
	                e: shapeData.totalShapeLength * (shapeE - 1)
	              });
	            }

	            var newShapesData = this.addShapes(shapeData, segments[0]);

	            if (segments[0].s !== segments[0].e) {
	              if (segments.length > 1) {
	                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];

	                if (lastShapeInCollection.c) {
	                  var lastShape = newShapesData.pop();
	                  this.addPaths(newShapesData, localShapeCollection);
	                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);
	                } else {
	                  this.addPaths(newShapesData, localShapeCollection);
	                  newShapesData = this.addShapes(shapeData, segments[1]);
	                }
	              }

	              this.addPaths(newShapesData, localShapeCollection);
	            }
	          }

	          shapeData.shape.paths = localShapeCollection;
	        }
	      }
	    } else if (this._mdf) {
	      for (i = 0; i < len; i += 1) {
	        // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.
	        // Don't remove this even if it's losing cached info.
	        this.shapes[i].pathsData.length = 0;
	        this.shapes[i].shape._mdf = true;
	      }
	    }
	  };

	  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {
	    var i;
	    var len = newPaths.length;

	    for (i = 0; i < len; i += 1) {
	      localShapeCollection.addShape(newPaths[i]);
	    }
	  };

	  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {
	    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);
	    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);

	    if (newShape) {
	      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);
	    }

	    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);
	  };

	  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {
	    shapePath.setXYAt(points[1], points[5], 'o', pos);
	    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);

	    if (newShape) {
	      shapePath.setXYAt(points[0], points[4], 'v', pos);
	    }

	    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);
	  };

	  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {
	    var pathsData = shapeData.pathsData;
	    var shapePaths = shapeData.shape.paths.shapes;
	    var i;
	    var len = shapeData.shape.paths._length;
	    var j;
	    var jLen;
	    var addedLength = 0;
	    var currentLengthData;
	    var segmentCount;
	    var lengths;
	    var segment;
	    var shapes = [];
	    var initPos;
	    var newShape = true;

	    if (!shapePath) {
	      shapePath = shapePool.newElement();
	      segmentCount = 0;
	      initPos = 0;
	    } else {
	      segmentCount = shapePath._length;
	      initPos = shapePath._length;
	    }

	    shapes.push(shapePath);

	    for (i = 0; i < len; i += 1) {
	      lengths = pathsData[i].lengths;
	      shapePath.c = shapePaths[i].c;
	      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;

	      for (j = 1; j < jLen; j += 1) {
	        currentLengthData = lengths[j - 1];

	        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {
	          addedLength += currentLengthData.addedLength;
	          shapePath.c = false;
	        } else if (addedLength > shapeSegment.e) {
	          shapePath.c = false;
	          break;
	        } else {
	          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {
	            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);
	            newShape = false;
	          } else {
	            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);
	            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);

	            newShape = false;
	            shapePath.c = false;
	          }

	          addedLength += currentLengthData.addedLength;
	          segmentCount += 1;
	        }
	      }

	      if (shapePaths[i].c && lengths.length) {
	        currentLengthData = lengths[j - 1];

	        if (addedLength <= shapeSegment.e) {
	          var segmentLength = lengths[j - 1].addedLength;

	          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {
	            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);
	            newShape = false;
	          } else {
	            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);
	            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);

	            newShape = false;
	            shapePath.c = false;
	          }
	        } else {
	          shapePath.c = false;
	        }

	        addedLength += currentLengthData.addedLength;
	        segmentCount += 1;
	      }

	      if (shapePath._length) {
	        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);
	        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);
	      }

	      if (addedLength > shapeSegment.e) {
	        break;
	      }

	      if (i < len - 1) {
	        shapePath = shapePool.newElement();
	        newShape = true;
	        shapes.push(shapePath);
	        segmentCount = 0;
	      }
	    }

	    return shapes;
	  };

	  function PuckerAndBloatModifier() {}

	  extendPrototype([ShapeModifier], PuckerAndBloatModifier);

	  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {
	    this.getValue = this.processKeys;
	    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);
	    this._isAnimated = !!this.amount.effectsSequence.length;
	  };

	  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {
	    var percent = amount / 100;
	    var centerPoint = [0, 0];
	    var pathLength = path._length;
	    var i = 0;

	    for (i = 0; i < pathLength; i += 1) {
	      centerPoint[0] += path.v[i][0];
	      centerPoint[1] += path.v[i][1];
	    }

	    centerPoint[0] /= pathLength;
	    centerPoint[1] /= pathLength;
	    var clonedPath = shapePool.newElement();
	    clonedPath.c = path.c;
	    var vX;
	    var vY;
	    var oX;
	    var oY;
	    var iX;
	    var iY;

	    for (i = 0; i < pathLength; i += 1) {
	      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;
	      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;
	      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;
	      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;
	      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;
	      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;
	      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);
	    }

	    return clonedPath;
	  };

	  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {
	    var shapePaths;
	    var i;
	    var len = this.shapes.length;
	    var j;
	    var jLen;
	    var amount = this.amount.v;

	    if (amount !== 0) {
	      var shapeData;
	      var localShapeCollection;

	      for (i = 0; i < len; i += 1) {
	        shapeData = this.shapes[i];
	        localShapeCollection = shapeData.localShapeCollection;

	        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
	          localShapeCollection.releaseShapes();
	          shapeData.shape._mdf = true;
	          shapePaths = shapeData.shape.paths.shapes;
	          jLen = shapeData.shape.paths._length;

	          for (j = 0; j < jLen; j += 1) {
	            localShapeCollection.addShape(this.processPath(shapePaths[j], amount));
	          }
	        }

	        shapeData.shape.paths = shapeData.localShapeCollection;
	      }
	    }

	    if (!this.dynamicProperties.length) {
	      this._mdf = false;
	    }
	  };

	  var TransformPropertyFactory = function () {
	    var defaultVector = [0, 0];

	    function applyToMatrix(mat) {
	      var _mdf = this._mdf;
	      this.iterateDynamicProperties();
	      this._mdf = this._mdf || _mdf;

	      if (this.a) {
	        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
	      }

	      if (this.s) {
	        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
	      }

	      if (this.sk) {
	        mat.skewFromAxis(-this.sk.v, this.sa.v);
	      }

	      if (this.r) {
	        mat.rotate(-this.r.v);
	      } else {
	        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
	      }

	      if (this.data.p.s) {
	        if (this.data.p.z) {
	          mat.translate(this.px.v, this.py.v, -this.pz.v);
	        } else {
	          mat.translate(this.px.v, this.py.v, 0);
	        }
	      } else {
	        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
	      }
	    }

	    function processKeys(forceRender) {
	      if (this.elem.globalData.frameId === this.frameId) {
	        return;
	      }

	      if (this._isDirty) {
	        this.precalculateMatrix();
	        this._isDirty = false;
	      }

	      this.iterateDynamicProperties();

	      if (this._mdf || forceRender) {
	        var frameRate;
	        this.v.cloneFromProps(this.pre.props);

	        if (this.appliedTransformations < 1) {
	          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
	        }

	        if (this.appliedTransformations < 2) {
	          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
	        }

	        if (this.sk && this.appliedTransformations < 3) {
	          this.v.skewFromAxis(-this.sk.v, this.sa.v);
	        }

	        if (this.r && this.appliedTransformations < 4) {
	          this.v.rotate(-this.r.v);
	        } else if (!this.r && this.appliedTransformations < 4) {
	          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
	        }

	        if (this.autoOriented) {
	          var v1;
	          var v2;
	          frameRate = this.elem.globalData.frameRate;

	          if (this.p && this.p.keyframes && this.p.getValueAtTime) {
	            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {
	              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);
	              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);
	            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {
	              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);
	              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);
	            } else {
	              v1 = this.p.pv;
	              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);
	            }
	          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
	            v1 = [];
	            v2 = [];
	            var px = this.px;
	            var py = this.py;

	            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {
	              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);
	              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);
	              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);
	              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);
	            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {
	              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);
	              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);
	              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);
	              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);
	            } else {
	              v1 = [px.pv, py.pv];
	              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);
	              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);
	            }
	          } else {
	            v2 = defaultVector;
	            v1 = v2;
	          }

	          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));
	        }

	        if (this.data.p && this.data.p.s) {
	          if (this.data.p.z) {
	            this.v.translate(this.px.v, this.py.v, -this.pz.v);
	          } else {
	            this.v.translate(this.px.v, this.py.v, 0);
	          }
	        } else {
	          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
	        }
	      }

	      this.frameId = this.elem.globalData.frameId;
	    }

	    function precalculateMatrix() {
	      this.appliedTransformations = 0;
	      this.pre.reset();

	      if (!this.a.effectsSequence.length) {
	        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
	        this.appliedTransformations = 1;
	      } else {
	        return;
	      }

	      if (!this.s.effectsSequence.length) {
	        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
	        this.appliedTransformations = 2;
	      } else {
	        return;
	      }

	      if (this.sk) {
	        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {
	          this.pre.skewFromAxis(-this.sk.v, this.sa.v);
	          this.appliedTransformations = 3;
	        } else {
	          return;
	        }
	      }

	      if (this.r) {
	        if (!this.r.effectsSequence.length) {
	          this.pre.rotate(-this.r.v);
	          this.appliedTransformations = 4;
	        }
	      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {
	        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
	        this.appliedTransformations = 4;
	      }
	    }

	    function autoOrient() {//
	      // var prevP = this.getValueAtTime();
	    }

	    function addDynamicProperty(prop) {
	      this._addDynamicProperty(prop);

	      this.elem.addDynamicProperty(prop);
	      this._isDirty = true;
	    }

	    function TransformProperty(elem, data, container) {
	      this.elem = elem;
	      this.frameId = -1;
	      this.propType = 'transform';
	      this.data = data;
	      this.v = new Matrix(); // Precalculated matrix with non animated properties

	      this.pre = new Matrix();
	      this.appliedTransformations = 0;
	      this.initDynamicPropertyContainer(container || elem);

	      if (data.p && data.p.s) {
	        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);
	        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);

	        if (data.p.z) {
	          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);
	        }
	      } else {
	        this.p = PropertyFactory.getProp(elem, data.p || {
	          k: [0, 0, 0]
	        }, 1, 0, this);
	      }

	      if (data.rx) {
	        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);
	        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);
	        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);

	        if (data.or.k[0].ti) {
	          var i;
	          var len = data.or.k.length;

	          for (i = 0; i < len; i += 1) {
	            data.or.k[i].to = null;
	            data.or.k[i].ti = null;
	          }
	        }

	        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this); // sh Indicates it needs to be capped between -180 and 180

	        this.or.sh = true;
	      } else {
	        this.r = PropertyFactory.getProp(elem, data.r || {
	          k: 0
	        }, 0, degToRads, this);
	      }

	      if (data.sk) {
	        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);
	        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);
	      }

	      this.a = PropertyFactory.getProp(elem, data.a || {
	        k: [0, 0, 0]
	      }, 1, 0, this);
	      this.s = PropertyFactory.getProp(elem, data.s || {
	        k: [100, 100, 100]
	      }, 1, 0.01, this); // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.

	      if (data.o) {
	        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);
	      } else {
	        this.o = {
	          _mdf: false,
	          v: 1
	        };
	      }

	      this._isDirty = true;

	      if (!this.dynamicProperties.length) {
	        this.getValue(true);
	      }
	    }

	    TransformProperty.prototype = {
	      applyToMatrix: applyToMatrix,
	      getValue: processKeys,
	      precalculateMatrix: precalculateMatrix,
	      autoOrient: autoOrient
	    };
	    extendPrototype([DynamicPropertyContainer], TransformProperty);
	    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;
	    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;

	    function getTransformProperty(elem, data, container) {
	      return new TransformProperty(elem, data, container);
	    }

	    return {
	      getTransformProperty: getTransformProperty
	    };
	  }();

	  function RepeaterModifier() {}

	  extendPrototype([ShapeModifier], RepeaterModifier);

	  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {
	    this.getValue = this.processKeys;
	    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);
	    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);
	    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);
	    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);
	    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);
	    this.data = data;

	    if (!this.dynamicProperties.length) {
	      this.getValue(true);
	    }

	    this._isAnimated = !!this.dynamicProperties.length;
	    this.pMatrix = new Matrix();
	    this.rMatrix = new Matrix();
	    this.sMatrix = new Matrix();
	    this.tMatrix = new Matrix();
	    this.matrix = new Matrix();
	  };

	  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {
	    var dir = inv ? -1 : 1;
	    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);
	    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);
	    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);
	    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
	    rMatrix.rotate(-transform.r.v * dir * perc);
	    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
	    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
	    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);
	    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
	  };

	  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {
	    this.elem = elem;
	    this.arr = arr;
	    this.pos = pos;
	    this.elemsData = elemsData;
	    this._currentCopies = 0;
	    this._elements = [];
	    this._groups = [];
	    this.frameId = -1;
	    this.initDynamicPropertyContainer(elem);
	    this.initModifierProperties(elem, arr[pos]);

	    while (pos > 0) {
	      pos -= 1; // this._elements.unshift(arr.splice(pos,1)[0]);

	      this._elements.unshift(arr[pos]);
	    }

	    if (this.dynamicProperties.length) {
	      this.k = true;
	    } else {
	      this.getValue(true);
	    }
	  };

	  RepeaterModifier.prototype.resetElements = function (elements) {
	    var i;
	    var len = elements.length;

	    for (i = 0; i < len; i += 1) {
	      elements[i]._processed = false;

	      if (elements[i].ty === 'gr') {
	        this.resetElements(elements[i].it);
	      }
	    }
	  };

	  RepeaterModifier.prototype.cloneElements = function (elements) {
	    var newElements = JSON.parse(JSON.stringify(elements));
	    this.resetElements(newElements);
	    return newElements;
	  };

	  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {
	    var i;
	    var len = elements.length;

	    for (i = 0; i < len; i += 1) {
	      elements[i]._render = renderFlag;

	      if (elements[i].ty === 'gr') {
	        this.changeGroupRender(elements[i].it, renderFlag);
	      }
	    }
	  };

	  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {
	    var items;
	    var itemsTransform;
	    var i;
	    var dir;
	    var cont;
	    var hasReloaded = false;

	    if (this._mdf || _isFirstFrame) {
	      var copies = Math.ceil(this.c.v);

	      if (this._groups.length < copies) {
	        while (this._groups.length < copies) {
	          var group = {
	            it: this.cloneElements(this._elements),
	            ty: 'gr'
	          };
	          group.it.push({
	            a: {
	              a: 0,
	              ix: 1,
	              k: [0, 0]
	            },
	            nm: 'Transform',
	            o: {
	              a: 0,
	              ix: 7,
	              k: 100
	            },
	            p: {
	              a: 0,
	              ix: 2,
	              k: [0, 0]
	            },
	            r: {
	              a: 1,
	              ix: 6,
	              k: [{
	                s: 0,
	                e: 0,
	                t: 0
	              }, {
	                s: 0,
	                e: 0,
	                t: 1
	              }]
	            },
	            s: {
	              a: 0,
	              ix: 3,
	              k: [100, 100]
	            },
	            sa: {
	              a: 0,
	              ix: 5,
	              k: 0
	            },
	            sk: {
	              a: 0,
	              ix: 4,
	              k: 0
	            },
	            ty: 'tr'
	          });
	          this.arr.splice(0, 0, group);

	          this._groups.splice(0, 0, group);

	          this._currentCopies += 1;
	        }

	        this.elem.reloadShapes();
	        hasReloaded = true;
	      }

	      cont = 0;
	      var renderFlag;

	      for (i = 0; i <= this._groups.length - 1; i += 1) {
	        renderFlag = cont < copies;
	        this._groups[i]._render = renderFlag;
	        this.changeGroupRender(this._groups[i].it, renderFlag);

	        if (!renderFlag) {
	          var elems = this.elemsData[i].it;
	          var transformData = elems[elems.length - 1];

	          if (transformData.transform.op.v !== 0) {
	            transformData.transform.op._mdf = true;
	            transformData.transform.op.v = 0;
	          } else {
	            transformData.transform.op._mdf = false;
	          }
	        }

	        cont += 1;
	      }

	      this._currentCopies = copies; /// /

	      var offset = this.o.v;
	      var offsetModulo = offset % 1;
	      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);
	      var pProps = this.pMatrix.props;
	      var rProps = this.rMatrix.props;
	      var sProps = this.sMatrix.props;
	      this.pMatrix.reset();
	      this.rMatrix.reset();
	      this.sMatrix.reset();
	      this.tMatrix.reset();
	      this.matrix.reset();
	      var iteration = 0;

	      if (offset > 0) {
	        while (iteration < roundOffset) {
	          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
	          iteration += 1;
	        }

	        if (offsetModulo) {
	          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);
	          iteration += offsetModulo;
	        }
	      } else if (offset < 0) {
	        while (iteration > roundOffset) {
	          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);
	          iteration -= 1;
	        }

	        if (offsetModulo) {
	          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);
	          iteration -= offsetModulo;
	        }
	      }

	      i = this.data.m === 1 ? 0 : this._currentCopies - 1;
	      dir = this.data.m === 1 ? 1 : -1;
	      cont = this._currentCopies;
	      var j;
	      var jLen;

	      while (cont) {
	        items = this.elemsData[i].it;
	        itemsTransform = items[items.length - 1].transform.mProps.v.props;
	        jLen = itemsTransform.length;
	        items[items.length - 1].transform.mProps._mdf = true;
	        items[items.length - 1].transform.op._mdf = true;
	        items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));

	        if (iteration !== 0) {
	          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {
	            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
	          }

	          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);
	          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);
	          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);

	          for (j = 0; j < jLen; j += 1) {
	            itemsTransform[j] = this.matrix.props[j];
	          }

	          this.matrix.reset();
	        } else {
	          this.matrix.reset();

	          for (j = 0; j < jLen; j += 1) {
	            itemsTransform[j] = this.matrix.props[j];
	          }
	        }

	        iteration += 1;
	        cont -= 1;
	        i += dir;
	      }
	    } else {
	      cont = this._currentCopies;
	      i = 0;
	      dir = 1;

	      while (cont) {
	        items = this.elemsData[i].it;
	        itemsTransform = items[items.length - 1].transform.mProps.v.props;
	        items[items.length - 1].transform.mProps._mdf = false;
	        items[items.length - 1].transform.op._mdf = false;
	        cont -= 1;
	        i += dir;
	      }
	    }

	    return hasReloaded;
	  };

	  RepeaterModifier.prototype.addShape = function () {};

	  function RoundCornersModifier() {}

	  extendPrototype([ShapeModifier], RoundCornersModifier);

	  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {
	    this.getValue = this.processKeys;
	    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);
	    this._isAnimated = !!this.rd.effectsSequence.length;
	  };

	  RoundCornersModifier.prototype.processPath = function (path, round) {
	    var clonedPath = shapePool.newElement();
	    clonedPath.c = path.c;
	    var i;
	    var len = path._length;
	    var currentV;
	    var currentI;
	    var currentO;
	    var closerV;
	    var distance;
	    var newPosPerc;
	    var index = 0;
	    var vX;
	    var vY;
	    var oX;
	    var oY;
	    var iX;
	    var iY;

	    for (i = 0; i < len; i += 1) {
	      currentV = path.v[i];
	      currentO = path.o[i];
	      currentI = path.i[i];

	      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {
	        if ((i === 0 || i === len - 1) && !path.c) {
	          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);
	          /* clonedPath.v[index] = currentV;
	                  clonedPath.o[index] = currentO;
	                  clonedPath.i[index] = currentI; */

	          index += 1;
	        } else {
	          if (i === 0) {
	            closerV = path.v[len - 1];
	          } else {
	            closerV = path.v[i - 1];
	          }

	          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
	          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
	          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
	          vX = iX;
	          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;
	          vY = iY;
	          oX = vX - (vX - currentV[0]) * roundCorner;
	          oY = vY - (vY - currentV[1]) * roundCorner;
	          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);
	          index += 1;

	          if (i === len - 1) {
	            closerV = path.v[0];
	          } else {
	            closerV = path.v[i + 1];
	          }

	          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
	          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
	          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
	          vX = oX;
	          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;
	          vY = oY;
	          iX = vX - (vX - currentV[0]) * roundCorner;
	          iY = vY - (vY - currentV[1]) * roundCorner;
	          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);
	          index += 1;
	        }
	      } else {
	        clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);
	        index += 1;
	      }
	    }

	    return clonedPath;
	  };

	  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {
	    var shapePaths;
	    var i;
	    var len = this.shapes.length;
	    var j;
	    var jLen;
	    var rd = this.rd.v;

	    if (rd !== 0) {
	      var shapeData;
	      var localShapeCollection;

	      for (i = 0; i < len; i += 1) {
	        shapeData = this.shapes[i];
	        localShapeCollection = shapeData.localShapeCollection;

	        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
	          localShapeCollection.releaseShapes();
	          shapeData.shape._mdf = true;
	          shapePaths = shapeData.shape.paths.shapes;
	          jLen = shapeData.shape.paths._length;

	          for (j = 0; j < jLen; j += 1) {
	            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));
	          }
	        }

	        shapeData.shape.paths = shapeData.localShapeCollection;
	      }
	    }

	    if (!this.dynamicProperties.length) {
	      this._mdf = false;
	    }
	  };

	  function floatEqual(a, b) {
	    return Math.abs(a - b) * 100000 <= Math.min(Math.abs(a), Math.abs(b));
	  }

	  function floatZero(f) {
	    return Math.abs(f) <= 0.00001;
	  }

	  function lerp(p0, p1, amount) {
	    return p0 * (1 - amount) + p1 * amount;
	  }

	  function lerpPoint(p0, p1, amount) {
	    return [lerp(p0[0], p1[0], amount), lerp(p0[1], p1[1], amount)];
	  }

	  function quadRoots(a, b, c) {
	    // no root
	    if (a === 0) return [];
	    var s = b * b - 4 * a * c; // Complex roots

	    if (s < 0) return [];
	    var singleRoot = -b / (2 * a); // 1 root

	    if (s === 0) return [singleRoot];
	    var delta = Math.sqrt(s) / (2 * a); // 2 roots

	    return [singleRoot - delta, singleRoot + delta];
	  }

	  function polynomialCoefficients(p0, p1, p2, p3) {
	    return [-p0 + 3 * p1 - 3 * p2 + p3, 3 * p0 - 6 * p1 + 3 * p2, -3 * p0 + 3 * p1, p0];
	  }

	  function singlePoint(p) {
	    return new PolynomialBezier(p, p, p, p, false);
	  }

	  function PolynomialBezier(p0, p1, p2, p3, linearize) {
	    if (linearize && pointEqual(p0, p1)) {
	      p1 = lerpPoint(p0, p3, 1 / 3);
	    }

	    if (linearize && pointEqual(p2, p3)) {
	      p2 = lerpPoint(p0, p3, 2 / 3);
	    }

	    var coeffx = polynomialCoefficients(p0[0], p1[0], p2[0], p3[0]);
	    var coeffy = polynomialCoefficients(p0[1], p1[1], p2[1], p3[1]);
	    this.a = [coeffx[0], coeffy[0]];
	    this.b = [coeffx[1], coeffy[1]];
	    this.c = [coeffx[2], coeffy[2]];
	    this.d = [coeffx[3], coeffy[3]];
	    this.points = [p0, p1, p2, p3];
	  }

	  PolynomialBezier.prototype.point = function (t) {
	    return [((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0], ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1]];
	  };

	  PolynomialBezier.prototype.derivative = function (t) {
	    return [(3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0], (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1]];
	  };

	  PolynomialBezier.prototype.tangentAngle = function (t) {
	    var p = this.derivative(t);
	    return Math.atan2(p[1], p[0]);
	  };

	  PolynomialBezier.prototype.normalAngle = function (t) {
	    var p = this.derivative(t);
	    return Math.atan2(p[0], p[1]);
	  };

	  PolynomialBezier.prototype.inflectionPoints = function () {
	    var denom = this.a[1] * this.b[0] - this.a[0] * this.b[1];
	    if (floatZero(denom)) return [];
	    var tcusp = -0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1]) / denom;
	    var square = tcusp * tcusp - 1 / 3 * (this.b[1] * this.c[0] - this.b[0] * this.c[1]) / denom;
	    if (square < 0) return [];
	    var root = Math.sqrt(square);

	    if (floatZero(root)) {
	      if (root > 0 && root < 1) return [tcusp];
	      return [];
	    }

	    return [tcusp - root, tcusp + root].filter(function (r) {
	      return r > 0 && r < 1;
	    });
	  };

	  PolynomialBezier.prototype.split = function (t) {
	    if (t <= 0) return [singlePoint(this.points[0]), this];
	    if (t >= 1) return [this, singlePoint(this.points[this.points.length - 1])];
	    var p10 = lerpPoint(this.points[0], this.points[1], t);
	    var p11 = lerpPoint(this.points[1], this.points[2], t);
	    var p12 = lerpPoint(this.points[2], this.points[3], t);
	    var p20 = lerpPoint(p10, p11, t);
	    var p21 = lerpPoint(p11, p12, t);
	    var p3 = lerpPoint(p20, p21, t);
	    return [new PolynomialBezier(this.points[0], p10, p20, p3, true), new PolynomialBezier(p3, p21, p12, this.points[3], true)];
	  };

	  function extrema(bez, comp) {
	    var min = bez.points[0][comp];
	    var max = bez.points[bez.points.length - 1][comp];

	    if (min > max) {
	      var e = max;
	      max = min;
	      min = e;
	    } // Derivative roots to find min/max


	    var f = quadRoots(3 * bez.a[comp], 2 * bez.b[comp], bez.c[comp]);

	    for (var i = 0; i < f.length; i += 1) {
	      if (f[i] > 0 && f[i] < 1) {
	        var val = bez.point(f[i])[comp];
	        if (val < min) min = val;else if (val > max) max = val;
	      }
	    }

	    return {
	      min: min,
	      max: max
	    };
	  }

	  PolynomialBezier.prototype.bounds = function () {
	    return {
	      x: extrema(this, 0),
	      y: extrema(this, 1)
	    };
	  };

	  PolynomialBezier.prototype.boundingBox = function () {
	    var bounds = this.bounds();
	    return {
	      left: bounds.x.min,
	      right: bounds.x.max,
	      top: bounds.y.min,
	      bottom: bounds.y.max,
	      width: bounds.x.max - bounds.x.min,
	      height: bounds.y.max - bounds.y.min,
	      cx: (bounds.x.max + bounds.x.min) / 2,
	      cy: (bounds.y.max + bounds.y.min) / 2
	    };
	  };

	  function intersectData(bez, t1, t2) {
	    var box = bez.boundingBox();
	    return {
	      cx: box.cx,
	      cy: box.cy,
	      width: box.width,
	      height: box.height,
	      bez: bez,
	      t: (t1 + t2) / 2,
	      t1: t1,
	      t2: t2
	    };
	  }

	  function splitData(data) {
	    var split = data.bez.split(0.5);
	    return [intersectData(split[0], data.t1, data.t), intersectData(split[1], data.t, data.t2)];
	  }

	  function boxIntersect(b1, b2) {
	    return Math.abs(b1.cx - b2.cx) * 2 < b1.width + b2.width && Math.abs(b1.cy - b2.cy) * 2 < b1.height + b2.height;
	  }

	  function intersectsImpl(d1, d2, depth, tolerance, intersections, maxRecursion) {
	    if (!boxIntersect(d1, d2)) return;

	    if (depth >= maxRecursion || d1.width <= tolerance && d1.height <= tolerance && d2.width <= tolerance && d2.height <= tolerance) {
	      intersections.push([d1.t, d2.t]);
	      return;
	    }

	    var d1s = splitData(d1);
	    var d2s = splitData(d2);
	    intersectsImpl(d1s[0], d2s[0], depth + 1, tolerance, intersections, maxRecursion);
	    intersectsImpl(d1s[0], d2s[1], depth + 1, tolerance, intersections, maxRecursion);
	    intersectsImpl(d1s[1], d2s[0], depth + 1, tolerance, intersections, maxRecursion);
	    intersectsImpl(d1s[1], d2s[1], depth + 1, tolerance, intersections, maxRecursion);
	  }

	  PolynomialBezier.prototype.intersections = function (other, tolerance, maxRecursion) {
	    if (tolerance === undefined) tolerance = 2;
	    if (maxRecursion === undefined) maxRecursion = 7;
	    var intersections = [];
	    intersectsImpl(intersectData(this, 0, 1), intersectData(other, 0, 1), 0, tolerance, intersections, maxRecursion);
	    return intersections;
	  };

	  PolynomialBezier.shapeSegment = function (shapePath, index) {
	    var nextIndex = (index + 1) % shapePath.length();
	    return new PolynomialBezier(shapePath.v[index], shapePath.o[index], shapePath.i[nextIndex], shapePath.v[nextIndex], true);
	  };

	  PolynomialBezier.shapeSegmentInverted = function (shapePath, index) {
	    var nextIndex = (index + 1) % shapePath.length();
	    return new PolynomialBezier(shapePath.v[nextIndex], shapePath.i[nextIndex], shapePath.o[index], shapePath.v[index], true);
	  };

	  function crossProduct(a, b) {
	    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
	  }

	  function lineIntersection(start1, end1, start2, end2) {
	    var v1 = [start1[0], start1[1], 1];
	    var v2 = [end1[0], end1[1], 1];
	    var v3 = [start2[0], start2[1], 1];
	    var v4 = [end2[0], end2[1], 1];
	    var r = crossProduct(crossProduct(v1, v2), crossProduct(v3, v4));
	    if (floatZero(r[2])) return null;
	    return [r[0] / r[2], r[1] / r[2]];
	  }

	  function polarOffset(p, angle, length) {
	    return [p[0] + Math.cos(angle) * length, p[1] - Math.sin(angle) * length];
	  }

	  function pointDistance(p1, p2) {
	    return Math.hypot(p1[0] - p2[0], p1[1] - p2[1]);
	  }

	  function pointEqual(p1, p2) {
	    return floatEqual(p1[0], p2[0]) && floatEqual(p1[1], p2[1]);
	  }

	  function ZigZagModifier() {}

	  extendPrototype([ShapeModifier], ZigZagModifier);

	  ZigZagModifier.prototype.initModifierProperties = function (elem, data) {
	    this.getValue = this.processKeys;
	    this.amplitude = PropertyFactory.getProp(elem, data.s, 0, null, this);
	    this.frequency = PropertyFactory.getProp(elem, data.r, 0, null, this);
	    this.pointsType = PropertyFactory.getProp(elem, data.pt, 0, null, this);
	    this._isAnimated = this.amplitude.effectsSequence.length !== 0 || this.frequency.effectsSequence.length !== 0 || this.pointsType.effectsSequence.length !== 0;
	  };

	  function setPoint(outputBezier, point, angle, direction, amplitude, outAmplitude, inAmplitude) {
	    var angO = angle - Math.PI / 2;
	    var angI = angle + Math.PI / 2;
	    var px = point[0] + Math.cos(angle) * direction * amplitude;
	    var py = point[1] - Math.sin(angle) * direction * amplitude;
	    outputBezier.setTripleAt(px, py, px + Math.cos(angO) * outAmplitude, py - Math.sin(angO) * outAmplitude, px + Math.cos(angI) * inAmplitude, py - Math.sin(angI) * inAmplitude, outputBezier.length());
	  }

	  function getPerpendicularVector(pt1, pt2) {
	    var vector = [pt2[0] - pt1[0], pt2[1] - pt1[1]];
	    var rot = -Math.PI * 0.5;
	    var rotatedVector = [Math.cos(rot) * vector[0] - Math.sin(rot) * vector[1], Math.sin(rot) * vector[0] + Math.cos(rot) * vector[1]];
	    return rotatedVector;
	  }

	  function getProjectingAngle(path, cur) {
	    var prevIndex = cur === 0 ? path.length() - 1 : cur - 1;
	    var nextIndex = (cur + 1) % path.length();
	    var prevPoint = path.v[prevIndex];
	    var nextPoint = path.v[nextIndex];
	    var pVector = getPerpendicularVector(prevPoint, nextPoint);
	    return Math.atan2(0, 1) - Math.atan2(pVector[1], pVector[0]);
	  }

	  function zigZagCorner(outputBezier, path, cur, amplitude, frequency, pointType, direction) {
	    var angle = getProjectingAngle(path, cur);
	    var point = path.v[cur % path._length];
	    var prevPoint = path.v[cur === 0 ? path._length - 1 : cur - 1];
	    var nextPoint = path.v[(cur + 1) % path._length];
	    var prevDist = pointType === 2 ? Math.sqrt(Math.pow(point[0] - prevPoint[0], 2) + Math.pow(point[1] - prevPoint[1], 2)) : 0;
	    var nextDist = pointType === 2 ? Math.sqrt(Math.pow(point[0] - nextPoint[0], 2) + Math.pow(point[1] - nextPoint[1], 2)) : 0;
	    setPoint(outputBezier, path.v[cur % path._length], angle, direction, amplitude, nextDist / ((frequency + 1) * 2), prevDist / ((frequency + 1) * 2));
	  }

	  function zigZagSegment(outputBezier, segment, amplitude, frequency, pointType, direction) {
	    for (var i = 0; i < frequency; i += 1) {
	      var t = (i + 1) / (frequency + 1);
	      var dist = pointType === 2 ? Math.sqrt(Math.pow(segment.points[3][0] - segment.points[0][0], 2) + Math.pow(segment.points[3][1] - segment.points[0][1], 2)) : 0;
	      var angle = segment.normalAngle(t);
	      var point = segment.point(t);
	      setPoint(outputBezier, point, angle, direction, amplitude, dist / ((frequency + 1) * 2), dist / ((frequency + 1) * 2));
	      direction = -direction;
	    }

	    return direction;
	  }

	  ZigZagModifier.prototype.processPath = function (path, amplitude, frequency, pointType) {
	    var count = path._length;
	    var clonedPath = shapePool.newElement();
	    clonedPath.c = path.c;

	    if (!path.c) {
	      count -= 1;
	    }

	    if (count === 0) return clonedPath;
	    var direction = -1;
	    var segment = PolynomialBezier.shapeSegment(path, 0);
	    zigZagCorner(clonedPath, path, 0, amplitude, frequency, pointType, direction);

	    for (var i = 0; i < count; i += 1) {
	      direction = zigZagSegment(clonedPath, segment, amplitude, frequency, pointType, -direction);

	      if (i === count - 1 && !path.c) {
	        segment = null;
	      } else {
	        segment = PolynomialBezier.shapeSegment(path, (i + 1) % count);
	      }

	      zigZagCorner(clonedPath, path, i + 1, amplitude, frequency, pointType, direction);
	    }

	    return clonedPath;
	  };

	  ZigZagModifier.prototype.processShapes = function (_isFirstFrame) {
	    var shapePaths;
	    var i;
	    var len = this.shapes.length;
	    var j;
	    var jLen;
	    var amplitude = this.amplitude.v;
	    var frequency = Math.max(0, Math.round(this.frequency.v));
	    var pointType = this.pointsType.v;

	    if (amplitude !== 0) {
	      var shapeData;
	      var localShapeCollection;

	      for (i = 0; i < len; i += 1) {
	        shapeData = this.shapes[i];
	        localShapeCollection = shapeData.localShapeCollection;

	        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
	          localShapeCollection.releaseShapes();
	          shapeData.shape._mdf = true;
	          shapePaths = shapeData.shape.paths.shapes;
	          jLen = shapeData.shape.paths._length;

	          for (j = 0; j < jLen; j += 1) {
	            localShapeCollection.addShape(this.processPath(shapePaths[j], amplitude, frequency, pointType));
	          }
	        }

	        shapeData.shape.paths = shapeData.localShapeCollection;
	      }
	    }

	    if (!this.dynamicProperties.length) {
	      this._mdf = false;
	    }
	  };

	  function linearOffset(p1, p2, amount) {
	    var angle = Math.atan2(p2[0] - p1[0], p2[1] - p1[1]);
	    return [polarOffset(p1, angle, amount), polarOffset(p2, angle, amount)];
	  }

	  function offsetSegment(segment, amount) {
	    var p0;
	    var p1a;
	    var p1b;
	    var p2b;
	    var p2a;
	    var p3;
	    var e;
	    e = linearOffset(segment.points[0], segment.points[1], amount);
	    p0 = e[0];
	    p1a = e[1];
	    e = linearOffset(segment.points[1], segment.points[2], amount);
	    p1b = e[0];
	    p2b = e[1];
	    e = linearOffset(segment.points[2], segment.points[3], amount);
	    p2a = e[0];
	    p3 = e[1];
	    var p1 = lineIntersection(p0, p1a, p1b, p2b);
	    if (p1 === null) p1 = p1a;
	    var p2 = lineIntersection(p2a, p3, p1b, p2b);
	    if (p2 === null) p2 = p2a;
	    return new PolynomialBezier(p0, p1, p2, p3);
	  }

	  function joinLines(outputBezier, seg1, seg2, lineJoin, miterLimit) {
	    var p0 = seg1.points[3];
	    var p1 = seg2.points[0]; // Bevel

	    if (lineJoin === 3) return p0; // Connected, they don't need a joint

	    if (pointEqual(p0, p1)) return p0; // Round

	    if (lineJoin === 2) {
	      var angleOut = -seg1.tangentAngle(1);
	      var angleIn = -seg2.tangentAngle(0) + Math.PI;
	      var center = lineIntersection(p0, polarOffset(p0, angleOut + Math.PI / 2, 100), p1, polarOffset(p1, angleOut + Math.PI / 2, 100));
	      var radius = center ? pointDistance(center, p0) : pointDistance(p0, p1) / 2;
	      var tan = polarOffset(p0, angleOut, 2 * radius * roundCorner);
	      outputBezier.setXYAt(tan[0], tan[1], 'o', outputBezier.length() - 1);
	      tan = polarOffset(p1, angleIn, 2 * radius * roundCorner);
	      outputBezier.setTripleAt(p1[0], p1[1], p1[0], p1[1], tan[0], tan[1], outputBezier.length());
	      return p1;
	    } // Miter


	    var t0 = pointEqual(p0, seg1.points[2]) ? seg1.points[0] : seg1.points[2];
	    var t1 = pointEqual(p1, seg2.points[1]) ? seg2.points[3] : seg2.points[1];
	    var intersection = lineIntersection(t0, p0, p1, t1);

	    if (intersection && pointDistance(intersection, p0) < miterLimit) {
	      outputBezier.setTripleAt(intersection[0], intersection[1], intersection[0], intersection[1], intersection[0], intersection[1], outputBezier.length());
	      return intersection;
	    }

	    return p0;
	  }

	  function getIntersection(a, b) {
	    var intersect = a.intersections(b);
	    if (intersect.length && floatEqual(intersect[0][0], 1)) intersect.shift();
	    if (intersect.length) return intersect[0];
	    return null;
	  }

	  function pruneSegmentIntersection(a, b) {
	    var outa = a.slice();
	    var outb = b.slice();
	    var intersect = getIntersection(a[a.length - 1], b[0]);

	    if (intersect) {
	      outa[a.length - 1] = a[a.length - 1].split(intersect[0])[0];
	      outb[0] = b[0].split(intersect[1])[1];
	    }

	    if (a.length > 1 && b.length > 1) {
	      intersect = getIntersection(a[0], b[b.length - 1]);

	      if (intersect) {
	        return [[a[0].split(intersect[0])[0]], [b[b.length - 1].split(intersect[1])[1]]];
	      }
	    }

	    return [outa, outb];
	  }

	  function pruneIntersections(segments) {
	    var e;

	    for (var i = 1; i < segments.length; i += 1) {
	      e = pruneSegmentIntersection(segments[i - 1], segments[i]);
	      segments[i - 1] = e[0];
	      segments[i] = e[1];
	    }

	    if (segments.length > 1) {
	      e = pruneSegmentIntersection(segments[segments.length - 1], segments[0]);
	      segments[segments.length - 1] = e[0];
	      segments[0] = e[1];
	    }

	    return segments;
	  }

	  function offsetSegmentSplit(segment, amount) {
	    /*
	      We split each bezier segment into smaller pieces based
	      on inflection points, this ensures the control point
	      polygon is convex.
	        (A cubic bezier can have none, one, or two inflection points)
	    */
	    var flex = segment.inflectionPoints();
	    var left;
	    var right;
	    var split;
	    var mid;

	    if (flex.length === 0) {
	      return [offsetSegment(segment, amount)];
	    }

	    if (flex.length === 1 || floatEqual(flex[1], 1)) {
	      split = segment.split(flex[0]);
	      left = split[0];
	      right = split[1];
	      return [offsetSegment(left, amount), offsetSegment(right, amount)];
	    }

	    split = segment.split(flex[0]);
	    left = split[0];
	    var t = (flex[1] - flex[0]) / (1 - flex[0]);
	    split = split[1].split(t);
	    mid = split[0];
	    right = split[1];
	    return [offsetSegment(left, amount), offsetSegment(mid, amount), offsetSegment(right, amount)];
	  }

	  function OffsetPathModifier() {}

	  extendPrototype([ShapeModifier], OffsetPathModifier);

	  OffsetPathModifier.prototype.initModifierProperties = function (elem, data) {
	    this.getValue = this.processKeys;
	    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);
	    this.miterLimit = PropertyFactory.getProp(elem, data.ml, 0, null, this);
	    this.lineJoin = data.lj;
	    this._isAnimated = this.amount.effectsSequence.length !== 0;
	  };

	  OffsetPathModifier.prototype.processPath = function (inputBezier, amount, lineJoin, miterLimit) {
	    var outputBezier = shapePool.newElement();
	    outputBezier.c = inputBezier.c;
	    var count = inputBezier.length();

	    if (!inputBezier.c) {
	      count -= 1;
	    }

	    var i;
	    var j;
	    var segment;
	    var multiSegments = [];

	    for (i = 0; i < count; i += 1) {
	      segment = PolynomialBezier.shapeSegment(inputBezier, i);
	      multiSegments.push(offsetSegmentSplit(segment, amount));
	    }

	    if (!inputBezier.c) {
	      for (i = count - 1; i >= 0; i -= 1) {
	        segment = PolynomialBezier.shapeSegmentInverted(inputBezier, i);
	        multiSegments.push(offsetSegmentSplit(segment, amount));
	      }
	    }

	    multiSegments = pruneIntersections(multiSegments); // Add bezier segments to the output and apply line joints

	    var lastPoint = null;
	    var lastSeg = null;

	    for (i = 0; i < multiSegments.length; i += 1) {
	      var multiSegment = multiSegments[i];
	      if (lastSeg) lastPoint = joinLines(outputBezier, lastSeg, multiSegment[0], lineJoin, miterLimit);
	      lastSeg = multiSegment[multiSegment.length - 1];

	      for (j = 0; j < multiSegment.length; j += 1) {
	        segment = multiSegment[j];

	        if (lastPoint && pointEqual(segment.points[0], lastPoint)) {
	          outputBezier.setXYAt(segment.points[1][0], segment.points[1][1], 'o', outputBezier.length() - 1);
	        } else {
	          outputBezier.setTripleAt(segment.points[0][0], segment.points[0][1], segment.points[1][0], segment.points[1][1], segment.points[0][0], segment.points[0][1], outputBezier.length());
	        }

	        outputBezier.setTripleAt(segment.points[3][0], segment.points[3][1], segment.points[3][0], segment.points[3][1], segment.points[2][0], segment.points[2][1], outputBezier.length());
	        lastPoint = segment.points[3];
	      }
	    }

	    if (multiSegments.length) joinLines(outputBezier, lastSeg, multiSegments[0][0], lineJoin, miterLimit);
	    return outputBezier;
	  };

	  OffsetPathModifier.prototype.processShapes = function (_isFirstFrame) {
	    var shapePaths;
	    var i;
	    var len = this.shapes.length;
	    var j;
	    var jLen;
	    var amount = this.amount.v;
	    var miterLimit = this.miterLimit.v;
	    var lineJoin = this.lineJoin;

	    if (amount !== 0) {
	      var shapeData;
	      var localShapeCollection;

	      for (i = 0; i < len; i += 1) {
	        shapeData = this.shapes[i];
	        localShapeCollection = shapeData.localShapeCollection;

	        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
	          localShapeCollection.releaseShapes();
	          shapeData.shape._mdf = true;
	          shapePaths = shapeData.shape.paths.shapes;
	          jLen = shapeData.shape.paths._length;

	          for (j = 0; j < jLen; j += 1) {
	            localShapeCollection.addShape(this.processPath(shapePaths[j], amount, lineJoin, miterLimit));
	          }
	        }

	        shapeData.shape.paths = shapeData.localShapeCollection;
	      }
	    }

	    if (!this.dynamicProperties.length) {
	      this._mdf = false;
	    }
	  };

	  function getFontProperties(fontData) {
	    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];
	    var fWeight = 'normal';
	    var fStyle = 'normal';
	    var len = styles.length;
	    var styleName;

	    for (var i = 0; i < len; i += 1) {
	      styleName = styles[i].toLowerCase();

	      switch (styleName) {
	        case 'italic':
	          fStyle = 'italic';
	          break;

	        case 'bold':
	          fWeight = '700';
	          break;

	        case 'black':
	          fWeight = '900';
	          break;

	        case 'medium':
	          fWeight = '500';
	          break;

	        case 'regular':
	        case 'normal':
	          fWeight = '400';
	          break;

	        case 'light':
	        case 'thin':
	          fWeight = '200';
	          break;
	      }
	    }

	    return {
	      style: fStyle,
	      weight: fontData.fWeight || fWeight
	    };
	  }

	  var FontManager = function () {
	    var maxWaitingTime = 5000;
	    var emptyChar = {
	      w: 0,
	      size: 0,
	      shapes: [],
	      data: {
	        shapes: []
	      }
	    };
	    var combinedCharacters = []; // Hindi characters

	    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
	    var BLACK_FLAG_CODE_POINT = 127988;
	    var CANCEL_TAG_CODE_POINT = 917631;
	    var A_TAG_CODE_POINT = 917601;
	    var Z_TAG_CODE_POINT = 917626;
	    var VARIATION_SELECTOR_16_CODE_POINT = 65039;
	    var ZERO_WIDTH_JOINER_CODE_POINT = 8205;
	    var REGIONAL_CHARACTER_A_CODE_POINT = 127462;
	    var REGIONAL_CHARACTER_Z_CODE_POINT = 127487;
	    var surrogateModifiers = ['d83cdffb', 'd83cdffc', 'd83cdffd', 'd83cdffe', 'd83cdfff'];

	    function trimFontOptions(font) {
	      var familyArray = font.split(',');
	      var i;
	      var len = familyArray.length;
	      var enabledFamilies = [];

	      for (i = 0; i < len; i += 1) {
	        if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {
	          enabledFamilies.push(familyArray[i]);
	        }
	      }

	      return enabledFamilies.join(',');
	    }

	    function setUpNode(font, family) {
	      var parentNode = createTag('span'); // Node is invisible to screen readers.

	      parentNode.setAttribute('aria-hidden', true);
	      parentNode.style.fontFamily = family;
	      var node = createTag('span'); // Characters that vary significantly among different fonts

	      node.innerText = 'giItT1WQy@!-/#'; // Visible - so we can measure it - but not on the screen

	      parentNode.style.position = 'absolute';
	      parentNode.style.left = '-10000px';
	      parentNode.style.top = '-10000px'; // Large font size makes even subtle changes obvious

	      parentNode.style.fontSize = '300px'; // Reset any font properties

	      parentNode.style.fontVariant = 'normal';
	      parentNode.style.fontStyle = 'normal';
	      parentNode.style.fontWeight = 'normal';
	      parentNode.style.letterSpacing = '0';
	      parentNode.appendChild(node);
	      document.body.appendChild(parentNode); // Remember width with no applied web font

	      var width = node.offsetWidth;
	      node.style.fontFamily = trimFontOptions(font) + ', ' + family;
	      return {
	        node: node,
	        w: width,
	        parent: parentNode
	      };
	    }

	    function checkLoadedFonts() {
	      var i;
	      var len = this.fonts.length;
	      var node;
	      var w;
	      var loadedCount = len;

	      for (i = 0; i < len; i += 1) {
	        if (this.fonts[i].loaded) {
	          loadedCount -= 1;
	        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {
	          this.fonts[i].loaded = true;
	        } else {
	          node = this.fonts[i].monoCase.node;
	          w = this.fonts[i].monoCase.w;

	          if (node.offsetWidth !== w) {
	            loadedCount -= 1;
	            this.fonts[i].loaded = true;
	          } else {
	            node = this.fonts[i].sansCase.node;
	            w = this.fonts[i].sansCase.w;

	            if (node.offsetWidth !== w) {
	              loadedCount -= 1;
	              this.fonts[i].loaded = true;
	            }
	          }

	          if (this.fonts[i].loaded) {
	            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);
	            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);
	          }
	        }
	      }

	      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {
	        setTimeout(this.checkLoadedFontsBinded, 20);
	      } else {
	        setTimeout(this.setIsLoadedBinded, 10);
	      }
	    }

	    function createHelper(fontData, def) {
	      var engine = document.body && def ? 'svg' : 'canvas';
	      var helper;
	      var fontProps = getFontProperties(fontData);

	      if (engine === 'svg') {
	        var tHelper = createNS('text');
	        tHelper.style.fontSize = '100px'; // tHelper.style.fontFamily = fontData.fFamily;

	        tHelper.setAttribute('font-family', fontData.fFamily);
	        tHelper.setAttribute('font-style', fontProps.style);
	        tHelper.setAttribute('font-weight', fontProps.weight);
	        tHelper.textContent = '1';

	        if (fontData.fClass) {
	          tHelper.style.fontFamily = 'inherit';
	          tHelper.setAttribute('class', fontData.fClass);
	        } else {
	          tHelper.style.fontFamily = fontData.fFamily;
	        }

	        def.appendChild(tHelper);
	        helper = tHelper;
	      } else {
	        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext('2d');
	        tCanvasHelper.font = fontProps.style + ' ' + fontProps.weight + ' 100px ' + fontData.fFamily;
	        helper = tCanvasHelper;
	      }

	      function measure(text) {
	        if (engine === 'svg') {
	          helper.textContent = text;
	          return helper.getComputedTextLength();
	        }

	        return helper.measureText(text).width;
	      }

	      return {
	        measureText: measure
	      };
	    }

	    function addFonts(fontData, defs) {
	      if (!fontData) {
	        this.isLoaded = true;
	        return;
	      }

	      if (this.chars) {
	        this.isLoaded = true;
	        this.fonts = fontData.list;
	        return;
	      }

	      if (!document.body) {
	        this.isLoaded = true;
	        fontData.list.forEach(function (data) {
	          data.helper = createHelper(data);
	          data.cache = {};
	        });
	        this.fonts = fontData.list;
	        return;
	      }

	      var fontArr = fontData.list;
	      var i;
	      var len = fontArr.length;
	      var _pendingFonts = len;

	      for (i = 0; i < len; i += 1) {
	        var shouldLoadFont = true;
	        var loadedSelector;
	        var j;
	        fontArr[i].loaded = false;
	        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');
	        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');

	        if (!fontArr[i].fPath) {
	          fontArr[i].loaded = true;
	          _pendingFonts -= 1;
	        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {
	          loadedSelector = document.querySelectorAll('style[f-forigin="p"][f-family="' + fontArr[i].fFamily + '"], style[f-origin="3"][f-family="' + fontArr[i].fFamily + '"]');

	          if (loadedSelector.length > 0) {
	            shouldLoadFont = false;
	          }

	          if (shouldLoadFont) {
	            var s = createTag('style');
	            s.setAttribute('f-forigin', fontArr[i].fOrigin);
	            s.setAttribute('f-origin', fontArr[i].origin);
	            s.setAttribute('f-family', fontArr[i].fFamily);
	            s.type = 'text/css';
	            s.innerText = '@font-face {font-family: ' + fontArr[i].fFamily + "; font-style: normal; src: url('" + fontArr[i].fPath + "');}";
	            defs.appendChild(s);
	          }
	        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {
	          loadedSelector = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');

	          for (j = 0; j < loadedSelector.length; j += 1) {
	            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {
	              // Font is already loaded
	              shouldLoadFont = false;
	            }
	          }

	          if (shouldLoadFont) {
	            var l = createTag('link');
	            l.setAttribute('f-forigin', fontArr[i].fOrigin);
	            l.setAttribute('f-origin', fontArr[i].origin);
	            l.type = 'text/css';
	            l.rel = 'stylesheet';
	            l.href = fontArr[i].fPath;
	            document.body.appendChild(l);
	          }
	        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {
	          loadedSelector = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');

	          for (j = 0; j < loadedSelector.length; j += 1) {
	            if (fontArr[i].fPath === loadedSelector[j].src) {
	              // Font is already loaded
	              shouldLoadFont = false;
	            }
	          }

	          if (shouldLoadFont) {
	            var sc = createTag('link');
	            sc.setAttribute('f-forigin', fontArr[i].fOrigin);
	            sc.setAttribute('f-origin', fontArr[i].origin);
	            sc.setAttribute('rel', 'stylesheet');
	            sc.setAttribute('href', fontArr[i].fPath);
	            defs.appendChild(sc);
	          }
	        }

	        fontArr[i].helper = createHelper(fontArr[i], defs);
	        fontArr[i].cache = {};
	        this.fonts.push(fontArr[i]);
	      }

	      if (_pendingFonts === 0) {
	        this.isLoaded = true;
	      } else {
	        // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.
	        // Adding this timeout seems to fix it
	        setTimeout(this.checkLoadedFonts.bind(this), 100);
	      }
	    }

	    function addChars(chars) {
	      if (!chars) {
	        return;
	      }

	      if (!this.chars) {
	        this.chars = [];
	      }

	      var i;
	      var len = chars.length;
	      var j;
	      var jLen = this.chars.length;
	      var found;

	      for (i = 0; i < len; i += 1) {
	        j = 0;
	        found = false;

	        while (j < jLen) {
	          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {
	            found = true;
	          }

	          j += 1;
	        }

	        if (!found) {
	          this.chars.push(chars[i]);
	          jLen += 1;
	        }
	      }
	    }

	    function getCharData(_char, style, font) {
	      var i = 0;
	      var len = this.chars.length;

	      while (i < len) {
	        if (this.chars[i].ch === _char && this.chars[i].style === style && this.chars[i].fFamily === font) {
	          return this.chars[i];
	        }

	        i += 1;
	      }

	      if ((typeof _char === 'string' && _char.charCodeAt(0) !== 13 || !_char) && console && console.warn // eslint-disable-line no-console
	      && !this._warned) {
	        this._warned = true;
	        console.warn('Missing character from exported characters list: ', _char, style, font); // eslint-disable-line no-console
	      }

	      return emptyChar;
	    }

	    function measureText(_char2, fontName, size) {
	      var fontData = this.getFontByName(fontName); // Using the char instead of char.charCodeAt(0)
	      // to avoid collisions between equal chars

	      var index = _char2;

	      if (!fontData.cache[index]) {
	        var tHelper = fontData.helper;

	        if (_char2 === ' ') {
	          var doubleSize = tHelper.measureText('|' + _char2 + '|');
	          var singleSize = tHelper.measureText('||');
	          fontData.cache[index] = (doubleSize - singleSize) / 100;
	        } else {
	          fontData.cache[index] = tHelper.measureText(_char2) / 100;
	        }
	      }

	      return fontData.cache[index] * size;
	    }

	    function getFontByName(name) {
	      var i = 0;
	      var len = this.fonts.length;

	      while (i < len) {
	        if (this.fonts[i].fName === name) {
	          return this.fonts[i];
	        }

	        i += 1;
	      }

	      return this.fonts[0];
	    }

	    function getCodePoint(string) {
	      var codePoint = 0;
	      var first = string.charCodeAt(0);

	      if (first >= 0xD800 && first <= 0xDBFF) {
	        var second = string.charCodeAt(1);

	        if (second >= 0xDC00 && second <= 0xDFFF) {
	          codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	        }
	      }

	      return codePoint;
	    } // Skin tone modifiers


	    function isModifier(firstCharCode, secondCharCode) {
	      var sum = firstCharCode.toString(16) + secondCharCode.toString(16);
	      return surrogateModifiers.indexOf(sum) !== -1;
	    }

	    function isZeroWidthJoiner(charCode) {
	      return charCode === ZERO_WIDTH_JOINER_CODE_POINT;
	    } // This codepoint may change the appearance of the preceding character.
	    // If that is a symbol, dingbat or emoji, U+FE0F forces it to be rendered
	    // as a colorful image as compared to a monochrome text variant.


	    function isVariationSelector(charCode) {
	      return charCode === VARIATION_SELECTOR_16_CODE_POINT;
	    } // The regional indicator symbols are a set of 26 alphabetic Unicode
	    /// characters (A–Z) intended to be used to encode ISO 3166-1 alpha-2
	    // two-letter country codes in a way that allows optional special treatment.


	    function isRegionalCode(string) {
	      var codePoint = getCodePoint(string);

	      if (codePoint >= REGIONAL_CHARACTER_A_CODE_POINT && codePoint <= REGIONAL_CHARACTER_Z_CODE_POINT) {
	        return true;
	      }

	      return false;
	    } // Some Emoji implementations represent combinations of
	    // two “regional indicator” letters as a single flag symbol.


	    function isFlagEmoji(string) {
	      return isRegionalCode(string.substr(0, 2)) && isRegionalCode(string.substr(2, 2));
	    }

	    function isCombinedCharacter(_char3) {
	      return combinedCharacters.indexOf(_char3) !== -1;
	    } // Regional flags start with a BLACK_FLAG_CODE_POINT
	    // folowed by 5 chars in the TAG range
	    // and end with a CANCEL_TAG_CODE_POINT


	    function isRegionalFlag(text, index) {
	      var codePoint = getCodePoint(text.substr(index, 2));

	      if (codePoint !== BLACK_FLAG_CODE_POINT) {
	        return false;
	      }

	      var count = 0;
	      index += 2;

	      while (count < 5) {
	        codePoint = getCodePoint(text.substr(index, 2));

	        if (codePoint < A_TAG_CODE_POINT || codePoint > Z_TAG_CODE_POINT) {
	          return false;
	        }

	        count += 1;
	        index += 2;
	      }

	      return getCodePoint(text.substr(index, 2)) === CANCEL_TAG_CODE_POINT;
	    }

	    function setIsLoaded() {
	      this.isLoaded = true;
	    }

	    var Font = function Font() {
	      this.fonts = [];
	      this.chars = null;
	      this.typekitLoaded = 0;
	      this.isLoaded = false;
	      this._warned = false;
	      this.initTime = Date.now();
	      this.setIsLoadedBinded = this.setIsLoaded.bind(this);
	      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);
	    };

	    Font.isModifier = isModifier;
	    Font.isZeroWidthJoiner = isZeroWidthJoiner;
	    Font.isFlagEmoji = isFlagEmoji;
	    Font.isRegionalCode = isRegionalCode;
	    Font.isCombinedCharacter = isCombinedCharacter;
	    Font.isRegionalFlag = isRegionalFlag;
	    Font.isVariationSelector = isVariationSelector;
	    Font.BLACK_FLAG_CODE_POINT = BLACK_FLAG_CODE_POINT;
	    var fontPrototype = {
	      addChars: addChars,
	      addFonts: addFonts,
	      getCharData: getCharData,
	      getFontByName: getFontByName,
	      measureText: measureText,
	      checkLoadedFonts: checkLoadedFonts,
	      setIsLoaded: setIsLoaded
	    };
	    Font.prototype = fontPrototype;
	    return Font;
	  }();

	  function SlotManager(animationData) {
	    this.animationData = animationData;
	  }

	  SlotManager.prototype.getProp = function (data) {
	    if (this.animationData.slots && this.animationData.slots[data.sid]) {
	      return Object.assign(data, this.animationData.slots[data.sid].p);
	    }

	    return data;
	  };

	  function slotFactory(animationData) {
	    return new SlotManager(animationData);
	  }

	  function RenderableElement() {}

	  RenderableElement.prototype = {
	    initRenderable: function initRenderable() {
	      // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange
	      this.isInRange = false; // layer's display state

	      this.hidden = false; // If layer's transparency equals 0, it can be hidden

	      this.isTransparent = false; // list of animated components

	      this.renderableComponents = [];
	    },
	    addRenderableComponent: function addRenderableComponent(component) {
	      if (this.renderableComponents.indexOf(component) === -1) {
	        this.renderableComponents.push(component);
	      }
	    },
	    removeRenderableComponent: function removeRenderableComponent(component) {
	      if (this.renderableComponents.indexOf(component) !== -1) {
	        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);
	      }
	    },
	    prepareRenderableFrame: function prepareRenderableFrame(num) {
	      this.checkLayerLimits(num);
	    },
	    checkTransparency: function checkTransparency() {
	      if (this.finalTransform.mProp.o.v <= 0) {
	        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {
	          this.isTransparent = true;
	          this.hide();
	        }
	      } else if (this.isTransparent) {
	        this.isTransparent = false;
	        this.show();
	      }
	    },

	    /**
	       * @function
	       * Initializes frame related properties.
	       *
	       * @param {number} num
	       * current frame number in Layer's time
	       *
	       */
	    checkLayerLimits: function checkLayerLimits(num) {
	      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {
	        if (this.isInRange !== true) {
	          this.globalData._mdf = true;
	          this._mdf = true;
	          this.isInRange = true;
	          this.show();
	        }
	      } else if (this.isInRange !== false) {
	        this.globalData._mdf = true;
	        this.isInRange = false;
	        this.hide();
	      }
	    },
	    renderRenderable: function renderRenderable() {
	      var i;
	      var len = this.renderableComponents.length;

	      for (i = 0; i < len; i += 1) {
	        this.renderableComponents[i].renderFrame(this._isFirstFrame);
	      }
	      /* this.maskManager.renderFrame(this.finalTransform.mat);
	          this.renderableEffectsManager.renderFrame(this._isFirstFrame); */

	    },
	    sourceRectAtTime: function sourceRectAtTime() {
	      return {
	        top: 0,
	        left: 0,
	        width: 100,
	        height: 100
	      };
	    },
	    getLayerSize: function getLayerSize() {
	      if (this.data.ty === 5) {
	        return {
	          w: this.data.textData.width,
	          h: this.data.textData.height
	        };
	      }

	      return {
	        w: this.data.width,
	        h: this.data.height
	      };
	    }
	  };

	  var getBlendMode = function () {
	    var blendModeEnums = {
	      0: 'source-over',
	      1: 'multiply',
	      2: 'screen',
	      3: 'overlay',
	      4: 'darken',
	      5: 'lighten',
	      6: 'color-dodge',
	      7: 'color-burn',
	      8: 'hard-light',
	      9: 'soft-light',
	      10: 'difference',
	      11: 'exclusion',
	      12: 'hue',
	      13: 'saturation',
	      14: 'color',
	      15: 'luminosity'
	    };
	    return function (mode) {
	      return blendModeEnums[mode] || '';
	    };
	  }();

	  function SliderEffect(data, elem, container) {
	    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
	  }

	  function AngleEffect(data, elem, container) {
	    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
	  }

	  function ColorEffect(data, elem, container) {
	    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);
	  }

	  function PointEffect(data, elem, container) {
	    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);
	  }

	  function LayerIndexEffect(data, elem, container) {
	    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
	  }

	  function MaskIndexEffect(data, elem, container) {
	    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
	  }

	  function CheckboxEffect(data, elem, container) {
	    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
	  }

	  function NoValueEffect() {
	    this.p = {};
	  }

	  function EffectsManager(data, element) {
	    var effects = data.ef || [];
	    this.effectElements = [];
	    var i;
	    var len = effects.length;
	    var effectItem;

	    for (i = 0; i < len; i += 1) {
	      effectItem = new GroupEffect(effects[i], element);
	      this.effectElements.push(effectItem);
	    }
	  }

	  function GroupEffect(data, element) {
	    this.init(data, element);
	  }

	  extendPrototype([DynamicPropertyContainer], GroupEffect);
	  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;

	  GroupEffect.prototype.init = function (data, element) {
	    this.data = data;
	    this.effectElements = [];
	    this.initDynamicPropertyContainer(element);
	    var i;
	    var len = this.data.ef.length;
	    var eff;
	    var effects = this.data.ef;

	    for (i = 0; i < len; i += 1) {
	      eff = null;

	      switch (effects[i].ty) {
	        case 0:
	          eff = new SliderEffect(effects[i], element, this);
	          break;

	        case 1:
	          eff = new AngleEffect(effects[i], element, this);
	          break;

	        case 2:
	          eff = new ColorEffect(effects[i], element, this);
	          break;

	        case 3:
	          eff = new PointEffect(effects[i], element, this);
	          break;

	        case 4:
	        case 7:
	          eff = new CheckboxEffect(effects[i], element, this);
	          break;

	        case 10:
	          eff = new LayerIndexEffect(effects[i], element, this);
	          break;

	        case 11:
	          eff = new MaskIndexEffect(effects[i], element, this);
	          break;

	        case 5:
	          eff = new EffectsManager(effects[i], element);
	          break;
	        // case 6:

	        default:
	          eff = new NoValueEffect(effects[i]);
	          break;
	      }

	      if (eff) {
	        this.effectElements.push(eff);
	      }
	    }
	  };

	  function BaseElement() {}

	  BaseElement.prototype = {
	    checkMasks: function checkMasks() {
	      if (!this.data.hasMask) {
	        return false;
	      }

	      var i = 0;
	      var len = this.data.masksProperties.length;

	      while (i < len) {
	        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {
	          return true;
	        }

	        i += 1;
	      }

	      return false;
	    },
	    initExpressions: function initExpressions() {
	      var expressionsInterfaces = getExpressionInterfaces();

	      if (!expressionsInterfaces) {
	        return;
	      }

	      var LayerExpressionInterface = expressionsInterfaces('layer');
	      var EffectsExpressionInterface = expressionsInterfaces('effects');
	      var ShapeExpressionInterface = expressionsInterfaces('shape');
	      var TextExpressionInterface = expressionsInterfaces('text');
	      var CompExpressionInterface = expressionsInterfaces('comp');
	      this.layerInterface = LayerExpressionInterface(this);

	      if (this.data.hasMask && this.maskManager) {
	        this.layerInterface.registerMaskInterface(this.maskManager);
	      }

	      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);
	      this.layerInterface.registerEffectsInterface(effectsInterface);

	      if (this.data.ty === 0 || this.data.xt) {
	        this.compInterface = CompExpressionInterface(this);
	      } else if (this.data.ty === 4) {
	        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);
	        this.layerInterface.content = this.layerInterface.shapeInterface;
	      } else if (this.data.ty === 5) {
	        this.layerInterface.textInterface = TextExpressionInterface(this);
	        this.layerInterface.text = this.layerInterface.textInterface;
	      }
	    },
	    setBlendMode: function setBlendMode() {
	      var blendModeValue = getBlendMode(this.data.bm);
	      var elem = this.baseElement || this.layerElement;
	      elem.style['mix-blend-mode'] = blendModeValue;
	    },
	    initBaseData: function initBaseData(data, globalData, comp) {
	      this.globalData = globalData;
	      this.comp = comp;
	      this.data = data;
	      this.layerId = createElementID(); // Stretch factor for old animations missing this property.

	      if (!this.data.sr) {
	        this.data.sr = 1;
	      } // effects manager


	      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);
	    },
	    getType: function getType() {
	      return this.type;
	    },
	    sourceRectAtTime: function sourceRectAtTime() {}
	  };

	  /**
	   * @file
	   * Handles element's layer frame update.
	   * Checks layer in point and out point
	   *
	   */
	  function FrameElement() {}

	  FrameElement.prototype = {
	    /**
	       * @function
	       * Initializes frame related properties.
	       *
	       */
	    initFrame: function initFrame() {
	      // set to true when inpoint is rendered
	      this._isFirstFrame = false; // list of animated properties

	      this.dynamicProperties = []; // If layer has been modified in current tick this will be true

	      this._mdf = false;
	    },

	    /**
	       * @function
	       * Calculates all dynamic values
	       *
	       * @param {number} num
	       * current frame number in Layer's time
	       * @param {boolean} isVisible
	       * if layers is currently in range
	       *
	       */
	    prepareProperties: function prepareProperties(num, isVisible) {
	      var i;
	      var len = this.dynamicProperties.length;

	      for (i = 0; i < len; i += 1) {
	        if (isVisible || this._isParent && this.dynamicProperties[i].propType === 'transform') {
	          this.dynamicProperties[i].getValue();

	          if (this.dynamicProperties[i]._mdf) {
	            this.globalData._mdf = true;
	            this._mdf = true;
	          }
	        }
	      }
	    },
	    addDynamicProperty: function addDynamicProperty(prop) {
	      if (this.dynamicProperties.indexOf(prop) === -1) {
	        this.dynamicProperties.push(prop);
	      }
	    }
	  };

	  function FootageElement(data, globalData, comp) {
	    this.initFrame();
	    this.initRenderable();
	    this.assetData = globalData.getAssetData(data.refId);
	    this.footageData = globalData.imageLoader.getAsset(this.assetData);
	    this.initBaseData(data, globalData, comp);
	  }

	  FootageElement.prototype.prepareFrame = function () {};

	  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);

	  FootageElement.prototype.getBaseElement = function () {
	    return null;
	  };

	  FootageElement.prototype.renderFrame = function () {};

	  FootageElement.prototype.destroy = function () {};

	  FootageElement.prototype.initExpressions = function () {
	    var expressionsInterfaces = getExpressionInterfaces();

	    if (!expressionsInterfaces) {
	      return;
	    }

	    var FootageInterface = expressionsInterfaces('footage');
	    this.layerInterface = FootageInterface(this);
	  };

	  FootageElement.prototype.getFootageData = function () {
	    return this.footageData;
	  };

	  function AudioElement(data, globalData, comp) {
	    this.initFrame();
	    this.initRenderable();
	    this.assetData = globalData.getAssetData(data.refId);
	    this.initBaseData(data, globalData, comp);
	    this._isPlaying = false;
	    this._canPlay = false;
	    var assetPath = this.globalData.getAssetsPath(this.assetData);
	    this.audio = this.globalData.audioController.createAudio(assetPath);
	    this._currentTime = 0;
	    this.globalData.audioController.addAudio(this);
	    this._volumeMultiplier = 1;
	    this._volume = 1;
	    this._previousVolume = null;
	    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {
	      _placeholder: true
	    };
	    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : {
	      k: [100]
	    }, 1, 0.01, this);
	  }

	  AudioElement.prototype.prepareFrame = function (num) {
	    this.prepareRenderableFrame(num, true);
	    this.prepareProperties(num, true);

	    if (!this.tm._placeholder) {
	      var timeRemapped = this.tm.v;
	      this._currentTime = timeRemapped;
	    } else {
	      this._currentTime = num / this.data.sr;
	    }

	    this._volume = this.lv.v[0];
	    var totalVolume = this._volume * this._volumeMultiplier;

	    if (this._previousVolume !== totalVolume) {
	      this._previousVolume = totalVolume;
	      this.audio.volume(totalVolume);
	    }
	  };

	  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);

	  AudioElement.prototype.renderFrame = function () {
	    if (this.isInRange && this._canPlay) {
	      if (!this._isPlaying) {
	        this.audio.play();
	        this.audio.seek(this._currentTime / this.globalData.frameRate);
	        this._isPlaying = true;
	      } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {
	        this.audio.seek(this._currentTime / this.globalData.frameRate);
	      }
	    }
	  };

	  AudioElement.prototype.show = function () {// this.audio.play()
	  };

	  AudioElement.prototype.hide = function () {
	    this.audio.pause();
	    this._isPlaying = false;
	  };

	  AudioElement.prototype.pause = function () {
	    this.audio.pause();
	    this._isPlaying = false;
	    this._canPlay = false;
	  };

	  AudioElement.prototype.resume = function () {
	    this._canPlay = true;
	  };

	  AudioElement.prototype.setRate = function (rateValue) {
	    this.audio.rate(rateValue);
	  };

	  AudioElement.prototype.volume = function (volumeValue) {
	    this._volumeMultiplier = volumeValue;
	    this._previousVolume = volumeValue * this._volume;
	    this.audio.volume(this._previousVolume);
	  };

	  AudioElement.prototype.getBaseElement = function () {
	    return null;
	  };

	  AudioElement.prototype.destroy = function () {};

	  AudioElement.prototype.sourceRectAtTime = function () {};

	  AudioElement.prototype.initExpressions = function () {};

	  function BaseRenderer() {}

	  BaseRenderer.prototype.checkLayers = function (num) {
	    var i;
	    var len = this.layers.length;
	    var data;
	    this.completeLayers = true;

	    for (i = len - 1; i >= 0; i -= 1) {
	      if (!this.elements[i]) {
	        data = this.layers[i];

	        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {
	          this.buildItem(i);
	        }
	      }

	      this.completeLayers = this.elements[i] ? this.completeLayers : false;
	    }

	    this.checkPendingElements();
	  };

	  BaseRenderer.prototype.createItem = function (layer) {
	    switch (layer.ty) {
	      case 2:
	        return this.createImage(layer);

	      case 0:
	        return this.createComp(layer);

	      case 1:
	        return this.createSolid(layer);

	      case 3:
	        return this.createNull(layer);

	      case 4:
	        return this.createShape(layer);

	      case 5:
	        return this.createText(layer);

	      case 6:
	        return this.createAudio(layer);

	      case 13:
	        return this.createCamera(layer);

	      case 15:
	        return this.createFootage(layer);

	      default:
	        return this.createNull(layer);
	    }
	  };

	  BaseRenderer.prototype.createCamera = function () {
	    throw new Error('You\'re using a 3d camera. Try the html renderer.');
	  };

	  BaseRenderer.prototype.createAudio = function (data) {
	    return new AudioElement(data, this.globalData, this);
	  };

	  BaseRenderer.prototype.createFootage = function (data) {
	    return new FootageElement(data, this.globalData, this);
	  };

	  BaseRenderer.prototype.buildAllItems = function () {
	    var i;
	    var len = this.layers.length;

	    for (i = 0; i < len; i += 1) {
	      this.buildItem(i);
	    }

	    this.checkPendingElements();
	  };

	  BaseRenderer.prototype.includeLayers = function (newLayers) {
	    this.completeLayers = false;
	    var i;
	    var len = newLayers.length;
	    var j;
	    var jLen = this.layers.length;

	    for (i = 0; i < len; i += 1) {
	      j = 0;

	      while (j < jLen) {
	        if (this.layers[j].id === newLayers[i].id) {
	          this.layers[j] = newLayers[i];
	          break;
	        }

	        j += 1;
	      }
	    }
	  };

	  BaseRenderer.prototype.setProjectInterface = function (pInterface) {
	    this.globalData.projectInterface = pInterface;
	  };

	  BaseRenderer.prototype.initItems = function () {
	    if (!this.globalData.progressiveLoad) {
	      this.buildAllItems();
	    }
	  };

	  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {
	    var elements = this.elements;
	    var layers = this.layers;
	    var i = 0;
	    var len = layers.length;

	    while (i < len) {
	      if (layers[i].ind == parentName) {
	        // eslint-disable-line eqeqeq
	        if (!elements[i] || elements[i] === true) {
	          this.buildItem(i);
	          this.addPendingElement(element);
	        } else {
	          hierarchy.push(elements[i]);
	          elements[i].setAsParent();

	          if (layers[i].parent !== undefined) {
	            this.buildElementParenting(element, layers[i].parent, hierarchy);
	          } else {
	            element.setHierarchy(hierarchy);
	          }
	        }
	      }

	      i += 1;
	    }
	  };

	  BaseRenderer.prototype.addPendingElement = function (element) {
	    this.pendingElements.push(element);
	  };

	  BaseRenderer.prototype.searchExtraCompositions = function (assets) {
	    var i;
	    var len = assets.length;

	    for (i = 0; i < len; i += 1) {
	      if (assets[i].xt) {
	        var comp = this.createComp(assets[i]);
	        comp.initExpressions();
	        this.globalData.projectInterface.registerComposition(comp);
	      }
	    }
	  };

	  BaseRenderer.prototype.getElementById = function (ind) {
	    var i;
	    var len = this.elements.length;

	    for (i = 0; i < len; i += 1) {
	      if (this.elements[i].data.ind === ind) {
	        return this.elements[i];
	      }
	    }

	    return null;
	  };

	  BaseRenderer.prototype.getElementByPath = function (path) {
	    var pathValue = path.shift();
	    var element;

	    if (typeof pathValue === 'number') {
	      element = this.elements[pathValue];
	    } else {
	      var i;
	      var len = this.elements.length;

	      for (i = 0; i < len; i += 1) {
	        if (this.elements[i].data.nm === pathValue) {
	          element = this.elements[i];
	          break;
	        }
	      }
	    }

	    if (path.length === 0) {
	      return element;
	    }

	    return element.getElementByPath(path);
	  };

	  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {
	    this.globalData.fontManager = new FontManager();
	    this.globalData.slotManager = slotFactory(animData);
	    this.globalData.fontManager.addChars(animData.chars);
	    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);
	    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);
	    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);
	    this.globalData.imageLoader = this.animationItem.imagePreloader;
	    this.globalData.audioController = this.animationItem.audioController;
	    this.globalData.frameId = 0;
	    this.globalData.frameRate = animData.fr;
	    this.globalData.nm = animData.nm;
	    this.globalData.compSize = {
	      w: animData.w,
	      h: animData.h
	    };
	  };

	  var effectTypes = {
	    TRANSFORM_EFFECT: 'transformEFfect'
	  };

	  function TransformElement() {}

	  TransformElement.prototype = {
	    initTransform: function initTransform() {
	      var mat = new Matrix();
	      this.finalTransform = {
	        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {
	          o: 0
	        },
	        _matMdf: false,
	        _localMatMdf: false,
	        _opMdf: false,
	        mat: mat,
	        localMat: mat,
	        localOpacity: 1
	      };

	      if (this.data.ao) {
	        this.finalTransform.mProp.autoOriented = true;
	      } // TODO: check TYPE 11: Guided elements


	      if (this.data.ty !== 11) ;
	    },
	    renderTransform: function renderTransform() {
	      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;
	      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;

	      if (this.hierarchy) {
	        var mat;
	        var finalMat = this.finalTransform.mat;
	        var i = 0;
	        var len = this.hierarchy.length; // Checking if any of the transformation matrices in the hierarchy chain has changed.

	        if (!this.finalTransform._matMdf) {
	          while (i < len) {
	            if (this.hierarchy[i].finalTransform.mProp._mdf) {
	              this.finalTransform._matMdf = true;
	              break;
	            }

	            i += 1;
	          }
	        }

	        if (this.finalTransform._matMdf) {
	          mat = this.finalTransform.mProp.v.props;
	          finalMat.cloneFromProps(mat);

	          for (i = 0; i < len; i += 1) {
	            finalMat.multiply(this.hierarchy[i].finalTransform.mProp.v);
	          }
	        }
	      }

	      if (this.finalTransform._matMdf) {
	        this.finalTransform._localMatMdf = this.finalTransform._matMdf;
	      }

	      if (this.finalTransform._opMdf) {
	        this.finalTransform.localOpacity = this.finalTransform.mProp.o.v;
	      }
	    },
	    renderLocalTransform: function renderLocalTransform() {
	      if (this.localTransforms) {
	        var i = 0;
	        var len = this.localTransforms.length;
	        this.finalTransform._localMatMdf = this.finalTransform._matMdf;

	        if (!this.finalTransform._localMatMdf || !this.finalTransform._opMdf) {
	          while (i < len) {
	            if (this.localTransforms[i]._mdf) {
	              this.finalTransform._localMatMdf = true;
	            }

	            if (this.localTransforms[i]._opMdf && !this.finalTransform._opMdf) {
	              this.finalTransform.localOpacity = this.finalTransform.mProp.o.v;
	              this.finalTransform._opMdf = true;
	            }

	            i += 1;
	          }
	        }

	        if (this.finalTransform._localMatMdf) {
	          var localMat = this.finalTransform.localMat;
	          this.localTransforms[0].matrix.clone(localMat);

	          for (i = 1; i < len; i += 1) {
	            var lmat = this.localTransforms[i].matrix;
	            localMat.multiply(lmat);
	          }

	          localMat.multiply(this.finalTransform.mat);
	        }

	        if (this.finalTransform._opMdf) {
	          var localOp = this.finalTransform.localOpacity;

	          for (i = 0; i < len; i += 1) {
	            localOp *= this.localTransforms[i].opacity * 0.01;
	          }

	          this.finalTransform.localOpacity = localOp;
	        }
	      }
	    },
	    searchEffectTransforms: function searchEffectTransforms() {
	      if (this.renderableEffectsManager) {
	        var transformEffects = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);

	        if (transformEffects.length) {
	          this.localTransforms = [];
	          this.finalTransform.localMat = new Matrix();
	          var i = 0;
	          var len = transformEffects.length;

	          for (i = 0; i < len; i += 1) {
	            this.localTransforms.push(transformEffects[i]);
	          }
	        }
	      }
	    },
	    globalToLocal: function globalToLocal(pt) {
	      var transforms = [];
	      transforms.push(this.finalTransform);
	      var flag = true;
	      var comp = this.comp;

	      while (flag) {
	        if (comp.finalTransform) {
	          if (comp.data.hasMask) {
	            transforms.splice(0, 0, comp.finalTransform);
	          }

	          comp = comp.comp;
	        } else {
	          flag = false;
	        }
	      }

	      var i;
	      var len = transforms.length;
	      var ptNew;

	      for (i = 0; i < len; i += 1) {
	        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0); // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);

	        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];
	      }

	      return pt;
	    },
	    mHelper: new Matrix()
	  };

	  function MaskElement(data, element, globalData) {
	    this.data = data;
	    this.element = element;
	    this.globalData = globalData;
	    this.storedData = [];
	    this.masksProperties = this.data.masksProperties || [];
	    this.maskElement = null;
	    var defs = this.globalData.defs;
	    var i;
	    var len = this.masksProperties ? this.masksProperties.length : 0;
	    this.viewData = createSizedArray(len);
	    this.solidPath = '';
	    var path;
	    var properties = this.masksProperties;
	    var count = 0;
	    var currentMasks = [];
	    var j;
	    var jLen;
	    var layerId = createElementID();
	    var rect;
	    var expansor;
	    var feMorph;
	    var x;
	    var maskType = 'clipPath';
	    var maskRef = 'clip-path';

	    for (i = 0; i < len; i += 1) {
	      if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {
	        maskType = 'mask';
	        maskRef = 'mask';
	      }

	      if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {
	        rect = createNS('rect');
	        rect.setAttribute('fill', '#ffffff');
	        rect.setAttribute('width', this.element.comp.data.w || 0);
	        rect.setAttribute('height', this.element.comp.data.h || 0);
	        currentMasks.push(rect);
	      } else {
	        rect = null;
	      }

	      path = createNS('path');

	      if (properties[i].mode === 'n') {
	        // TODO move this to a factory or to a constructor
	        this.viewData[i] = {
	          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),
	          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),
	          elem: path,
	          lastPath: ''
	        };
	        defs.appendChild(path);
	      } else {
	        count += 1;
	        path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');
	        path.setAttribute('clip-rule', 'nonzero');
	        var filterID;

	        if (properties[i].x.k !== 0) {
	          maskType = 'mask';
	          maskRef = 'mask';
	          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);
	          filterID = createElementID();
	          expansor = createNS('filter');
	          expansor.setAttribute('id', filterID);
	          feMorph = createNS('feMorphology');
	          feMorph.setAttribute('operator', 'erode');
	          feMorph.setAttribute('in', 'SourceGraphic');
	          feMorph.setAttribute('radius', '0');
	          expansor.appendChild(feMorph);
	          defs.appendChild(expansor);
	          path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');
	        } else {
	          feMorph = null;
	          x = null;
	        } // TODO move this to a factory or to a constructor


	        this.storedData[i] = {
	          elem: path,
	          x: x,
	          expan: feMorph,
	          lastPath: '',
	          lastOperator: '',
	          filterId: filterID,
	          lastRadius: 0
	        };

	        if (properties[i].mode === 'i') {
	          jLen = currentMasks.length;
	          var g = createNS('g');

	          for (j = 0; j < jLen; j += 1) {
	            g.appendChild(currentMasks[j]);
	          }

	          var mask = createNS('mask');
	          mask.setAttribute('mask-type', 'alpha');
	          mask.setAttribute('id', layerId + '_' + count);
	          mask.appendChild(path);
	          defs.appendChild(mask);
	          g.setAttribute('mask', 'url(' + getLocationHref() + '#' + layerId + '_' + count + ')');
	          currentMasks.length = 0;
	          currentMasks.push(g);
	        } else {
	          currentMasks.push(path);
	        }

	        if (properties[i].inv && !this.solidPath) {
	          this.solidPath = this.createLayerSolidPath();
	        } // TODO move this to a factory or to a constructor


	        this.viewData[i] = {
	          elem: path,
	          lastPath: '',
	          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),
	          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),
	          invRect: rect
	        };

	        if (!this.viewData[i].prop.k) {
	          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);
	        }
	      }
	    }

	    this.maskElement = createNS(maskType);
	    len = currentMasks.length;

	    for (i = 0; i < len; i += 1) {
	      this.maskElement.appendChild(currentMasks[i]);
	    }

	    if (count > 0) {
	      this.maskElement.setAttribute('id', layerId);
	      this.element.maskedElement.setAttribute(maskRef, 'url(' + getLocationHref() + '#' + layerId + ')');
	      defs.appendChild(this.maskElement);
	    }

	    if (this.viewData.length) {
	      this.element.addRenderableComponent(this);
	    }
	  }

	  MaskElement.prototype.getMaskProperty = function (pos) {
	    return this.viewData[pos].prop;
	  };

	  MaskElement.prototype.renderFrame = function (isFirstFrame) {
	    var finalMat = this.element.finalTransform.mat;
	    var i;
	    var len = this.masksProperties.length;

	    for (i = 0; i < len; i += 1) {
	      if (this.viewData[i].prop._mdf || isFirstFrame) {
	        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);
	      }

	      if (this.viewData[i].op._mdf || isFirstFrame) {
	        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);
	      }

	      if (this.masksProperties[i].mode !== 'n') {
	        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {
	          this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS());
	        }

	        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {
	          var feMorph = this.storedData[i].expan;

	          if (this.storedData[i].x.v < 0) {
	            if (this.storedData[i].lastOperator !== 'erode') {
	              this.storedData[i].lastOperator = 'erode';
	              this.storedData[i].elem.setAttribute('filter', 'url(' + getLocationHref() + '#' + this.storedData[i].filterId + ')');
	            }

	            feMorph.setAttribute('radius', -this.storedData[i].x.v);
	          } else {
	            if (this.storedData[i].lastOperator !== 'dilate') {
	              this.storedData[i].lastOperator = 'dilate';
	              this.storedData[i].elem.setAttribute('filter', null);
	            }

	            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);
	          }
	        }
	      }
	    }
	  };

	  MaskElement.prototype.getMaskelement = function () {
	    return this.maskElement;
	  };

	  MaskElement.prototype.createLayerSolidPath = function () {
	    var path = 'M0,0 ';
	    path += ' h' + this.globalData.compSize.w;
	    path += ' v' + this.globalData.compSize.h;
	    path += ' h-' + this.globalData.compSize.w;
	    path += ' v-' + this.globalData.compSize.h + ' ';
	    return path;
	  };

	  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {
	    var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];
	    var i;
	    var len;
	    len = pathNodes._length;

	    for (i = 1; i < len; i += 1) {
	      // pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
	      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + ' ' + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];
	    } // pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];


	    if (pathNodes.c && len > 1) {
	      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + ' ' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];
	    } // pathNodes.__renderedString = pathString;


	    if (viewData.lastPath !== pathString) {
	      var pathShapeValue = '';

	      if (viewData.elem) {
	        if (pathNodes.c) {
	          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;
	        }

	        viewData.elem.setAttribute('d', pathShapeValue);
	      }

	      viewData.lastPath = pathString;
	    }
	  };

	  MaskElement.prototype.destroy = function () {
	    this.element = null;
	    this.globalData = null;
	    this.maskElement = null;
	    this.data = null;
	    this.masksProperties = null;
	  };

	  var filtersFactory = function () {
	    var ob = {};
	    ob.createFilter = createFilter;
	    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;

	    function createFilter(filId, skipCoordinates) {
	      var fil = createNS('filter');
	      fil.setAttribute('id', filId);

	      if (skipCoordinates !== true) {
	        fil.setAttribute('filterUnits', 'objectBoundingBox');
	        fil.setAttribute('x', '0%');
	        fil.setAttribute('y', '0%');
	        fil.setAttribute('width', '100%');
	        fil.setAttribute('height', '100%');
	      }

	      return fil;
	    }

	    function createAlphaToLuminanceFilter() {
	      var feColorMatrix = createNS('feColorMatrix');
	      feColorMatrix.setAttribute('type', 'matrix');
	      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
	      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');
	      return feColorMatrix;
	    }

	    return ob;
	  }();

	  var featureSupport = function () {
	    var ob = {
	      maskType: true,
	      svgLumaHidden: true,
	      offscreenCanvas: typeof OffscreenCanvas !== 'undefined'
	    };

	    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) {
	      ob.maskType = false;
	    }

	    if (/firefox/i.test(navigator.userAgent)) {
	      ob.svgLumaHidden = false;
	    }

	    return ob;
	  }();

	  var registeredEffects$1 = {};
	  var idPrefix = 'filter_result_';

	  function SVGEffects(elem) {
	    var i;
	    var source = 'SourceGraphic';
	    var len = elem.data.ef ? elem.data.ef.length : 0;
	    var filId = createElementID();
	    var fil = filtersFactory.createFilter(filId, true);
	    var count = 0;
	    this.filters = [];
	    var filterManager;

	    for (i = 0; i < len; i += 1) {
	      filterManager = null;
	      var type = elem.data.ef[i].ty;

	      if (registeredEffects$1[type]) {
	        var Effect = registeredEffects$1[type].effect;
	        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source);
	        source = idPrefix + count;

	        if (registeredEffects$1[type].countsAsEffect) {
	          count += 1;
	        }
	      }

	      if (filterManager) {
	        this.filters.push(filterManager);
	      }
	    }

	    if (count) {
	      elem.globalData.defs.appendChild(fil);
	      elem.layerElement.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');
	    }

	    if (this.filters.length) {
	      elem.addRenderableComponent(this);
	    }
	  }

	  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {
	    var i;
	    var len = this.filters.length;

	    for (i = 0; i < len; i += 1) {
	      this.filters[i].renderFrame(_isFirstFrame);
	    }
	  };

	  SVGEffects.prototype.getEffects = function (type) {
	    var i;
	    var len = this.filters.length;
	    var effects = [];

	    for (i = 0; i < len; i += 1) {
	      if (this.filters[i].type === type) {
	        effects.push(this.filters[i]);
	      }
	    }

	    return effects;
	  };

	  function registerEffect$1(id, effect, countsAsEffect) {
	    registeredEffects$1[id] = {
	      effect: effect,
	      countsAsEffect: countsAsEffect
	    };
	  }

	  function SVGBaseElement() {}

	  SVGBaseElement.prototype = {
	    initRendererElement: function initRendererElement() {
	      this.layerElement = createNS('g');
	    },
	    createContainerElements: function createContainerElements() {
	      this.matteElement = createNS('g');
	      this.transformedElement = this.layerElement;
	      this.maskedElement = this.layerElement;
	      this._sizeChanged = false;
	      var layerElementParent = null; // If this layer acts as a mask for the following layer

	      if (this.data.td) {
	        this.matteMasks = {};
	        var gg = createNS('g');
	        gg.setAttribute('id', this.layerId);
	        gg.appendChild(this.layerElement);
	        layerElementParent = gg;
	        this.globalData.defs.appendChild(gg);
	      } else if (this.data.tt) {
	        this.matteElement.appendChild(this.layerElement);
	        layerElementParent = this.matteElement;
	        this.baseElement = this.matteElement;
	      } else {
	        this.baseElement = this.layerElement;
	      }

	      if (this.data.ln) {
	        this.layerElement.setAttribute('id', this.data.ln);
	      }

	      if (this.data.cl) {
	        this.layerElement.setAttribute('class', this.data.cl);
	      } // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped


	      if (this.data.ty === 0 && !this.data.hd) {
	        var cp = createNS('clipPath');
	        var pt = createNS('path');
	        pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');
	        var clipId = createElementID();
	        cp.setAttribute('id', clipId);
	        cp.appendChild(pt);
	        this.globalData.defs.appendChild(cp);

	        if (this.checkMasks()) {
	          var cpGroup = createNS('g');
	          cpGroup.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');
	          cpGroup.appendChild(this.layerElement);
	          this.transformedElement = cpGroup;

	          if (layerElementParent) {
	            layerElementParent.appendChild(this.transformedElement);
	          } else {
	            this.baseElement = this.transformedElement;
	          }
	        } else {
	          this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');
	        }
	      }

	      if (this.data.bm !== 0) {
	        this.setBlendMode();
	      }
	    },
	    renderElement: function renderElement() {
	      if (this.finalTransform._localMatMdf) {
	        this.transformedElement.setAttribute('transform', this.finalTransform.localMat.to2dCSS());
	      }

	      if (this.finalTransform._opMdf) {
	        this.transformedElement.setAttribute('opacity', this.finalTransform.localOpacity);
	      }
	    },
	    destroyBaseElement: function destroyBaseElement() {
	      this.layerElement = null;
	      this.matteElement = null;
	      this.maskManager.destroy();
	    },
	    getBaseElement: function getBaseElement() {
	      if (this.data.hd) {
	        return null;
	      }

	      return this.baseElement;
	    },
	    createRenderableComponents: function createRenderableComponents() {
	      this.maskManager = new MaskElement(this.data, this, this.globalData);
	      this.renderableEffectsManager = new SVGEffects(this);
	      this.searchEffectTransforms();
	    },
	    getMatte: function getMatte(matteType) {
	      // This should not be a common case. But for backward compatibility, we'll create the matte object.
	      // It solves animations that have two consecutive layers marked as matte masks.
	      // Which is an undefined behavior in AE.
	      if (!this.matteMasks) {
	        this.matteMasks = {};
	      }

	      if (!this.matteMasks[matteType]) {
	        var id = this.layerId + '_' + matteType;
	        var filId;
	        var fil;
	        var useElement;
	        var gg;

	        if (matteType === 1 || matteType === 3) {
	          var masker = createNS('mask');
	          masker.setAttribute('id', id);
	          masker.setAttribute('mask-type', matteType === 3 ? 'luminance' : 'alpha');
	          useElement = createNS('use');
	          useElement.setAttributeNS('http://www.w3.org/1999/xlink', 'href', '#' + this.layerId);
	          masker.appendChild(useElement);
	          this.globalData.defs.appendChild(masker);

	          if (!featureSupport.maskType && matteType === 1) {
	            masker.setAttribute('mask-type', 'luminance');
	            filId = createElementID();
	            fil = filtersFactory.createFilter(filId);
	            this.globalData.defs.appendChild(fil);
	            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
	            gg = createNS('g');
	            gg.appendChild(useElement);
	            masker.appendChild(gg);
	            gg.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');
	          }
	        } else if (matteType === 2) {
	          var maskGroup = createNS('mask');
	          maskGroup.setAttribute('id', id);
	          maskGroup.setAttribute('mask-type', 'alpha');
	          var maskGrouper = createNS('g');
	          maskGroup.appendChild(maskGrouper);
	          filId = createElementID();
	          fil = filtersFactory.createFilter(filId); /// /

	          var feCTr = createNS('feComponentTransfer');
	          feCTr.setAttribute('in', 'SourceGraphic');
	          fil.appendChild(feCTr);
	          var feFunc = createNS('feFuncA');
	          feFunc.setAttribute('type', 'table');
	          feFunc.setAttribute('tableValues', '1.0 0.0');
	          feCTr.appendChild(feFunc); /// /

	          this.globalData.defs.appendChild(fil);
	          var alphaRect = createNS('rect');
	          alphaRect.setAttribute('width', this.comp.data.w);
	          alphaRect.setAttribute('height', this.comp.data.h);
	          alphaRect.setAttribute('x', '0');
	          alphaRect.setAttribute('y', '0');
	          alphaRect.setAttribute('fill', '#ffffff');
	          alphaRect.setAttribute('opacity', '0');
	          maskGrouper.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');
	          maskGrouper.appendChild(alphaRect);
	          useElement = createNS('use');
	          useElement.setAttributeNS('http://www.w3.org/1999/xlink', 'href', '#' + this.layerId);
	          maskGrouper.appendChild(useElement);

	          if (!featureSupport.maskType) {
	            maskGroup.setAttribute('mask-type', 'luminance');
	            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
	            gg = createNS('g');
	            maskGrouper.appendChild(alphaRect);
	            gg.appendChild(this.layerElement);
	            maskGrouper.appendChild(gg);
	          }

	          this.globalData.defs.appendChild(maskGroup);
	        }

	        this.matteMasks[matteType] = id;
	      }

	      return this.matteMasks[matteType];
	    },
	    setMatte: function setMatte(id) {
	      if (!this.matteElement) {
	        return;
	      }

	      this.matteElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');
	    }
	  };

	  /**
	   * @file
	   * Handles AE's layer parenting property.
	   *
	   */
	  function HierarchyElement() {}

	  HierarchyElement.prototype = {
	    /**
	       * @function
	       * Initializes hierarchy properties
	       *
	       */
	    initHierarchy: function initHierarchy() {
	      // element's parent list
	      this.hierarchy = []; // if element is parent of another layer _isParent will be true

	      this._isParent = false;
	      this.checkParenting();
	    },

	    /**
	       * @function
	       * Sets layer's hierarchy.
	       * @param {array} hierarch
	       * layer's parent list
	       *
	       */
	    setHierarchy: function setHierarchy(hierarchy) {
	      this.hierarchy = hierarchy;
	    },

	    /**
	       * @function
	       * Sets layer as parent.
	       *
	       */
	    setAsParent: function setAsParent() {
	      this._isParent = true;
	    },

	    /**
	       * @function
	       * Searches layer's parenting chain
	       *
	       */
	    checkParenting: function checkParenting() {
	      if (this.data.parent !== undefined) {
	        this.comp.buildElementParenting(this, this.data.parent, []);
	      }
	    }
	  };

	  function RenderableDOMElement() {}

	  (function () {
	    var _prototype = {
	      initElement: function initElement(data, globalData, comp) {
	        this.initFrame();
	        this.initBaseData(data, globalData, comp);
	        this.initTransform(data, globalData, comp);
	        this.initHierarchy();
	        this.initRenderable();
	        this.initRendererElement();
	        this.createContainerElements();
	        this.createRenderableComponents();
	        this.createContent();
	        this.hide();
	      },
	      hide: function hide() {
	        // console.log('HIDE', this);
	        if (!this.hidden && (!this.isInRange || this.isTransparent)) {
	          var elem = this.baseElement || this.layerElement;
	          elem.style.display = 'none';
	          this.hidden = true;
	        }
	      },
	      show: function show() {
	        // console.log('SHOW', this);
	        if (this.isInRange && !this.isTransparent) {
	          if (!this.data.hd) {
	            var elem = this.baseElement || this.layerElement;
	            elem.style.display = 'block';
	          }

	          this.hidden = false;
	          this._isFirstFrame = true;
	        }
	      },
	      renderFrame: function renderFrame() {
	        // If it is exported as hidden (data.hd === true) no need to render
	        // If it is not visible no need to render
	        if (this.data.hd || this.hidden) {
	          return;
	        }

	        this.renderTransform();
	        this.renderRenderable();
	        this.renderLocalTransform();
	        this.renderElement();
	        this.renderInnerContent();

	        if (this._isFirstFrame) {
	          this._isFirstFrame = false;
	        }
	      },
	      renderInnerContent: function renderInnerContent() {},
	      prepareFrame: function prepareFrame(num) {
	        this._mdf = false;
	        this.prepareRenderableFrame(num);
	        this.prepareProperties(num, this.isInRange);
	        this.checkTransparency();
	      },
	      destroy: function destroy() {
	        this.innerElem = null;
	        this.destroyBaseElement();
	      }
	    };
	    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);
	  })();

	  function IImageElement(data, globalData, comp) {
	    this.assetData = globalData.getAssetData(data.refId);

	    if (this.assetData && this.assetData.sid) {
	      this.assetData = globalData.slotManager.getProp(this.assetData);
	    }

	    this.initElement(data, globalData, comp);
	    this.sourceRect = {
	      top: 0,
	      left: 0,
	      width: this.assetData.w,
	      height: this.assetData.h
	    };
	  }

	  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);

	  IImageElement.prototype.createContent = function () {
	    var assetPath = this.globalData.getAssetsPath(this.assetData);
	    this.innerElem = createNS('image');
	    this.innerElem.setAttribute('width', this.assetData.w + 'px');
	    this.innerElem.setAttribute('height', this.assetData.h + 'px');
	    this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);
	    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);
	    this.layerElement.appendChild(this.innerElem);
	  };

	  IImageElement.prototype.sourceRectAtTime = function () {
	    return this.sourceRect;
	  };

	  function ProcessedElement(element, position) {
	    this.elem = element;
	    this.pos = position;
	  }

	  function IShapeElement() {}

	  IShapeElement.prototype = {
	    addShapeToModifiers: function addShapeToModifiers(data) {
	      var i;
	      var len = this.shapeModifiers.length;

	      for (i = 0; i < len; i += 1) {
	        this.shapeModifiers[i].addShape(data);
	      }
	    },
	    isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data) {
	      var i = 0;
	      var len = this.shapeModifiers.length;

	      while (i < len) {
	        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {
	          return true;
	        }
	      }

	      return false;
	    },
	    renderModifiers: function renderModifiers() {
	      if (!this.shapeModifiers.length) {
	        return;
	      }

	      var i;
	      var len = this.shapes.length;

	      for (i = 0; i < len; i += 1) {
	        this.shapes[i].sh.reset();
	      }

	      len = this.shapeModifiers.length;
	      var shouldBreakProcess;

	      for (i = len - 1; i >= 0; i -= 1) {
	        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame); // workaround to fix cases where a repeater resets the shape so the following processes get called twice
	        // TODO: find a better solution for this

	        if (shouldBreakProcess) {
	          break;
	        }
	      }
	    },
	    searchProcessedElement: function searchProcessedElement(elem) {
	      var elements = this.processedElements;
	      var i = 0;
	      var len = elements.length;

	      while (i < len) {
	        if (elements[i].elem === elem) {
	          return elements[i].pos;
	        }

	        i += 1;
	      }

	      return 0;
	    },
	    addProcessedElement: function addProcessedElement(elem, pos) {
	      var elements = this.processedElements;
	      var i = elements.length;

	      while (i) {
	        i -= 1;

	        if (elements[i].elem === elem) {
	          elements[i].pos = pos;
	          return;
	        }
	      }

	      elements.push(new ProcessedElement(elem, pos));
	    },
	    prepareFrame: function prepareFrame(num) {
	      this.prepareRenderableFrame(num);
	      this.prepareProperties(num, this.isInRange);
	    }
	  };

	  var lineCapEnum = {
	    1: 'butt',
	    2: 'round',
	    3: 'square'
	  };
	  var lineJoinEnum = {
	    1: 'miter',
	    2: 'round',
	    3: 'bevel'
	  };

	  function SVGShapeData(transformers, level, shape) {
	    this.caches = [];
	    this.styles = [];
	    this.transformers = transformers;
	    this.lStr = '';
	    this.sh = shape;
	    this.lvl = level; // TODO find if there are some cases where _isAnimated can be false.
	    // For now, since shapes add up with other shapes. They have to be calculated every time.
	    // One way of finding out is checking if all styles associated to this shape depend only of this shape

	    this._isAnimated = !!shape.k; // TODO: commenting this for now since all shapes are animated

	    var i = 0;
	    var len = transformers.length;

	    while (i < len) {
	      if (transformers[i].mProps.dynamicProperties.length) {
	        this._isAnimated = true;
	        break;
	      }

	      i += 1;
	    }
	  }

	  SVGShapeData.prototype.setAsAnimated = function () {
	    this._isAnimated = true;
	  };

	  function SVGStyleData(data, level) {
	    this.data = data;
	    this.type = data.ty;
	    this.d = '';
	    this.lvl = level;
	    this._mdf = false;
	    this.closed = data.hd === true;
	    this.pElem = createNS('path');
	    this.msElem = null;
	  }

	  SVGStyleData.prototype.reset = function () {
	    this.d = '';
	    this._mdf = false;
	  };

	  function DashProperty(elem, data, renderer, container) {
	    this.elem = elem;
	    this.frameId = -1;
	    this.dataProps = createSizedArray(data.length);
	    this.renderer = renderer;
	    this.k = false;
	    this.dashStr = '';
	    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);
	    this.dashoffset = createTypedArray('float32', 1);
	    this.initDynamicPropertyContainer(container);
	    var i;
	    var len = data.length || 0;
	    var prop;

	    for (i = 0; i < len; i += 1) {
	      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);
	      this.k = prop.k || this.k;
	      this.dataProps[i] = {
	        n: data[i].n,
	        p: prop
	      };
	    }

	    if (!this.k) {
	      this.getValue(true);
	    }

	    this._isAnimated = this.k;
	  }

	  DashProperty.prototype.getValue = function (forceRender) {
	    if (this.elem.globalData.frameId === this.frameId && !forceRender) {
	      return;
	    }

	    this.frameId = this.elem.globalData.frameId;
	    this.iterateDynamicProperties();
	    this._mdf = this._mdf || forceRender;

	    if (this._mdf) {
	      var i = 0;
	      var len = this.dataProps.length;

	      if (this.renderer === 'svg') {
	        this.dashStr = '';
	      }

	      for (i = 0; i < len; i += 1) {
	        if (this.dataProps[i].n !== 'o') {
	          if (this.renderer === 'svg') {
	            this.dashStr += ' ' + this.dataProps[i].p.v;
	          } else {
	            this.dashArray[i] = this.dataProps[i].p.v;
	          }
	        } else {
	          this.dashoffset[0] = this.dataProps[i].p.v;
	        }
	      }
	    }
	  };

	  extendPrototype([DynamicPropertyContainer], DashProperty);

	  function SVGStrokeStyleData(elem, data, styleOb) {
	    this.initDynamicPropertyContainer(elem);
	    this.getValue = this.iterateDynamicProperties;
	    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
	    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);
	    this.d = new DashProperty(elem, data.d || {}, 'svg', this);
	    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);
	    this.style = styleOb;
	    this._isAnimated = !!this._isAnimated;
	  }

	  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);

	  function SVGFillStyleData(elem, data, styleOb) {
	    this.initDynamicPropertyContainer(elem);
	    this.getValue = this.iterateDynamicProperties;
	    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
	    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);
	    this.style = styleOb;
	  }

	  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);

	  function SVGNoStyleData(elem, data, styleOb) {
	    this.initDynamicPropertyContainer(elem);
	    this.getValue = this.iterateDynamicProperties;
	    this.style = styleOb;
	  }

	  extendPrototype([DynamicPropertyContainer], SVGNoStyleData);

	  function GradientProperty(elem, data, container) {
	    this.data = data;
	    this.c = createTypedArray('uint8c', data.p * 4);
	    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;
	    this.o = createTypedArray('float32', cLength);
	    this._cmdf = false;
	    this._omdf = false;
	    this._collapsable = this.checkCollapsable();
	    this._hasOpacity = cLength;
	    this.initDynamicPropertyContainer(container);
	    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);
	    this.k = this.prop.k;
	    this.getValue(true);
	  }

	  GradientProperty.prototype.comparePoints = function (values, points) {
	    var i = 0;
	    var len = this.o.length / 2;
	    var diff;

	    while (i < len) {
	      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);

	      if (diff > 0.01) {
	        return false;
	      }

	      i += 1;
	    }

	    return true;
	  };

	  GradientProperty.prototype.checkCollapsable = function () {
	    if (this.o.length / 2 !== this.c.length / 4) {
	      return false;
	    }

	    if (this.data.k.k[0].s) {
	      var i = 0;
	      var len = this.data.k.k.length;

	      while (i < len) {
	        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {
	          return false;
	        }

	        i += 1;
	      }
	    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {
	      return false;
	    }

	    return true;
	  };

	  GradientProperty.prototype.getValue = function (forceRender) {
	    this.prop.getValue();
	    this._mdf = false;
	    this._cmdf = false;
	    this._omdf = false;

	    if (this.prop._mdf || forceRender) {
	      var i;
	      var len = this.data.p * 4;
	      var mult;
	      var val;

	      for (i = 0; i < len; i += 1) {
	        mult = i % 4 === 0 ? 100 : 255;
	        val = Math.round(this.prop.v[i] * mult);

	        if (this.c[i] !== val) {
	          this.c[i] = val;
	          this._cmdf = !forceRender;
	        }
	      }

	      if (this.o.length) {
	        len = this.prop.v.length;

	        for (i = this.data.p * 4; i < len; i += 1) {
	          mult = i % 2 === 0 ? 100 : 1;
	          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];

	          if (this.o[i - this.data.p * 4] !== val) {
	            this.o[i - this.data.p * 4] = val;
	            this._omdf = !forceRender;
	          }
	        }
	      }

	      this._mdf = !forceRender;
	    }
	  };

	  extendPrototype([DynamicPropertyContainer], GradientProperty);

	  function SVGGradientFillStyleData(elem, data, styleOb) {
	    this.initDynamicPropertyContainer(elem);
	    this.getValue = this.iterateDynamicProperties;
	    this.initGradientData(elem, data, styleOb);
	  }

	  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {
	    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
	    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);
	    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);
	    this.h = PropertyFactory.getProp(elem, data.h || {
	      k: 0
	    }, 0, 0.01, this);
	    this.a = PropertyFactory.getProp(elem, data.a || {
	      k: 0
	    }, 0, degToRads, this);
	    this.g = new GradientProperty(elem, data.g, this);
	    this.style = styleOb;
	    this.stops = [];
	    this.setGradientData(styleOb.pElem, data);
	    this.setGradientOpacity(data, styleOb);
	    this._isAnimated = !!this._isAnimated;
	  };

	  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {
	    var gradientId = createElementID();
	    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');
	    gfill.setAttribute('id', gradientId);
	    gfill.setAttribute('spreadMethod', 'pad');
	    gfill.setAttribute('gradientUnits', 'userSpaceOnUse');
	    var stops = [];
	    var stop;
	    var j;
	    var jLen;
	    jLen = data.g.p * 4;

	    for (j = 0; j < jLen; j += 4) {
	      stop = createNS('stop');
	      gfill.appendChild(stop);
	      stops.push(stop);
	    }

	    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + gradientId + ')');
	    this.gf = gfill;
	    this.cst = stops;
	  };

	  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {
	    if (this.g._hasOpacity && !this.g._collapsable) {
	      var stop;
	      var j;
	      var jLen;
	      var mask = createNS('mask');
	      var maskElement = createNS('path');
	      mask.appendChild(maskElement);
	      var opacityId = createElementID();
	      var maskId = createElementID();
	      mask.setAttribute('id', maskId);
	      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');
	      opFill.setAttribute('id', opacityId);
	      opFill.setAttribute('spreadMethod', 'pad');
	      opFill.setAttribute('gradientUnits', 'userSpaceOnUse');
	      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;
	      var stops = this.stops;

	      for (j = data.g.p * 4; j < jLen; j += 2) {
	        stop = createNS('stop');
	        stop.setAttribute('stop-color', 'rgb(255,255,255)');
	        opFill.appendChild(stop);
	        stops.push(stop);
	      }

	      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + opacityId + ')');

	      if (data.ty === 'gs') {
	        maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);
	        maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);

	        if (data.lj === 1) {
	          maskElement.setAttribute('stroke-miterlimit', data.ml);
	        }
	      }

	      this.of = opFill;
	      this.ms = mask;
	      this.ost = stops;
	      this.maskId = maskId;
	      styleOb.msElem = maskElement;
	    }
	  };

	  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);

	  function SVGGradientStrokeStyleData(elem, data, styleOb) {
	    this.initDynamicPropertyContainer(elem);
	    this.getValue = this.iterateDynamicProperties;
	    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);
	    this.d = new DashProperty(elem, data.d || {}, 'svg', this);
	    this.initGradientData(elem, data, styleOb);
	    this._isAnimated = !!this._isAnimated;
	  }

	  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);

	  function ShapeGroupData() {
	    this.it = [];
	    this.prevViewData = [];
	    this.gr = createNS('g');
	  }

	  function SVGTransformData(mProps, op, container) {
	    this.transform = {
	      mProps: mProps,
	      op: op,
	      container: container
	    };
	    this.elements = [];
	    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
	  }

	  var buildShapeString = function buildShapeString(pathNodes, length, closed, mat) {
	    if (length === 0) {
	      return '';
	    }

	    var _o = pathNodes.o;
	    var _i = pathNodes.i;
	    var _v = pathNodes.v;
	    var i;
	    var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1]);

	    for (i = 1; i < length; i += 1) {
	      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[i][0], _i[i][1]) + ' ' + mat.applyToPointStringified(_v[i][0], _v[i][1]);
	    }

	    if (closed && length) {
	      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[0][0], _i[0][1]) + ' ' + mat.applyToPointStringified(_v[0][0], _v[0][1]);
	      shapeString += 'z';
	    }

	    return shapeString;
	  };

	  var SVGElementsRenderer = function () {
	    var _identityMatrix = new Matrix();

	    var _matrixHelper = new Matrix();

	    var ob = {
	      createRenderFunction: createRenderFunction
	    };

	    function createRenderFunction(data) {
	      switch (data.ty) {
	        case 'fl':
	          return renderFill;

	        case 'gf':
	          return renderGradient;

	        case 'gs':
	          return renderGradientStroke;

	        case 'st':
	          return renderStroke;

	        case 'sh':
	        case 'el':
	        case 'rc':
	        case 'sr':
	          return renderPath;

	        case 'tr':
	          return renderContentTransform;

	        case 'no':
	          return renderNoop;

	        default:
	          return null;
	      }
	    }

	    function renderContentTransform(styleData, itemData, isFirstFrame) {
	      if (isFirstFrame || itemData.transform.op._mdf) {
	        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);
	      }

	      if (isFirstFrame || itemData.transform.mProps._mdf) {
	        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());
	      }
	    }

	    function renderNoop() {}

	    function renderPath(styleData, itemData, isFirstFrame) {
	      var j;
	      var jLen;
	      var pathStringTransformed;
	      var redraw;
	      var pathNodes;
	      var l;
	      var lLen = itemData.styles.length;
	      var lvl = itemData.lvl;
	      var paths;
	      var mat;
	      var iterations;
	      var k;

	      for (l = 0; l < lLen; l += 1) {
	        redraw = itemData.sh._mdf || isFirstFrame;

	        if (itemData.styles[l].lvl < lvl) {
	          mat = _matrixHelper.reset();
	          iterations = lvl - itemData.styles[l].lvl;
	          k = itemData.transformers.length - 1;

	          while (!redraw && iterations > 0) {
	            redraw = itemData.transformers[k].mProps._mdf || redraw;
	            iterations -= 1;
	            k -= 1;
	          }

	          if (redraw) {
	            iterations = lvl - itemData.styles[l].lvl;
	            k = itemData.transformers.length - 1;

	            while (iterations > 0) {
	              mat.multiply(itemData.transformers[k].mProps.v);
	              iterations -= 1;
	              k -= 1;
	            }
	          }
	        } else {
	          mat = _identityMatrix;
	        }

	        paths = itemData.sh.paths;
	        jLen = paths._length;

	        if (redraw) {
	          pathStringTransformed = '';

	          for (j = 0; j < jLen; j += 1) {
	            pathNodes = paths.shapes[j];

	            if (pathNodes && pathNodes._length) {
	              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);
	            }
	          }

	          itemData.caches[l] = pathStringTransformed;
	        } else {
	          pathStringTransformed = itemData.caches[l];
	        }

	        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;
	        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;
	      }
	    }

	    function renderFill(styleData, itemData, isFirstFrame) {
	      var styleElem = itemData.style;

	      if (itemData.c._mdf || isFirstFrame) {
	        styleElem.pElem.setAttribute('fill', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');
	      }

	      if (itemData.o._mdf || isFirstFrame) {
	        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);
	      }
	    }

	    function renderGradientStroke(styleData, itemData, isFirstFrame) {
	      renderGradient(styleData, itemData, isFirstFrame);
	      renderStroke(styleData, itemData, isFirstFrame);
	    }

	    function renderGradient(styleData, itemData, isFirstFrame) {
	      var gfill = itemData.gf;
	      var hasOpacity = itemData.g._hasOpacity;
	      var pt1 = itemData.s.v;
	      var pt2 = itemData.e.v;

	      if (itemData.o._mdf || isFirstFrame) {
	        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';
	        itemData.style.pElem.setAttribute(attr, itemData.o.v);
	      }

	      if (itemData.s._mdf || isFirstFrame) {
	        var attr1 = styleData.t === 1 ? 'x1' : 'cx';
	        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';
	        gfill.setAttribute(attr1, pt1[0]);
	        gfill.setAttribute(attr2, pt1[1]);

	        if (hasOpacity && !itemData.g._collapsable) {
	          itemData.of.setAttribute(attr1, pt1[0]);
	          itemData.of.setAttribute(attr2, pt1[1]);
	        }
	      }

	      var stops;
	      var i;
	      var len;
	      var stop;

	      if (itemData.g._cmdf || isFirstFrame) {
	        stops = itemData.cst;
	        var cValues = itemData.g.c;
	        len = stops.length;

	        for (i = 0; i < len; i += 1) {
	          stop = stops[i];
	          stop.setAttribute('offset', cValues[i * 4] + '%');
	          stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');
	        }
	      }

	      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {
	        var oValues = itemData.g.o;

	        if (itemData.g._collapsable) {
	          stops = itemData.cst;
	        } else {
	          stops = itemData.ost;
	        }

	        len = stops.length;

	        for (i = 0; i < len; i += 1) {
	          stop = stops[i];

	          if (!itemData.g._collapsable) {
	            stop.setAttribute('offset', oValues[i * 2] + '%');
	          }

	          stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);
	        }
	      }

	      if (styleData.t === 1) {
	        if (itemData.e._mdf || isFirstFrame) {
	          gfill.setAttribute('x2', pt2[0]);
	          gfill.setAttribute('y2', pt2[1]);

	          if (hasOpacity && !itemData.g._collapsable) {
	            itemData.of.setAttribute('x2', pt2[0]);
	            itemData.of.setAttribute('y2', pt2[1]);
	          }
	        }
	      } else {
	        var rad;

	        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {
	          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
	          gfill.setAttribute('r', rad);

	          if (hasOpacity && !itemData.g._collapsable) {
	            itemData.of.setAttribute('r', rad);
	          }
	        }

	        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {
	          if (!rad) {
	            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
	          }

	          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);
	          var percent = itemData.h.v;

	          if (percent >= 1) {
	            percent = 0.99;
	          } else if (percent <= -1) {
	            percent = -0.99;
	          }

	          var dist = rad * percent;
	          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
	          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
	          gfill.setAttribute('fx', x);
	          gfill.setAttribute('fy', y);

	          if (hasOpacity && !itemData.g._collapsable) {
	            itemData.of.setAttribute('fx', x);
	            itemData.of.setAttribute('fy', y);
	          }
	        } // gfill.setAttribute('fy','200');

	      }
	    }

	    function renderStroke(styleData, itemData, isFirstFrame) {
	      var styleElem = itemData.style;
	      var d = itemData.d;

	      if (d && (d._mdf || isFirstFrame) && d.dashStr) {
	        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);
	        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);
	      }

	      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {
	        styleElem.pElem.setAttribute('stroke', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');
	      }

	      if (itemData.o._mdf || isFirstFrame) {
	        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);
	      }

	      if (itemData.w._mdf || isFirstFrame) {
	        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);

	        if (styleElem.msElem) {
	          styleElem.msElem.setAttribute('stroke-width', itemData.w.v);
	        }
	      }
	    }

	    return ob;
	  }();

	  function SVGShapeElement(data, globalData, comp) {
	    // List of drawable elements
	    this.shapes = []; // Full shape data

	    this.shapesData = data.shapes; // List of styles that will be applied to shapes

	    this.stylesList = []; // List of modifiers that will be applied to shapes

	    this.shapeModifiers = []; // List of items in shape tree

	    this.itemsData = []; // List of items in previous shape tree

	    this.processedElements = []; // List of animated components

	    this.animatedContents = [];
	    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
	    // List of elements that have been created

	    this.prevViewData = []; // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
	  }

	  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);

	  SVGShapeElement.prototype.initSecondaryElement = function () {};

	  SVGShapeElement.prototype.identityMatrix = new Matrix();

	  SVGShapeElement.prototype.buildExpressionInterface = function () {};

	  SVGShapeElement.prototype.createContent = function () {
	    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
	    this.filterUniqueShapes();
	  };
	  /*
	  This method searches for multiple shapes that affect a single element and one of them is animated
	  */


	  SVGShapeElement.prototype.filterUniqueShapes = function () {
	    var i;
	    var len = this.shapes.length;
	    var shape;
	    var j;
	    var jLen = this.stylesList.length;
	    var style;
	    var tempShapes = [];
	    var areAnimated = false;

	    for (j = 0; j < jLen; j += 1) {
	      style = this.stylesList[j];
	      areAnimated = false;
	      tempShapes.length = 0;

	      for (i = 0; i < len; i += 1) {
	        shape = this.shapes[i];

	        if (shape.styles.indexOf(style) !== -1) {
	          tempShapes.push(shape);
	          areAnimated = shape._isAnimated || areAnimated;
	        }
	      }

	      if (tempShapes.length > 1 && areAnimated) {
	        this.setShapesAsAnimated(tempShapes);
	      }
	    }
	  };

	  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {
	    var i;
	    var len = shapes.length;

	    for (i = 0; i < len; i += 1) {
	      shapes[i].setAsAnimated();
	    }
	  };

	  SVGShapeElement.prototype.createStyleElement = function (data, level) {
	    // TODO: prevent drawing of hidden styles
	    var elementData;
	    var styleOb = new SVGStyleData(data, level);
	    var pathElement = styleOb.pElem;

	    if (data.ty === 'st') {
	      elementData = new SVGStrokeStyleData(this, data, styleOb);
	    } else if (data.ty === 'fl') {
	      elementData = new SVGFillStyleData(this, data, styleOb);
	    } else if (data.ty === 'gf' || data.ty === 'gs') {
	      var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;
	      elementData = new GradientConstructor(this, data, styleOb);
	      this.globalData.defs.appendChild(elementData.gf);

	      if (elementData.maskId) {
	        this.globalData.defs.appendChild(elementData.ms);
	        this.globalData.defs.appendChild(elementData.of);
	        pathElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + elementData.maskId + ')');
	      }
	    } else if (data.ty === 'no') {
	      elementData = new SVGNoStyleData(this, data, styleOb);
	    }

	    if (data.ty === 'st' || data.ty === 'gs') {
	      pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);
	      pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);
	      pathElement.setAttribute('fill-opacity', '0');

	      if (data.lj === 1) {
	        pathElement.setAttribute('stroke-miterlimit', data.ml);
	      }
	    }

	    if (data.r === 2) {
	      pathElement.setAttribute('fill-rule', 'evenodd');
	    }

	    if (data.ln) {
	      pathElement.setAttribute('id', data.ln);
	    }

	    if (data.cl) {
	      pathElement.setAttribute('class', data.cl);
	    }

	    if (data.bm) {
	      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);
	    }

	    this.stylesList.push(styleOb);
	    this.addToAnimatedContents(data, elementData);
	    return elementData;
	  };

	  SVGShapeElement.prototype.createGroupElement = function (data) {
	    var elementData = new ShapeGroupData();

	    if (data.ln) {
	      elementData.gr.setAttribute('id', data.ln);
	    }

	    if (data.cl) {
	      elementData.gr.setAttribute('class', data.cl);
	    }

	    if (data.bm) {
	      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);
	    }

	    return elementData;
	  };

	  SVGShapeElement.prototype.createTransformElement = function (data, container) {
	    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);
	    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);
	    this.addToAnimatedContents(data, elementData);
	    return elementData;
	  };

	  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {
	    var ty = 4;

	    if (data.ty === 'rc') {
	      ty = 5;
	    } else if (data.ty === 'el') {
	      ty = 6;
	    } else if (data.ty === 'sr') {
	      ty = 7;
	    }

	    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);
	    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);
	    this.shapes.push(elementData);
	    this.addShapeToModifiers(elementData);
	    this.addToAnimatedContents(data, elementData);
	    return elementData;
	  };

	  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {
	    var i = 0;
	    var len = this.animatedContents.length;

	    while (i < len) {
	      if (this.animatedContents[i].element === element) {
	        return;
	      }

	      i += 1;
	    }

	    this.animatedContents.push({
	      fn: SVGElementsRenderer.createRenderFunction(data),
	      element: element,
	      data: data
	    });
	  };

	  SVGShapeElement.prototype.setElementStyles = function (elementData) {
	    var arr = elementData.styles;
	    var j;
	    var jLen = this.stylesList.length;

	    for (j = 0; j < jLen; j += 1) {
	      if (!this.stylesList[j].closed) {
	        arr.push(this.stylesList[j]);
	      }
	    }
	  };

	  SVGShapeElement.prototype.reloadShapes = function () {
	    this._isFirstFrame = true;
	    var i;
	    var len = this.itemsData.length;

	    for (i = 0; i < len; i += 1) {
	      this.prevViewData[i] = this.itemsData[i];
	    }

	    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
	    this.filterUniqueShapes();
	    len = this.dynamicProperties.length;

	    for (i = 0; i < len; i += 1) {
	      this.dynamicProperties[i].getValue();
	    }

	    this.renderModifiers();
	  };

	  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {
	    var ownTransformers = [].concat(transformers);
	    var i;
	    var len = arr.length - 1;
	    var j;
	    var jLen;
	    var ownStyles = [];
	    var ownModifiers = [];
	    var currentTransform;
	    var modifier;
	    var processedPos;

	    for (i = len; i >= 0; i -= 1) {
	      processedPos = this.searchProcessedElement(arr[i]);

	      if (!processedPos) {
	        arr[i]._render = render;
	      } else {
	        itemsData[i] = prevViewData[processedPos - 1];
	      }

	      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs' || arr[i].ty === 'no') {
	        if (!processedPos) {
	          itemsData[i] = this.createStyleElement(arr[i], level);
	        } else {
	          itemsData[i].style.closed = false;
	        }

	        if (arr[i]._render) {
	          if (itemsData[i].style.pElem.parentNode !== container) {
	            container.appendChild(itemsData[i].style.pElem);
	          }
	        }

	        ownStyles.push(itemsData[i].style);
	      } else if (arr[i].ty === 'gr') {
	        if (!processedPos) {
	          itemsData[i] = this.createGroupElement(arr[i]);
	        } else {
	          jLen = itemsData[i].it.length;

	          for (j = 0; j < jLen; j += 1) {
	            itemsData[i].prevViewData[j] = itemsData[i].it[j];
	          }
	        }

	        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);

	        if (arr[i]._render) {
	          if (itemsData[i].gr.parentNode !== container) {
	            container.appendChild(itemsData[i].gr);
	          }
	        }
	      } else if (arr[i].ty === 'tr') {
	        if (!processedPos) {
	          itemsData[i] = this.createTransformElement(arr[i], container);
	        }

	        currentTransform = itemsData[i].transform;
	        ownTransformers.push(currentTransform);
	      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {
	        if (!processedPos) {
	          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);
	        }

	        this.setElementStyles(itemsData[i]);
	      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb' || arr[i].ty === 'zz' || arr[i].ty === 'op') {
	        if (!processedPos) {
	          modifier = ShapeModifiers.getModifier(arr[i].ty);
	          modifier.init(this, arr[i]);
	          itemsData[i] = modifier;
	          this.shapeModifiers.push(modifier);
	        } else {
	          modifier = itemsData[i];
	          modifier.closed = false;
	        }

	        ownModifiers.push(modifier);
	      } else if (arr[i].ty === 'rp') {
	        if (!processedPos) {
	          modifier = ShapeModifiers.getModifier(arr[i].ty);
	          itemsData[i] = modifier;
	          modifier.init(this, arr, i, itemsData);
	          this.shapeModifiers.push(modifier);
	          render = false;
	        } else {
	          modifier = itemsData[i];
	          modifier.closed = true;
	        }

	        ownModifiers.push(modifier);
	      }

	      this.addProcessedElement(arr[i], i + 1);
	    }

	    len = ownStyles.length;

	    for (i = 0; i < len; i += 1) {
	      ownStyles[i].closed = true;
	    }

	    len = ownModifiers.length;

	    for (i = 0; i < len; i += 1) {
	      ownModifiers[i].closed = true;
	    }
	  };

	  SVGShapeElement.prototype.renderInnerContent = function () {
	    this.renderModifiers();
	    var i;
	    var len = this.stylesList.length;

	    for (i = 0; i < len; i += 1) {
	      this.stylesList[i].reset();
	    }

	    this.renderShape();

	    for (i = 0; i < len; i += 1) {
	      if (this.stylesList[i]._mdf || this._isFirstFrame) {
	        if (this.stylesList[i].msElem) {
	          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d); // Adding M0 0 fixes same mask bug on all browsers

	          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;
	        }

	        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');
	      }
	    }
	  };

	  SVGShapeElement.prototype.renderShape = function () {
	    var i;
	    var len = this.animatedContents.length;
	    var animatedContent;

	    for (i = 0; i < len; i += 1) {
	      animatedContent = this.animatedContents[i];

	      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {
	        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);
	      }
	    }
	  };

	  SVGShapeElement.prototype.destroy = function () {
	    this.destroyBaseElement();
	    this.shapesData = null;
	    this.itemsData = null;
	  };

	  function LetterProps(o, sw, sc, fc, m, p) {
	    this.o = o;
	    this.sw = sw;
	    this.sc = sc;
	    this.fc = fc;
	    this.m = m;
	    this.p = p;
	    this._mdf = {
	      o: true,
	      sw: !!sw,
	      sc: !!sc,
	      fc: !!fc,
	      m: true,
	      p: true
	    };
	  }

	  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {
	    this._mdf.o = false;
	    this._mdf.sw = false;
	    this._mdf.sc = false;
	    this._mdf.fc = false;
	    this._mdf.m = false;
	    this._mdf.p = false;
	    var updated = false;

	    if (this.o !== o) {
	      this.o = o;
	      this._mdf.o = true;
	      updated = true;
	    }

	    if (this.sw !== sw) {
	      this.sw = sw;
	      this._mdf.sw = true;
	      updated = true;
	    }

	    if (this.sc !== sc) {
	      this.sc = sc;
	      this._mdf.sc = true;
	      updated = true;
	    }

	    if (this.fc !== fc) {
	      this.fc = fc;
	      this._mdf.fc = true;
	      updated = true;
	    }

	    if (this.m !== m) {
	      this.m = m;
	      this._mdf.m = true;
	      updated = true;
	    }

	    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {
	      this.p = p;
	      this._mdf.p = true;
	      updated = true;
	    }

	    return updated;
	  };

	  function TextProperty(elem, data) {
	    this._frameId = initialDefaultFrame;
	    this.pv = '';
	    this.v = '';
	    this.kf = false;
	    this._isFirstFrame = true;
	    this._mdf = false;

	    if (data.d && data.d.sid) {
	      data.d = elem.globalData.slotManager.getProp(data.d);
	    }

	    this.data = data;
	    this.elem = elem;
	    this.comp = this.elem.comp;
	    this.keysIndex = 0;
	    this.canResize = false;
	    this.minimumFontSize = 1;
	    this.effectsSequence = [];
	    this.currentData = {
	      ascent: 0,
	      boxWidth: this.defaultBoxWidth,
	      f: '',
	      fStyle: '',
	      fWeight: '',
	      fc: '',
	      j: '',
	      justifyOffset: '',
	      l: [],
	      lh: 0,
	      lineWidths: [],
	      ls: '',
	      of: '',
	      s: '',
	      sc: '',
	      sw: 0,
	      t: 0,
	      tr: 0,
	      sz: 0,
	      ps: null,
	      fillColorAnim: false,
	      strokeColorAnim: false,
	      strokeWidthAnim: false,
	      yOffset: 0,
	      finalSize: 0,
	      finalText: [],
	      finalLineHeight: 0,
	      __complete: false
	    };
	    this.copyData(this.currentData, this.data.d.k[0].s);

	    if (!this.searchProperty()) {
	      this.completeTextData(this.currentData);
	    }
	  }

	  TextProperty.prototype.defaultBoxWidth = [0, 0];

	  TextProperty.prototype.copyData = function (obj, data) {
	    for (var s in data) {
	      if (Object.prototype.hasOwnProperty.call(data, s)) {
	        obj[s] = data[s];
	      }
	    }

	    return obj;
	  };

	  TextProperty.prototype.setCurrentData = function (data) {
	    if (!data.__complete) {
	      this.completeTextData(data);
	    }

	    this.currentData = data;
	    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;
	    this._mdf = true;
	  };

	  TextProperty.prototype.searchProperty = function () {
	    return this.searchKeyframes();
	  };

	  TextProperty.prototype.searchKeyframes = function () {
	    this.kf = this.data.d.k.length > 1;

	    if (this.kf) {
	      this.addEffect(this.getKeyframeValue.bind(this));
	    }

	    return this.kf;
	  };

	  TextProperty.prototype.addEffect = function (effectFunction) {
	    this.effectsSequence.push(effectFunction);
	    this.elem.addDynamicProperty(this);
	  };

	  TextProperty.prototype.getValue = function (_finalValue) {
	    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {
	      return;
	    }

	    this.currentData.t = this.data.d.k[this.keysIndex].s.t;
	    var currentValue = this.currentData;
	    var currentIndex = this.keysIndex;

	    if (this.lock) {
	      this.setCurrentData(this.currentData);
	      return;
	    }

	    this.lock = true;
	    this._mdf = false;
	    var i;
	    var len = this.effectsSequence.length;
	    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;

	    for (i = 0; i < len; i += 1) {
	      // Checking if index changed to prevent creating a new object every time the expression updates.
	      if (currentIndex !== this.keysIndex) {
	        finalValue = this.effectsSequence[i](finalValue, finalValue.t);
	      } else {
	        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);
	      }
	    }

	    if (currentValue !== finalValue) {
	      this.setCurrentData(finalValue);
	    }

	    this.v = this.currentData;
	    this.pv = this.v;
	    this.lock = false;
	    this.frameId = this.elem.globalData.frameId;
	  };

	  TextProperty.prototype.getKeyframeValue = function () {
	    var textKeys = this.data.d.k;
	    var frameNum = this.elem.comp.renderedFrame;
	    var i = 0;
	    var len = textKeys.length;

	    while (i <= len - 1) {
	      if (i === len - 1 || textKeys[i + 1].t > frameNum) {
	        break;
	      }

	      i += 1;
	    }

	    if (this.keysIndex !== i) {
	      this.keysIndex = i;
	    }

	    return this.data.d.k[this.keysIndex].s;
	  };

	  TextProperty.prototype.buildFinalText = function (text) {
	    var charactersArray = [];
	    var i = 0;
	    var len = text.length;
	    var charCode;
	    var secondCharCode;
	    var shouldCombine = false;
	    var shouldCombineNext = false;
	    var currentChars = '';

	    while (i < len) {
	      shouldCombine = shouldCombineNext;
	      shouldCombineNext = false;
	      charCode = text.charCodeAt(i);
	      currentChars = text.charAt(i);

	      if (FontManager.isCombinedCharacter(charCode)) {
	        shouldCombine = true; // It's a potential surrogate pair (this is the High surrogate)
	      } else if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	        if (FontManager.isRegionalFlag(text, i)) {
	          currentChars = text.substr(i, 14);
	        } else {
	          secondCharCode = text.charCodeAt(i + 1); // It's a surrogate pair (this is the Low surrogate)

	          if (secondCharCode >= 0xDC00 && secondCharCode <= 0xDFFF) {
	            if (FontManager.isModifier(charCode, secondCharCode)) {
	              currentChars = text.substr(i, 2);
	              shouldCombine = true;
	            } else if (FontManager.isFlagEmoji(text.substr(i, 4))) {
	              currentChars = text.substr(i, 4);
	            } else {
	              currentChars = text.substr(i, 2);
	            }
	          }
	        }
	      } else if (charCode > 0xDBFF) {
	        secondCharCode = text.charCodeAt(i + 1);

	        if (FontManager.isVariationSelector(charCode)) {
	          shouldCombine = true;
	        }
	      } else if (FontManager.isZeroWidthJoiner(charCode)) {
	        shouldCombine = true;
	        shouldCombineNext = true;
	      }

	      if (shouldCombine) {
	        charactersArray[charactersArray.length - 1] += currentChars;
	        shouldCombine = false;
	      } else {
	        charactersArray.push(currentChars);
	      }

	      i += currentChars.length;
	    }

	    return charactersArray;
	  };

	  TextProperty.prototype.completeTextData = function (documentData) {
	    documentData.__complete = true;
	    var fontManager = this.elem.globalData.fontManager;
	    var data = this.data;
	    var letters = [];
	    var i;
	    var len;
	    var newLineFlag;
	    var index = 0;
	    var val;
	    var anchorGrouping = data.m.g;
	    var currentSize = 0;
	    var currentPos = 0;
	    var currentLine = 0;
	    var lineWidths = [];
	    var lineWidth = 0;
	    var maxLineWidth = 0;
	    var j;
	    var jLen;
	    var fontData = fontManager.getFontByName(documentData.f);
	    var charData;
	    var cLength = 0;
	    var fontProps = getFontProperties(fontData);
	    documentData.fWeight = fontProps.weight;
	    documentData.fStyle = fontProps.style;
	    documentData.finalSize = documentData.s;
	    documentData.finalText = this.buildFinalText(documentData.t);
	    len = documentData.finalText.length;
	    documentData.finalLineHeight = documentData.lh;
	    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;
	    var charCode;

	    if (documentData.sz) {
	      var flag = true;
	      var boxWidth = documentData.sz[0];
	      var boxHeight = documentData.sz[1];
	      var currentHeight;
	      var finalText;

	      while (flag) {
	        finalText = this.buildFinalText(documentData.t);
	        currentHeight = 0;
	        lineWidth = 0;
	        len = finalText.length;
	        trackingOffset = documentData.tr / 1000 * documentData.finalSize;
	        var lastSpaceIndex = -1;

	        for (i = 0; i < len; i += 1) {
	          charCode = finalText[i].charCodeAt(0);
	          newLineFlag = false;

	          if (finalText[i] === ' ') {
	            lastSpaceIndex = i;
	          } else if (charCode === 13 || charCode === 3) {
	            lineWidth = 0;
	            newLineFlag = true;
	            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
	          }

	          if (fontManager.chars) {
	            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);
	            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
	          } else {
	            // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;
	            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);
	          }

	          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {
	            if (lastSpaceIndex === -1) {
	              len += 1;
	            } else {
	              i = lastSpaceIndex;
	            }

	            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
	            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\r'); // finalText = finalText.substr(0,i) + "\r" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);

	            lastSpaceIndex = -1;
	            lineWidth = 0;
	          } else {
	            lineWidth += cLength;
	            lineWidth += trackingOffset;
	          }
	        }

	        currentHeight += fontData.ascent * documentData.finalSize / 100;

	        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {
	          documentData.finalSize -= 1;
	          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;
	        } else {
	          documentData.finalText = finalText;
	          len = documentData.finalText.length;
	          flag = false;
	        }
	      }
	    }

	    lineWidth = -trackingOffset;
	    cLength = 0;
	    var uncollapsedSpaces = 0;
	    var currentChar;

	    for (i = 0; i < len; i += 1) {
	      newLineFlag = false;
	      currentChar = documentData.finalText[i];
	      charCode = currentChar.charCodeAt(0);

	      if (charCode === 13 || charCode === 3) {
	        uncollapsedSpaces = 0;
	        lineWidths.push(lineWidth);
	        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
	        lineWidth = -2 * trackingOffset;
	        val = '';
	        newLineFlag = true;
	        currentLine += 1;
	      } else {
	        val = currentChar;
	      }

	      if (fontManager.chars) {
	        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);
	        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
	      } else {
	        // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);
	        // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;
	        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);
	      } //


	      if (currentChar === ' ') {
	        uncollapsedSpaces += cLength + trackingOffset;
	      } else {
	        lineWidth += cLength + trackingOffset + uncollapsedSpaces;
	        uncollapsedSpaces = 0;
	      }

	      letters.push({
	        l: cLength,
	        an: cLength,
	        add: currentSize,
	        n: newLineFlag,
	        anIndexes: [],
	        val: val,
	        line: currentLine,
	        animatorJustifyOffset: 0
	      });

	      if (anchorGrouping == 2) {
	        // eslint-disable-line eqeqeq
	        currentSize += cLength;

	        if (val === '' || val === ' ' || i === len - 1) {
	          if (val === '' || val === ' ') {
	            currentSize -= cLength;
	          }

	          while (currentPos <= i) {
	            letters[currentPos].an = currentSize;
	            letters[currentPos].ind = index;
	            letters[currentPos].extra = cLength;
	            currentPos += 1;
	          }

	          index += 1;
	          currentSize = 0;
	        }
	      } else if (anchorGrouping == 3) {
	        // eslint-disable-line eqeqeq
	        currentSize += cLength;

	        if (val === '' || i === len - 1) {
	          if (val === '') {
	            currentSize -= cLength;
	          }

	          while (currentPos <= i) {
	            letters[currentPos].an = currentSize;
	            letters[currentPos].ind = index;
	            letters[currentPos].extra = cLength;
	            currentPos += 1;
	          }

	          currentSize = 0;
	          index += 1;
	        }
	      } else {
	        letters[index].ind = index;
	        letters[index].extra = 0;
	        index += 1;
	      }
	    }

	    documentData.l = letters;
	    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
	    lineWidths.push(lineWidth);

	    if (documentData.sz) {
	      documentData.boxWidth = documentData.sz[0];
	      documentData.justifyOffset = 0;
	    } else {
	      documentData.boxWidth = maxLineWidth;

	      switch (documentData.j) {
	        case 1:
	          documentData.justifyOffset = -documentData.boxWidth;
	          break;

	        case 2:
	          documentData.justifyOffset = -documentData.boxWidth / 2;
	          break;

	        default:
	          documentData.justifyOffset = 0;
	      }
	    }

	    documentData.lineWidths = lineWidths;
	    var animators = data.a;
	    var animatorData;
	    var letterData;
	    jLen = animators.length;
	    var based;
	    var ind;
	    var indexes = [];

	    for (j = 0; j < jLen; j += 1) {
	      animatorData = animators[j];

	      if (animatorData.a.sc) {
	        documentData.strokeColorAnim = true;
	      }

	      if (animatorData.a.sw) {
	        documentData.strokeWidthAnim = true;
	      }

	      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {
	        documentData.fillColorAnim = true;
	      }

	      ind = 0;
	      based = animatorData.s.b;

	      for (i = 0; i < len; i += 1) {
	        letterData = letters[i];
	        letterData.anIndexes[j] = ind;

	        if (based == 1 && letterData.val !== '' || based == 2 && letterData.val !== '' && letterData.val !== ' ' || based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {
	          // eslint-disable-line eqeqeq
	          if (animatorData.s.rn === 1) {
	            indexes.push(ind);
	          }

	          ind += 1;
	        }
	      }

	      data.a[j].s.totalChars = ind;
	      var currentInd = -1;
	      var newInd;

	      if (animatorData.s.rn === 1) {
	        for (i = 0; i < len; i += 1) {
	          letterData = letters[i];

	          if (currentInd != letterData.anIndexes[j]) {
	            // eslint-disable-line eqeqeq
	            currentInd = letterData.anIndexes[j];
	            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];
	          }

	          letterData.anIndexes[j] = newInd;
	        }
	      }
	    }

	    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;
	    documentData.ls = documentData.ls || 0;
	    documentData.ascent = fontData.ascent * documentData.finalSize / 100;
	  };

	  TextProperty.prototype.updateDocumentData = function (newData, index) {
	    index = index === undefined ? this.keysIndex : index;
	    var dData = this.copyData({}, this.data.d.k[index].s);
	    dData = this.copyData(dData, newData);
	    this.data.d.k[index].s = dData;
	    this.recalculate(index);
	    this.setCurrentData(dData);
	    this.elem.addDynamicProperty(this);
	  };

	  TextProperty.prototype.recalculate = function (index) {
	    var dData = this.data.d.k[index].s;
	    dData.__complete = false;
	    this.keysIndex = 0;
	    this._isFirstFrame = true;
	    this.getValue(dData);
	  };

	  TextProperty.prototype.canResizeFont = function (_canResize) {
	    this.canResize = _canResize;
	    this.recalculate(this.keysIndex);
	    this.elem.addDynamicProperty(this);
	  };

	  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {
	    this.minimumFontSize = Math.floor(_fontValue) || 1;
	    this.recalculate(this.keysIndex);
	    this.elem.addDynamicProperty(this);
	  };

	  var TextSelectorProp = function () {
	    var max = Math.max;
	    var min = Math.min;
	    var floor = Math.floor;

	    function TextSelectorPropFactory(elem, data) {
	      this._currentTextLength = -1;
	      this.k = false;
	      this.data = data;
	      this.elem = elem;
	      this.comp = elem.comp;
	      this.finalS = 0;
	      this.finalE = 0;
	      this.initDynamicPropertyContainer(elem);
	      this.s = PropertyFactory.getProp(elem, data.s || {
	        k: 0
	      }, 0, 0, this);

	      if ('e' in data) {
	        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);
	      } else {
	        this.e = {
	          v: 100
	        };
	      }

	      this.o = PropertyFactory.getProp(elem, data.o || {
	        k: 0
	      }, 0, 0, this);
	      this.xe = PropertyFactory.getProp(elem, data.xe || {
	        k: 0
	      }, 0, 0, this);
	      this.ne = PropertyFactory.getProp(elem, data.ne || {
	        k: 0
	      }, 0, 0, this);
	      this.sm = PropertyFactory.getProp(elem, data.sm || {
	        k: 100
	      }, 0, 0, this);
	      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);

	      if (!this.dynamicProperties.length) {
	        this.getValue();
	      }
	    }

	    TextSelectorPropFactory.prototype = {
	      getMult: function getMult(ind) {
	        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {
	          this.getValue();
	        }

	        var x1 = 0;
	        var y1 = 0;
	        var x2 = 1;
	        var y2 = 1;

	        if (this.ne.v > 0) {
	          x1 = this.ne.v / 100.0;
	        } else {
	          y1 = -this.ne.v / 100.0;
	        }

	        if (this.xe.v > 0) {
	          x2 = 1.0 - this.xe.v / 100.0;
	        } else {
	          y2 = 1.0 + this.xe.v / 100.0;
	        }

	        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;
	        var mult = 0;
	        var s = this.finalS;
	        var e = this.finalE;
	        var type = this.data.sh;

	        if (type === 2) {
	          if (e === s) {
	            mult = ind >= e ? 1 : 0;
	          } else {
	            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
	          }

	          mult = easer(mult);
	        } else if (type === 3) {
	          if (e === s) {
	            mult = ind >= e ? 0 : 1;
	          } else {
	            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
	          }

	          mult = easer(mult);
	        } else if (type === 4) {
	          if (e === s) {
	            mult = 0;
	          } else {
	            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));

	            if (mult < 0.5) {
	              mult *= 2;
	            } else {
	              mult = 1 - 2 * (mult - 0.5);
	            }
	          }

	          mult = easer(mult);
	        } else if (type === 5) {
	          if (e === s) {
	            mult = 0;
	          } else {
	            var tot = e - s;
	            /* ind += 0.5;
	                      mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */

	            ind = min(max(0, ind + 0.5 - s), e - s);
	            var x = -tot / 2 + ind;
	            var a = tot / 2;
	            mult = Math.sqrt(1 - x * x / (a * a));
	          }

	          mult = easer(mult);
	        } else if (type === 6) {
	          if (e === s) {
	            mult = 0;
	          } else {
	            ind = min(max(0, ind + 0.5 - s), e - s);
	            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2; // eslint-disable-line
	          }

	          mult = easer(mult);
	        } else {
	          if (ind >= floor(s)) {
	            if (ind - s < 0) {
	              mult = max(0, min(min(e, 1) - (s - ind), 1));
	            } else {
	              mult = max(0, min(e - ind, 1));
	            }
	          }

	          mult = easer(mult);
	        } // Smoothness implementation.
	        // The smoothness represents a reduced range of the original [0; 1] range.
	        // if smoothness is 25%, the new range will be [0.375; 0.625]
	        // Steps are:
	        // - find the lower value of the new range (threshold)
	        // - if multiplier is smaller than that value, floor it to 0
	        // - if it is larger,
	        //     - subtract the threshold
	        //     - divide it by the smoothness (this will return the range to [0; 1])
	        // Note: If it doesn't work on some scenarios, consider applying it before the easer.


	        if (this.sm.v !== 100) {
	          var smoothness = this.sm.v * 0.01;

	          if (smoothness === 0) {
	            smoothness = 0.00000001;
	          }

	          var threshold = 0.5 - smoothness * 0.5;

	          if (mult < threshold) {
	            mult = 0;
	          } else {
	            mult = (mult - threshold) / smoothness;

	            if (mult > 1) {
	              mult = 1;
	            }
	          }
	        }

	        return mult * this.a.v;
	      },
	      getValue: function getValue(newCharsFlag) {
	        this.iterateDynamicProperties();
	        this._mdf = newCharsFlag || this._mdf;
	        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;

	        if (newCharsFlag && this.data.r === 2) {
	          this.e.v = this._currentTextLength;
	        }

	        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;
	        var o = this.o.v / divisor;
	        var s = this.s.v / divisor + o;
	        var e = this.e.v / divisor + o;

	        if (s > e) {
	          var _s = s;
	          s = e;
	          e = _s;
	        }

	        this.finalS = s;
	        this.finalE = e;
	      }
	    };
	    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);

	    function getTextSelectorProp(elem, data, arr) {
	      return new TextSelectorPropFactory(elem, data);
	    }

	    return {
	      getTextSelectorProp: getTextSelectorProp
	    };
	  }();

	  function TextAnimatorDataProperty(elem, animatorProps, container) {
	    var defaultData = {
	      propType: false
	    };
	    var getProp = PropertyFactory.getProp;
	    var textAnimatorAnimatables = animatorProps.a;
	    this.a = {
	      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,
	      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,
	      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,
	      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,
	      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,
	      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,
	      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,
	      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,
	      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,
	      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,
	      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,
	      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,
	      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,
	      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,
	      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,
	      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData
	    };
	    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);
	    this.s.t = animatorProps.s.t;
	  }

	  function TextAnimatorProperty(textData, renderType, elem) {
	    this._isFirstFrame = true;
	    this._hasMaskedPath = false;
	    this._frameId = -1;
	    this._textData = textData;
	    this._renderType = renderType;
	    this._elem = elem;
	    this._animatorsData = createSizedArray(this._textData.a.length);
	    this._pathData = {};
	    this._moreOptions = {
	      alignment: {}
	    };
	    this.renderedLetters = [];
	    this.lettersChangedFlag = false;
	    this.initDynamicPropertyContainer(elem);
	  }

	  TextAnimatorProperty.prototype.searchProperties = function () {
	    var i;
	    var len = this._textData.a.length;
	    var animatorProps;
	    var getProp = PropertyFactory.getProp;

	    for (i = 0; i < len; i += 1) {
	      animatorProps = this._textData.a[i];
	      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);
	    }

	    if (this._textData.p && 'm' in this._textData.p) {
	      this._pathData = {
	        a: getProp(this._elem, this._textData.p.a, 0, 0, this),
	        f: getProp(this._elem, this._textData.p.f, 0, 0, this),
	        l: getProp(this._elem, this._textData.p.l, 0, 0, this),
	        r: getProp(this._elem, this._textData.p.r, 0, 0, this),
	        p: getProp(this._elem, this._textData.p.p, 0, 0, this),
	        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
	      };
	      this._hasMaskedPath = true;
	    } else {
	      this._hasMaskedPath = false;
	    }

	    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);
	  };

	  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {
	    this.lettersChangedFlag = lettersChangedFlag;

	    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {
	      return;
	    }

	    this._isFirstFrame = false;
	    var alignment = this._moreOptions.alignment.v;
	    var animators = this._animatorsData;
	    var textData = this._textData;
	    var matrixHelper = this.mHelper;
	    var renderType = this._renderType;
	    var renderedLettersCount = this.renderedLetters.length;
	    var xPos;
	    var yPos;
	    var i;
	    var len;
	    var letters = documentData.l;
	    var pathInfo;
	    var currentLength;
	    var currentPoint;
	    var segmentLength;
	    var flag;
	    var pointInd;
	    var segmentInd;
	    var prevPoint;
	    var points;
	    var segments;
	    var partialLength;
	    var totalLength;
	    var perc;
	    var tanAngle;
	    var mask;

	    if (this._hasMaskedPath) {
	      mask = this._pathData.m;

	      if (!this._pathData.n || this._pathData._mdf) {
	        var paths = mask.v;

	        if (this._pathData.r.v) {
	          paths = paths.reverse();
	        } // TODO: release bezier data cached from previous pathInfo: this._pathData.pi


	        pathInfo = {
	          tLength: 0,
	          segments: []
	        };
	        len = paths._length - 1;
	        var bezierData;
	        totalLength = 0;

	        for (i = 0; i < len; i += 1) {
	          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);
	          pathInfo.tLength += bezierData.segmentLength;
	          pathInfo.segments.push(bezierData);
	          totalLength += bezierData.segmentLength;
	        }

	        i = len;

	        if (mask.v.c) {
	          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);
	          pathInfo.tLength += bezierData.segmentLength;
	          pathInfo.segments.push(bezierData);
	          totalLength += bezierData.segmentLength;
	        }

	        this._pathData.pi = pathInfo;
	      }

	      pathInfo = this._pathData.pi;
	      currentLength = this._pathData.f.v;
	      segmentInd = 0;
	      pointInd = 1;
	      segmentLength = 0;
	      flag = true;
	      segments = pathInfo.segments;

	      if (currentLength < 0 && mask.v.c) {
	        if (pathInfo.tLength < Math.abs(currentLength)) {
	          currentLength = -Math.abs(currentLength) % pathInfo.tLength;
	        }

	        segmentInd = segments.length - 1;
	        points = segments[segmentInd].points;
	        pointInd = points.length - 1;

	        while (currentLength < 0) {
	          currentLength += points[pointInd].partialLength;
	          pointInd -= 1;

	          if (pointInd < 0) {
	            segmentInd -= 1;
	            points = segments[segmentInd].points;
	            pointInd = points.length - 1;
	          }
	        }
	      }

	      points = segments[segmentInd].points;
	      prevPoint = points[pointInd - 1];
	      currentPoint = points[pointInd];
	      partialLength = currentPoint.partialLength;
	    }

	    len = letters.length;
	    xPos = 0;
	    yPos = 0;
	    var yOff = documentData.finalSize * 1.2 * 0.714;
	    var firstLine = true;
	    var animatorProps;
	    var animatorSelector;
	    var j;
	    var jLen;
	    var letterValue;
	    jLen = animators.length;
	    var mult;
	    var ind = -1;
	    var offf;
	    var xPathPos;
	    var yPathPos;
	    var initPathPos = currentLength;
	    var initSegmentInd = segmentInd;
	    var initPointInd = pointInd;
	    var currentLine = -1;
	    var elemOpacity;
	    var sc;
	    var sw;
	    var fc;
	    var k;
	    var letterSw;
	    var letterSc;
	    var letterFc;
	    var letterM = '';
	    var letterP = this.defaultPropsArray;
	    var letterO; //

	    if (documentData.j === 2 || documentData.j === 1) {
	      var animatorJustifyOffset = 0;
	      var animatorFirstCharOffset = 0;
	      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;
	      var lastIndex = 0;
	      var isNewLine = true;

	      for (i = 0; i < len; i += 1) {
	        if (letters[i].n) {
	          if (animatorJustifyOffset) {
	            animatorJustifyOffset += animatorFirstCharOffset;
	          }

	          while (lastIndex < i) {
	            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
	            lastIndex += 1;
	          }

	          animatorJustifyOffset = 0;
	          isNewLine = true;
	        } else {
	          for (j = 0; j < jLen; j += 1) {
	            animatorProps = animators[j].a;

	            if (animatorProps.t.propType) {
	              if (isNewLine && documentData.j === 2) {
	                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;
	              }

	              animatorSelector = animators[j].s;
	              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);

	              if (mult.length) {
	                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;
	              } else {
	                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;
	              }
	            }
	          }

	          isNewLine = false;
	        }
	      }

	      if (animatorJustifyOffset) {
	        animatorJustifyOffset += animatorFirstCharOffset;
	      }

	      while (lastIndex < i) {
	        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
	        lastIndex += 1;
	      }
	    } //


	    for (i = 0; i < len; i += 1) {
	      matrixHelper.reset();
	      elemOpacity = 1;

	      if (letters[i].n) {
	        xPos = 0;
	        yPos += documentData.yOffset;
	        yPos += firstLine ? 1 : 0;
	        currentLength = initPathPos;
	        firstLine = false;

	        if (this._hasMaskedPath) {
	          segmentInd = initSegmentInd;
	          pointInd = initPointInd;
	          points = segments[segmentInd].points;
	          prevPoint = points[pointInd - 1];
	          currentPoint = points[pointInd];
	          partialLength = currentPoint.partialLength;
	          segmentLength = 0;
	        }

	        letterM = '';
	        letterFc = '';
	        letterSw = '';
	        letterO = '';
	        letterP = this.defaultPropsArray;
	      } else {
	        if (this._hasMaskedPath) {
	          if (currentLine !== letters[i].line) {
	            switch (documentData.j) {
	              case 1:
	                currentLength += totalLength - documentData.lineWidths[letters[i].line];
	                break;

	              case 2:
	                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;
	                break;
	            }

	            currentLine = letters[i].line;
	          }

	          if (ind !== letters[i].ind) {
	            if (letters[ind]) {
	              currentLength += letters[ind].extra;
	            }

	            currentLength += letters[i].an / 2;
	            ind = letters[i].ind;
	          }

	          currentLength += alignment[0] * letters[i].an * 0.005;
	          var animatorOffset = 0;

	          for (j = 0; j < jLen; j += 1) {
	            animatorProps = animators[j].a;

	            if (animatorProps.p.propType) {
	              animatorSelector = animators[j].s;
	              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);

	              if (mult.length) {
	                animatorOffset += animatorProps.p.v[0] * mult[0];
	              } else {
	                animatorOffset += animatorProps.p.v[0] * mult;
	              }
	            }

	            if (animatorProps.a.propType) {
	              animatorSelector = animators[j].s;
	              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);

	              if (mult.length) {
	                animatorOffset += animatorProps.a.v[0] * mult[0];
	              } else {
	                animatorOffset += animatorProps.a.v[0] * mult;
	              }
	            }
	          }

	          flag = true; // Force alignment only works with a single line for now

	          if (this._pathData.a.v) {
	            currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);
	            currentLength += this._pathData.f.v;
	          }

	          while (flag) {
	            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {
	              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;
	              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;
	              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;
	              matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -(alignment[1] * yOff) * 0.01);
	              flag = false;
	            } else if (points) {
	              segmentLength += currentPoint.partialLength;
	              pointInd += 1;

	              if (pointInd >= points.length) {
	                pointInd = 0;
	                segmentInd += 1;

	                if (!segments[segmentInd]) {
	                  if (mask.v.c) {
	                    pointInd = 0;
	                    segmentInd = 0;
	                    points = segments[segmentInd].points;
	                  } else {
	                    segmentLength -= currentPoint.partialLength;
	                    points = null;
	                  }
	                } else {
	                  points = segments[segmentInd].points;
	                }
	              }

	              if (points) {
	                prevPoint = currentPoint;
	                currentPoint = points[pointInd];
	                partialLength = currentPoint.partialLength;
	              }
	            }
	          }

	          offf = letters[i].an / 2 - letters[i].add;
	          matrixHelper.translate(-offf, 0, 0);
	        } else {
	          offf = letters[i].an / 2 - letters[i].add;
	          matrixHelper.translate(-offf, 0, 0); // Grouping alignment

	          matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -alignment[1] * yOff * 0.01, 0);
	        }

	        for (j = 0; j < jLen; j += 1) {
	          animatorProps = animators[j].a;

	          if (animatorProps.t.propType) {
	            animatorSelector = animators[j].s;
	            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars); // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean "isNewLine"

	            if (xPos !== 0 || documentData.j !== 0) {
	              if (this._hasMaskedPath) {
	                if (mult.length) {
	                  currentLength += animatorProps.t.v * mult[0];
	                } else {
	                  currentLength += animatorProps.t.v * mult;
	                }
	              } else if (mult.length) {
	                xPos += animatorProps.t.v * mult[0];
	              } else {
	                xPos += animatorProps.t.v * mult;
	              }
	            }
	          }
	        }

	        if (documentData.strokeWidthAnim) {
	          sw = documentData.sw || 0;
	        }

	        if (documentData.strokeColorAnim) {
	          if (documentData.sc) {
	            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];
	          } else {
	            sc = [0, 0, 0];
	          }
	        }

	        if (documentData.fillColorAnim && documentData.fc) {
	          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];
	        }

	        for (j = 0; j < jLen; j += 1) {
	          animatorProps = animators[j].a;

	          if (animatorProps.a.propType) {
	            animatorSelector = animators[j].s;
	            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);

	            if (mult.length) {
	              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);
	            } else {
	              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);
	            }
	          }
	        }

	        for (j = 0; j < jLen; j += 1) {
	          animatorProps = animators[j].a;

	          if (animatorProps.s.propType) {
	            animatorSelector = animators[j].s;
	            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);

	            if (mult.length) {
	              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);
	            } else {
	              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);
	            }
	          }
	        }

	        for (j = 0; j < jLen; j += 1) {
	          animatorProps = animators[j].a;
	          animatorSelector = animators[j].s;
	          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);

	          if (animatorProps.sk.propType) {
	            if (mult.length) {
	              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);
	            } else {
	              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);
	            }
	          }

	          if (animatorProps.r.propType) {
	            if (mult.length) {
	              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);
	            } else {
	              matrixHelper.rotateZ(-animatorProps.r.v * mult);
	            }
	          }

	          if (animatorProps.ry.propType) {
	            if (mult.length) {
	              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);
	            } else {
	              matrixHelper.rotateY(animatorProps.ry.v * mult);
	            }
	          }

	          if (animatorProps.rx.propType) {
	            if (mult.length) {
	              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);
	            } else {
	              matrixHelper.rotateX(animatorProps.rx.v * mult);
	            }
	          }

	          if (animatorProps.o.propType) {
	            if (mult.length) {
	              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];
	            } else {
	              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;
	            }
	          }

	          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {
	            if (mult.length) {
	              sw += animatorProps.sw.v * mult[0];
	            } else {
	              sw += animatorProps.sw.v * mult;
	            }
	          }

	          if (documentData.strokeColorAnim && animatorProps.sc.propType) {
	            for (k = 0; k < 3; k += 1) {
	              if (mult.length) {
	                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];
	              } else {
	                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;
	              }
	            }
	          }

	          if (documentData.fillColorAnim && documentData.fc) {
	            if (animatorProps.fc.propType) {
	              for (k = 0; k < 3; k += 1) {
	                if (mult.length) {
	                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];
	                } else {
	                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;
	                }
	              }
	            }

	            if (animatorProps.fh.propType) {
	              if (mult.length) {
	                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);
	              } else {
	                fc = addHueToRGB(fc, animatorProps.fh.v * mult);
	              }
	            }

	            if (animatorProps.fs.propType) {
	              if (mult.length) {
	                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);
	              } else {
	                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);
	              }
	            }

	            if (animatorProps.fb.propType) {
	              if (mult.length) {
	                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);
	              } else {
	                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);
	              }
	            }
	          }
	        }

	        for (j = 0; j < jLen; j += 1) {
	          animatorProps = animators[j].a;

	          if (animatorProps.p.propType) {
	            animatorSelector = animators[j].s;
	            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);

	            if (this._hasMaskedPath) {
	              if (mult.length) {
	                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);
	              } else {
	                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
	              }
	            } else if (mult.length) {
	              matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);
	            } else {
	              matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
	            }
	          }
	        }

	        if (documentData.strokeWidthAnim) {
	          letterSw = sw < 0 ? 0 : sw;
	        }

	        if (documentData.strokeColorAnim) {
	          letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';
	        }

	        if (documentData.fillColorAnim && documentData.fc) {
	          letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';
	        }

	        if (this._hasMaskedPath) {
	          matrixHelper.translate(0, -documentData.ls);
	          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);

	          if (this._pathData.p.v) {
	            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);
	            var rot = Math.atan(tanAngle) * 180 / Math.PI;

	            if (currentPoint.point[0] < prevPoint.point[0]) {
	              rot += 180;
	            }

	            matrixHelper.rotate(-rot * Math.PI / 180);
	          }

	          matrixHelper.translate(xPathPos, yPathPos, 0);
	          currentLength -= alignment[0] * letters[i].an * 0.005;

	          if (letters[i + 1] && ind !== letters[i + 1].ind) {
	            currentLength += letters[i].an / 2;
	            currentLength += documentData.tr * 0.001 * documentData.finalSize;
	          }
	        } else {
	          matrixHelper.translate(xPos, yPos, 0);

	          if (documentData.ps) {
	            // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);
	            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
	          }

	          switch (documentData.j) {
	            case 1:
	              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);
	              break;

	            case 2:
	              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);
	              break;
	          }

	          matrixHelper.translate(0, -documentData.ls);
	          matrixHelper.translate(offf, 0, 0);
	          matrixHelper.translate(alignment[0] * letters[i].an * 0.005, alignment[1] * yOff * 0.01, 0);
	          xPos += letters[i].l + documentData.tr * 0.001 * documentData.finalSize;
	        }

	        if (renderType === 'html') {
	          letterM = matrixHelper.toCSS();
	        } else if (renderType === 'svg') {
	          letterM = matrixHelper.to2dCSS();
	        } else {
	          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];
	        }

	        letterO = elemOpacity;
	      }

	      if (renderedLettersCount <= i) {
	        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);
	        this.renderedLetters.push(letterValue);
	        renderedLettersCount += 1;
	        this.lettersChangedFlag = true;
	      } else {
	        letterValue = this.renderedLetters[i];
	        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;
	      }
	    }
	  };

	  TextAnimatorProperty.prototype.getValue = function () {
	    if (this._elem.globalData.frameId === this._frameId) {
	      return;
	    }

	    this._frameId = this._elem.globalData.frameId;
	    this.iterateDynamicProperties();
	  };

	  TextAnimatorProperty.prototype.mHelper = new Matrix();
	  TextAnimatorProperty.prototype.defaultPropsArray = [];
	  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);

	  function ITextElement() {}

	  ITextElement.prototype.initElement = function (data, globalData, comp) {
	    this.lettersChangedFlag = true;
	    this.initFrame();
	    this.initBaseData(data, globalData, comp);
	    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);
	    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);
	    this.initTransform(data, globalData, comp);
	    this.initHierarchy();
	    this.initRenderable();
	    this.initRendererElement();
	    this.createContainerElements();
	    this.createRenderableComponents();
	    this.createContent();
	    this.hide();
	    this.textAnimator.searchProperties(this.dynamicProperties);
	  };

	  ITextElement.prototype.prepareFrame = function (num) {
	    this._mdf = false;
	    this.prepareRenderableFrame(num);
	    this.prepareProperties(num, this.isInRange);
	  };

	  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {
	    var j;
	    var jLen = shapes.length;
	    var pathNodes;
	    var shapeStr = '';

	    for (j = 0; j < jLen; j += 1) {
	      if (shapes[j].ty === 'sh') {
	        pathNodes = shapes[j].ks.k;
	        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);
	      }
	    }

	    return shapeStr;
	  };

	  ITextElement.prototype.updateDocumentData = function (newData, index) {
	    this.textProperty.updateDocumentData(newData, index);
	  };

	  ITextElement.prototype.canResizeFont = function (_canResize) {
	    this.textProperty.canResizeFont(_canResize);
	  };

	  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {
	    this.textProperty.setMinimumFontSize(_fontSize);
	  };

	  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {
	    if (documentData.ps) {
	      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
	    }

	    matrixHelper.translate(0, -documentData.ls, 0);

	    switch (documentData.j) {
	      case 1:
	        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);
	        break;

	      case 2:
	        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);
	        break;
	    }

	    matrixHelper.translate(xPos, yPos, 0);
	  };

	  ITextElement.prototype.buildColor = function (colorData) {
	    return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';
	  };

	  ITextElement.prototype.emptyProp = new LetterProps();

	  ITextElement.prototype.destroy = function () {};

	  ITextElement.prototype.validateText = function () {
	    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {
	      this.buildNewText();
	      this.textProperty._isFirstFrame = false;
	      this.textProperty._mdf = false;
	    }
	  };

	  var emptyShapeData = {
	    shapes: []
	  };

	  function SVGTextLottieElement(data, globalData, comp) {
	    this.textSpans = [];
	    this.renderType = 'svg';
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);

	  SVGTextLottieElement.prototype.createContent = function () {
	    if (this.data.singleShape && !this.globalData.fontManager.chars) {
	      this.textContainer = createNS('text');
	    }
	  };

	  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {
	    var i = 0;
	    var len = textArray.length;
	    var textContents = [];
	    var currentTextContent = '';

	    while (i < len) {
	      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {
	        textContents.push(currentTextContent);
	        currentTextContent = '';
	      } else {
	        currentTextContent += textArray[i];
	      }

	      i += 1;
	    }

	    textContents.push(currentTextContent);
	    return textContents;
	  };

	  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {
	    // data should probably be cloned to apply scale separately to each instance of a text on different layers
	    // but since text internal content gets only rendered once and then it's never rerendered,
	    // it's probably safe not to clone data and reuse always the same instance even if the object is mutated.
	    // Avoiding cloning is preferred since cloning each character shape data is expensive
	    if (data.shapes && data.shapes.length) {
	      var shape = data.shapes[0];

	      if (shape.it) {
	        var shapeItem = shape.it[shape.it.length - 1];

	        if (shapeItem.s) {
	          shapeItem.s.k[0] = scale;
	          shapeItem.s.k[1] = scale;
	        }
	      }
	    }

	    return data;
	  };

	  SVGTextLottieElement.prototype.buildNewText = function () {
	    this.addDynamicProperty(this);
	    var i;
	    var len;
	    var documentData = this.textProperty.currentData;
	    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);

	    if (documentData.fc) {
	      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));
	    } else {
	      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');
	    }

	    if (documentData.sc) {
	      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));
	      this.layerElement.setAttribute('stroke-width', documentData.sw);
	    }

	    this.layerElement.setAttribute('font-size', documentData.finalSize);
	    var fontData = this.globalData.fontManager.getFontByName(documentData.f);

	    if (fontData.fClass) {
	      this.layerElement.setAttribute('class', fontData.fClass);
	    } else {
	      this.layerElement.setAttribute('font-family', fontData.fFamily);
	      var fWeight = documentData.fWeight;
	      var fStyle = documentData.fStyle;
	      this.layerElement.setAttribute('font-style', fStyle);
	      this.layerElement.setAttribute('font-weight', fWeight);
	    }

	    this.layerElement.setAttribute('aria-label', documentData.t);
	    var letters = documentData.l || [];
	    var usesGlyphs = !!this.globalData.fontManager.chars;
	    len = letters.length;
	    var tSpan;
	    var matrixHelper = this.mHelper;
	    var shapeStr = '';
	    var singleShape = this.data.singleShape;
	    var xPos = 0;
	    var yPos = 0;
	    var firstLine = true;
	    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;

	    if (singleShape && !usesGlyphs && !documentData.sz) {
	      var tElement = this.textContainer;
	      var justify = 'start';

	      switch (documentData.j) {
	        case 1:
	          justify = 'end';
	          break;

	        case 2:
	          justify = 'middle';
	          break;

	        default:
	          justify = 'start';
	          break;
	      }

	      tElement.setAttribute('text-anchor', justify);
	      tElement.setAttribute('letter-spacing', trackingOffset);
	      var textContent = this.buildTextContents(documentData.finalText);
	      len = textContent.length;
	      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;

	      for (i = 0; i < len; i += 1) {
	        tSpan = this.textSpans[i].span || createNS('tspan');
	        tSpan.textContent = textContent[i];
	        tSpan.setAttribute('x', 0);
	        tSpan.setAttribute('y', yPos);
	        tSpan.style.display = 'inherit';
	        tElement.appendChild(tSpan);

	        if (!this.textSpans[i]) {
	          this.textSpans[i] = {
	            span: null,
	            glyph: null
	          };
	        }

	        this.textSpans[i].span = tSpan;
	        yPos += documentData.finalLineHeight;
	      }

	      this.layerElement.appendChild(tElement);
	    } else {
	      var cachedSpansLength = this.textSpans.length;
	      var charData;

	      for (i = 0; i < len; i += 1) {
	        if (!this.textSpans[i]) {
	          this.textSpans[i] = {
	            span: null,
	            childSpan: null,
	            glyph: null
	          };
	        }

	        if (!usesGlyphs || !singleShape || i === 0) {
	          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? 'g' : 'text');

	          if (cachedSpansLength <= i) {
	            tSpan.setAttribute('stroke-linecap', 'butt');
	            tSpan.setAttribute('stroke-linejoin', 'round');
	            tSpan.setAttribute('stroke-miterlimit', '4');
	            this.textSpans[i].span = tSpan;

	            if (usesGlyphs) {
	              var childSpan = createNS('g');
	              tSpan.appendChild(childSpan);
	              this.textSpans[i].childSpan = childSpan;
	            }

	            this.textSpans[i].span = tSpan;
	            this.layerElement.appendChild(tSpan);
	          }

	          tSpan.style.display = 'inherit';
	        }

	        matrixHelper.reset();

	        if (singleShape) {
	          if (letters[i].n) {
	            xPos = -trackingOffset;
	            yPos += documentData.yOffset;
	            yPos += firstLine ? 1 : 0;
	            firstLine = false;
	          }

	          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
	          xPos += letters[i].l || 0; // xPos += letters[i].val === ' ' ? 0 : trackingOffset;

	          xPos += trackingOffset;
	        }

	        if (usesGlyphs) {
	          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
	          var glyphElement; // t === 1 means the character has been replaced with an animated shaped

	          if (charData.t === 1) {
	            glyphElement = new SVGCompElement(charData.data, this.globalData, this);
	          } else {
	            var data = emptyShapeData;

	            if (charData.data && charData.data.shapes) {
	              data = this.buildShapeData(charData.data, documentData.finalSize);
	            }

	            glyphElement = new SVGShapeElement(data, this.globalData, this);
	          }

	          if (this.textSpans[i].glyph) {
	            var glyph = this.textSpans[i].glyph;
	            this.textSpans[i].childSpan.removeChild(glyph.layerElement);
	            glyph.destroy();
	          }

	          this.textSpans[i].glyph = glyphElement;
	          glyphElement._debug = true;
	          glyphElement.prepareFrame(0);
	          glyphElement.renderFrame();
	          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement); // when using animated shapes, the layer will be scaled instead of replacing the internal scale
	          // this might have issues with strokes and might need a different solution

	          if (charData.t === 1) {
	            this.textSpans[i].childSpan.setAttribute('transform', 'scale(' + documentData.finalSize / 100 + ',' + documentData.finalSize / 100 + ')');
	          }
	        } else {
	          if (singleShape) {
	            tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')');
	          }

	          tSpan.textContent = letters[i].val;
	          tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');
	        } //

	      }

	      if (singleShape && tSpan) {
	        tSpan.setAttribute('d', shapeStr);
	      }
	    }

	    while (i < this.textSpans.length) {
	      this.textSpans[i].span.style.display = 'none';
	      i += 1;
	    }

	    this._sizeChanged = true;
	  };

	  SVGTextLottieElement.prototype.sourceRectAtTime = function () {
	    this.prepareFrame(this.comp.renderedFrame - this.data.st);
	    this.renderInnerContent();

	    if (this._sizeChanged) {
	      this._sizeChanged = false;
	      var textBox = this.layerElement.getBBox();
	      this.bbox = {
	        top: textBox.y,
	        left: textBox.x,
	        width: textBox.width,
	        height: textBox.height
	      };
	    }

	    return this.bbox;
	  };

	  SVGTextLottieElement.prototype.getValue = function () {
	    var i;
	    var len = this.textSpans.length;
	    var glyphElement;
	    this.renderedFrame = this.comp.renderedFrame;

	    for (i = 0; i < len; i += 1) {
	      glyphElement = this.textSpans[i].glyph;

	      if (glyphElement) {
	        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);

	        if (glyphElement._mdf) {
	          this._mdf = true;
	        }
	      }
	    }
	  };

	  SVGTextLottieElement.prototype.renderInnerContent = function () {
	    this.validateText();

	    if (!this.data.singleShape || this._mdf) {
	      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);

	      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
	        this._sizeChanged = true;
	        var i;
	        var len;
	        var renderedLetters = this.textAnimator.renderedLetters;
	        var letters = this.textProperty.currentData.l;
	        len = letters.length;
	        var renderedLetter;
	        var textSpan;
	        var glyphElement;

	        for (i = 0; i < len; i += 1) {
	          if (!letters[i].n) {
	            renderedLetter = renderedLetters[i];
	            textSpan = this.textSpans[i].span;
	            glyphElement = this.textSpans[i].glyph;

	            if (glyphElement) {
	              glyphElement.renderFrame();
	            }

	            if (renderedLetter._mdf.m) {
	              textSpan.setAttribute('transform', renderedLetter.m);
	            }

	            if (renderedLetter._mdf.o) {
	              textSpan.setAttribute('opacity', renderedLetter.o);
	            }

	            if (renderedLetter._mdf.sw) {
	              textSpan.setAttribute('stroke-width', renderedLetter.sw);
	            }

	            if (renderedLetter._mdf.sc) {
	              textSpan.setAttribute('stroke', renderedLetter.sc);
	            }

	            if (renderedLetter._mdf.fc) {
	              textSpan.setAttribute('fill', renderedLetter.fc);
	            }
	          }
	        }
	      }
	    }
	  };

	  function ISolidElement(data, globalData, comp) {
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([IImageElement], ISolidElement);

	  ISolidElement.prototype.createContent = function () {
	    var rect = createNS('rect'); /// /rect.style.width = this.data.sw;
	    /// /rect.style.height = this.data.sh;
	    /// /rect.style.fill = this.data.sc;

	    rect.setAttribute('width', this.data.sw);
	    rect.setAttribute('height', this.data.sh);
	    rect.setAttribute('fill', this.data.sc);
	    this.layerElement.appendChild(rect);
	  };

	  function NullElement(data, globalData, comp) {
	    this.initFrame();
	    this.initBaseData(data, globalData, comp);
	    this.initFrame();
	    this.initTransform(data, globalData, comp);
	    this.initHierarchy();
	  }

	  NullElement.prototype.prepareFrame = function (num) {
	    this.prepareProperties(num, true);
	  };

	  NullElement.prototype.renderFrame = function () {};

	  NullElement.prototype.getBaseElement = function () {
	    return null;
	  };

	  NullElement.prototype.destroy = function () {};

	  NullElement.prototype.sourceRectAtTime = function () {};

	  NullElement.prototype.hide = function () {};

	  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);

	  function SVGRendererBase() {}

	  extendPrototype([BaseRenderer], SVGRendererBase);

	  SVGRendererBase.prototype.createNull = function (data) {
	    return new NullElement(data, this.globalData, this);
	  };

	  SVGRendererBase.prototype.createShape = function (data) {
	    return new SVGShapeElement(data, this.globalData, this);
	  };

	  SVGRendererBase.prototype.createText = function (data) {
	    return new SVGTextLottieElement(data, this.globalData, this);
	  };

	  SVGRendererBase.prototype.createImage = function (data) {
	    return new IImageElement(data, this.globalData, this);
	  };

	  SVGRendererBase.prototype.createSolid = function (data) {
	    return new ISolidElement(data, this.globalData, this);
	  };

	  SVGRendererBase.prototype.configAnimation = function (animData) {
	    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
	    this.svgElement.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');

	    if (this.renderConfig.viewBoxSize) {
	      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);
	    } else {
	      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);
	    }

	    if (!this.renderConfig.viewBoxOnly) {
	      this.svgElement.setAttribute('width', animData.w);
	      this.svgElement.setAttribute('height', animData.h);
	      this.svgElement.style.width = '100%';
	      this.svgElement.style.height = '100%';
	      this.svgElement.style.transform = 'translate3d(0,0,0)';
	      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;
	    }

	    if (this.renderConfig.width) {
	      this.svgElement.setAttribute('width', this.renderConfig.width);
	    }

	    if (this.renderConfig.height) {
	      this.svgElement.setAttribute('height', this.renderConfig.height);
	    }

	    if (this.renderConfig.className) {
	      this.svgElement.setAttribute('class', this.renderConfig.className);
	    }

	    if (this.renderConfig.id) {
	      this.svgElement.setAttribute('id', this.renderConfig.id);
	    }

	    if (this.renderConfig.focusable !== undefined) {
	      this.svgElement.setAttribute('focusable', this.renderConfig.focusable);
	    }

	    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio); // this.layerElement.style.transform = 'translate3d(0,0,0)';
	    // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = "0px 0px 0px";

	    this.animationItem.wrapper.appendChild(this.svgElement); // Mask animation

	    var defs = this.globalData.defs;
	    this.setupGlobalData(animData, defs);
	    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
	    this.data = animData;
	    var maskElement = createNS('clipPath');
	    var rect = createNS('rect');
	    rect.setAttribute('width', animData.w);
	    rect.setAttribute('height', animData.h);
	    rect.setAttribute('x', 0);
	    rect.setAttribute('y', 0);
	    var maskId = createElementID();
	    maskElement.setAttribute('id', maskId);
	    maskElement.appendChild(rect);
	    this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + maskId + ')');
	    defs.appendChild(maskElement);
	    this.layers = animData.layers;
	    this.elements = createSizedArray(animData.layers.length);
	  };

	  SVGRendererBase.prototype.destroy = function () {
	    if (this.animationItem.wrapper) {
	      this.animationItem.wrapper.innerText = '';
	    }

	    this.layerElement = null;
	    this.globalData.defs = null;
	    var i;
	    var len = this.layers ? this.layers.length : 0;

	    for (i = 0; i < len; i += 1) {
	      if (this.elements[i] && this.elements[i].destroy) {
	        this.elements[i].destroy();
	      }
	    }

	    this.elements.length = 0;
	    this.destroyed = true;
	    this.animationItem = null;
	  };

	  SVGRendererBase.prototype.updateContainerSize = function () {};

	  SVGRendererBase.prototype.findIndexByInd = function (ind) {
	    var i = 0;
	    var len = this.layers.length;

	    for (i = 0; i < len; i += 1) {
	      if (this.layers[i].ind === ind) {
	        return i;
	      }
	    }

	    return -1;
	  };

	  SVGRendererBase.prototype.buildItem = function (pos) {
	    var elements = this.elements;

	    if (elements[pos] || this.layers[pos].ty === 99) {
	      return;
	    }

	    elements[pos] = true;
	    var element = this.createItem(this.layers[pos]);
	    elements[pos] = element;

	    if (getExpressionsPlugin()) {
	      if (this.layers[pos].ty === 0) {
	        this.globalData.projectInterface.registerComposition(element);
	      }

	      element.initExpressions();
	    }

	    this.appendElementInPos(element, pos);

	    if (this.layers[pos].tt) {
	      var elementIndex = 'tp' in this.layers[pos] ? this.findIndexByInd(this.layers[pos].tp) : pos - 1;

	      if (elementIndex === -1) {
	        return;
	      }

	      if (!this.elements[elementIndex] || this.elements[elementIndex] === true) {
	        this.buildItem(elementIndex);
	        this.addPendingElement(element);
	      } else {
	        var matteElement = elements[elementIndex];
	        var matteMask = matteElement.getMatte(this.layers[pos].tt);
	        element.setMatte(matteMask);
	      }
	    }
	  };

	  SVGRendererBase.prototype.checkPendingElements = function () {
	    while (this.pendingElements.length) {
	      var element = this.pendingElements.pop();
	      element.checkParenting();

	      if (element.data.tt) {
	        var i = 0;
	        var len = this.elements.length;

	        while (i < len) {
	          if (this.elements[i] === element) {
	            var elementIndex = 'tp' in element.data ? this.findIndexByInd(element.data.tp) : i - 1;
	            var matteElement = this.elements[elementIndex];
	            var matteMask = matteElement.getMatte(this.layers[i].tt);
	            element.setMatte(matteMask);
	            break;
	          }

	          i += 1;
	        }
	      }
	    }
	  };

	  SVGRendererBase.prototype.renderFrame = function (num) {
	    if (this.renderedFrame === num || this.destroyed) {
	      return;
	    }

	    if (num === null) {
	      num = this.renderedFrame;
	    } else {
	      this.renderedFrame = num;
	    } // console.log('-------');
	    // console.log('FRAME ',num);


	    this.globalData.frameNum = num;
	    this.globalData.frameId += 1;
	    this.globalData.projectInterface.currentFrame = num;
	    this.globalData._mdf = false;
	    var i;
	    var len = this.layers.length;

	    if (!this.completeLayers) {
	      this.checkLayers(num);
	    }

	    for (i = len - 1; i >= 0; i -= 1) {
	      if (this.completeLayers || this.elements[i]) {
	        this.elements[i].prepareFrame(num - this.layers[i].st);
	      }
	    }

	    if (this.globalData._mdf) {
	      for (i = 0; i < len; i += 1) {
	        if (this.completeLayers || this.elements[i]) {
	          this.elements[i].renderFrame();
	        }
	      }
	    }
	  };

	  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {
	    var newElement = element.getBaseElement();

	    if (!newElement) {
	      return;
	    }

	    var i = 0;
	    var nextElement;

	    while (i < pos) {
	      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {
	        nextElement = this.elements[i].getBaseElement();
	      }

	      i += 1;
	    }

	    if (nextElement) {
	      this.layerElement.insertBefore(newElement, nextElement);
	    } else {
	      this.layerElement.appendChild(newElement);
	    }
	  };

	  SVGRendererBase.prototype.hide = function () {
	    this.layerElement.style.display = 'none';
	  };

	  SVGRendererBase.prototype.show = function () {
	    this.layerElement.style.display = 'block';
	  };

	  function ICompElement() {}

	  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);

	  ICompElement.prototype.initElement = function (data, globalData, comp) {
	    this.initFrame();
	    this.initBaseData(data, globalData, comp);
	    this.initTransform(data, globalData, comp);
	    this.initRenderable();
	    this.initHierarchy();
	    this.initRendererElement();
	    this.createContainerElements();
	    this.createRenderableComponents();

	    if (this.data.xt || !globalData.progressiveLoad) {
	      this.buildAllItems();
	    }

	    this.hide();
	  };
	  /* ICompElement.prototype.hide = function(){
	      if(!this.hidden){
	          this.hideElement();
	          var i,len = this.elements.length;
	          for( i = 0; i < len; i+=1 ){
	              if(this.elements[i]){
	                  this.elements[i].hide();
	              }
	          }
	      }
	  }; */


	  ICompElement.prototype.prepareFrame = function (num) {
	    this._mdf = false;
	    this.prepareRenderableFrame(num);
	    this.prepareProperties(num, this.isInRange);

	    if (!this.isInRange && !this.data.xt) {
	      return;
	    }

	    if (!this.tm._placeholder) {
	      var timeRemapped = this.tm.v;

	      if (timeRemapped === this.data.op) {
	        timeRemapped = this.data.op - 1;
	      }

	      this.renderedFrame = timeRemapped;
	    } else {
	      this.renderedFrame = num / this.data.sr;
	    }

	    var i;
	    var len = this.elements.length;

	    if (!this.completeLayers) {
	      this.checkLayers(this.renderedFrame);
	    } // This iteration needs to be backwards because of how expressions connect between each other


	    for (i = len - 1; i >= 0; i -= 1) {
	      if (this.completeLayers || this.elements[i]) {
	        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);

	        if (this.elements[i]._mdf) {
	          this._mdf = true;
	        }
	      }
	    }
	  };

	  ICompElement.prototype.renderInnerContent = function () {
	    var i;
	    var len = this.layers.length;

	    for (i = 0; i < len; i += 1) {
	      if (this.completeLayers || this.elements[i]) {
	        this.elements[i].renderFrame();
	      }
	    }
	  };

	  ICompElement.prototype.setElements = function (elems) {
	    this.elements = elems;
	  };

	  ICompElement.prototype.getElements = function () {
	    return this.elements;
	  };

	  ICompElement.prototype.destroyElements = function () {
	    var i;
	    var len = this.layers.length;

	    for (i = 0; i < len; i += 1) {
	      if (this.elements[i]) {
	        this.elements[i].destroy();
	      }
	    }
	  };

	  ICompElement.prototype.destroy = function () {
	    this.destroyElements();
	    this.destroyBaseElement();
	  };

	  function SVGCompElement(data, globalData, comp) {
	    this.layers = data.layers;
	    this.supports3d = true;
	    this.completeLayers = false;
	    this.pendingElements = [];
	    this.elements = this.layers ? createSizedArray(this.layers.length) : [];
	    this.initElement(data, globalData, comp);
	    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {
	      _placeholder: true
	    };
	  }

	  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);

	  SVGCompElement.prototype.createComp = function (data) {
	    return new SVGCompElement(data, this.globalData, this);
	  };

	  function SVGRenderer(animationItem, config) {
	    this.animationItem = animationItem;
	    this.layers = null;
	    this.renderedFrame = -1;
	    this.svgElement = createNS('svg');
	    var ariaLabel = '';

	    if (config && config.title) {
	      var titleElement = createNS('title');
	      var titleId = createElementID();
	      titleElement.setAttribute('id', titleId);
	      titleElement.textContent = config.title;
	      this.svgElement.appendChild(titleElement);
	      ariaLabel += titleId;
	    }

	    if (config && config.description) {
	      var descElement = createNS('desc');
	      var descId = createElementID();
	      descElement.setAttribute('id', descId);
	      descElement.textContent = config.description;
	      this.svgElement.appendChild(descElement);
	      ariaLabel += ' ' + descId;
	    }

	    if (ariaLabel) {
	      this.svgElement.setAttribute('aria-labelledby', ariaLabel);
	    }

	    var defs = createNS('defs');
	    this.svgElement.appendChild(defs);
	    var maskElement = createNS('g');
	    this.svgElement.appendChild(maskElement);
	    this.layerElement = maskElement;
	    this.renderConfig = {
	      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',
	      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',
	      contentVisibility: config && config.contentVisibility || 'visible',
	      progressiveLoad: config && config.progressiveLoad || false,
	      hideOnTransparent: !(config && config.hideOnTransparent === false),
	      viewBoxOnly: config && config.viewBoxOnly || false,
	      viewBoxSize: config && config.viewBoxSize || false,
	      className: config && config.className || '',
	      id: config && config.id || '',
	      focusable: config && config.focusable,
	      filterSize: {
	        width: config && config.filterSize && config.filterSize.width || '100%',
	        height: config && config.filterSize && config.filterSize.height || '100%',
	        x: config && config.filterSize && config.filterSize.x || '0%',
	        y: config && config.filterSize && config.filterSize.y || '0%'
	      },
	      width: config && config.width,
	      height: config && config.height,
	      runExpressions: !config || config.runExpressions === undefined || config.runExpressions
	    };
	    this.globalData = {
	      _mdf: false,
	      frameNum: -1,
	      defs: defs,
	      renderConfig: this.renderConfig
	    };
	    this.elements = [];
	    this.pendingElements = [];
	    this.destroyed = false;
	    this.rendererType = 'svg';
	  }

	  extendPrototype([SVGRendererBase], SVGRenderer);

	  SVGRenderer.prototype.createComp = function (data) {
	    return new SVGCompElement(data, this.globalData, this);
	  };

	  function ShapeTransformManager() {
	    this.sequences = {};
	    this.sequenceList = [];
	    this.transform_key_count = 0;
	  }

	  ShapeTransformManager.prototype = {
	    addTransformSequence: function addTransformSequence(transforms) {
	      var i;
	      var len = transforms.length;
	      var key = '_';

	      for (i = 0; i < len; i += 1) {
	        key += transforms[i].transform.key + '_';
	      }

	      var sequence = this.sequences[key];

	      if (!sequence) {
	        sequence = {
	          transforms: [].concat(transforms),
	          finalTransform: new Matrix(),
	          _mdf: false
	        };
	        this.sequences[key] = sequence;
	        this.sequenceList.push(sequence);
	      }

	      return sequence;
	    },
	    processSequence: function processSequence(sequence, isFirstFrame) {
	      var i = 0;
	      var len = sequence.transforms.length;
	      var _mdf = isFirstFrame;

	      while (i < len && !isFirstFrame) {
	        if (sequence.transforms[i].transform.mProps._mdf) {
	          _mdf = true;
	          break;
	        }

	        i += 1;
	      }

	      if (_mdf) {
	        sequence.finalTransform.reset();

	        for (i = len - 1; i >= 0; i -= 1) {
	          sequence.finalTransform.multiply(sequence.transforms[i].transform.mProps.v);
	        }
	      }

	      sequence._mdf = _mdf;
	    },
	    processSequences: function processSequences(isFirstFrame) {
	      var i;
	      var len = this.sequenceList.length;

	      for (i = 0; i < len; i += 1) {
	        this.processSequence(this.sequenceList[i], isFirstFrame);
	      }
	    },
	    getNewKey: function getNewKey() {
	      this.transform_key_count += 1;
	      return '_' + this.transform_key_count;
	    }
	  };

	  var lumaLoader = function lumaLoader() {
	    var id = '__lottie_element_luma_buffer';
	    var lumaBuffer = null;
	    var lumaBufferCtx = null;
	    var svg = null; // This alternate solution has a slight delay before the filter is applied, resulting in a flicker on the first frame.
	    // Keeping this here for reference, and in the future, if offscreen canvas supports url filters, this can be used.
	    // For now, neither of them work for offscreen canvas, so canvas workers can't support the luma track matte mask.
	    // Naming it solution 2 to mark the extra comment lines.

	    /*
	    var svgString = [
	      '<svg xmlns="http://www.w3.org/2000/svg">',
	      '<filter id="' + id + '">',
	      '<feColorMatrix type="matrix" color-interpolation-filters="sRGB" values="',
	      '0.3, 0.3, 0.3, 0, 0, ',
	      '0.3, 0.3, 0.3, 0, 0, ',
	      '0.3, 0.3, 0.3, 0, 0, ',
	      '0.3, 0.3, 0.3, 0, 0',
	      '"/>',
	      '</filter>',
	      '</svg>',
	    ].join('');
	    var blob = new Blob([svgString], { type: 'image/svg+xml' });
	    var url = URL.createObjectURL(blob);
	    */

	    function createLumaSvgFilter() {
	      var _svg = createNS('svg');

	      var fil = createNS('filter');
	      var matrix = createNS('feColorMatrix');
	      fil.setAttribute('id', id);
	      matrix.setAttribute('type', 'matrix');
	      matrix.setAttribute('color-interpolation-filters', 'sRGB');
	      matrix.setAttribute('values', '0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0');
	      fil.appendChild(matrix);

	      _svg.appendChild(fil);

	      _svg.setAttribute('id', id + '_svg');

	      if (featureSupport.svgLumaHidden) {
	        _svg.style.display = 'none';
	      }

	      return _svg;
	    }

	    function loadLuma() {
	      if (!lumaBuffer) {
	        svg = createLumaSvgFilter();
	        document.body.appendChild(svg);
	        lumaBuffer = createTag('canvas');
	        lumaBufferCtx = lumaBuffer.getContext('2d'); // lumaBufferCtx.filter = `url('${url}#__lottie_element_luma_buffer')`; // part of solution 2

	        lumaBufferCtx.filter = 'url(#' + id + ')';
	        lumaBufferCtx.fillStyle = 'rgba(0,0,0,0)';
	        lumaBufferCtx.fillRect(0, 0, 1, 1);
	      }
	    }

	    function getLuma(canvas) {
	      if (!lumaBuffer) {
	        loadLuma();
	      }

	      lumaBuffer.width = canvas.width;
	      lumaBuffer.height = canvas.height; // lumaBufferCtx.filter = `url('${url}#__lottie_element_luma_buffer')`; // part of solution 2

	      lumaBufferCtx.filter = 'url(#' + id + ')';
	      return lumaBuffer;
	    }

	    return {
	      load: loadLuma,
	      get: getLuma
	    };
	  };

	  function createCanvas(width, height) {
	    if (featureSupport.offscreenCanvas) {
	      return new OffscreenCanvas(width, height);
	    }

	    var canvas = createTag('canvas');
	    canvas.width = width;
	    canvas.height = height;
	    return canvas;
	  }

	  var assetLoader = function () {
	    return {
	      loadLumaCanvas: lumaLoader.load,
	      getLumaCanvas: lumaLoader.get,
	      createCanvas: createCanvas
	    };
	  }();

	  var registeredEffects = {};

	  function CVEffects(elem) {
	    var i;
	    var len = elem.data.ef ? elem.data.ef.length : 0;
	    this.filters = [];
	    var filterManager;

	    for (i = 0; i < len; i += 1) {
	      filterManager = null;
	      var type = elem.data.ef[i].ty;

	      if (registeredEffects[type]) {
	        var Effect = registeredEffects[type].effect;
	        filterManager = new Effect(elem.effectsManager.effectElements[i], elem);
	      }

	      if (filterManager) {
	        this.filters.push(filterManager);
	      }
	    }

	    if (this.filters.length) {
	      elem.addRenderableComponent(this);
	    }
	  }

	  CVEffects.prototype.renderFrame = function (_isFirstFrame) {
	    var i;
	    var len = this.filters.length;

	    for (i = 0; i < len; i += 1) {
	      this.filters[i].renderFrame(_isFirstFrame);
	    }
	  };

	  CVEffects.prototype.getEffects = function (type) {
	    var i;
	    var len = this.filters.length;
	    var effects = [];

	    for (i = 0; i < len; i += 1) {
	      if (this.filters[i].type === type) {
	        effects.push(this.filters[i]);
	      }
	    }

	    return effects;
	  };

	  function registerEffect(id, effect) {
	    registeredEffects[id] = {
	      effect: effect
	    };
	  }

	  function CVMaskElement(data, element) {
	    this.data = data;
	    this.element = element;
	    this.masksProperties = this.data.masksProperties || [];
	    this.viewData = createSizedArray(this.masksProperties.length);
	    var i;
	    var len = this.masksProperties.length;
	    var hasMasks = false;

	    for (i = 0; i < len; i += 1) {
	      if (this.masksProperties[i].mode !== 'n') {
	        hasMasks = true;
	      }

	      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);
	    }

	    this.hasMasks = hasMasks;

	    if (hasMasks) {
	      this.element.addRenderableComponent(this);
	    }
	  }

	  CVMaskElement.prototype.renderFrame = function () {
	    if (!this.hasMasks) {
	      return;
	    }

	    var transform = this.element.finalTransform.mat;
	    var ctx = this.element.canvasContext;
	    var i;
	    var len = this.masksProperties.length;
	    var pt;
	    var pts;
	    var data;
	    ctx.beginPath();

	    for (i = 0; i < len; i += 1) {
	      if (this.masksProperties[i].mode !== 'n') {
	        if (this.masksProperties[i].inv) {
	          ctx.moveTo(0, 0);
	          ctx.lineTo(this.element.globalData.compSize.w, 0);
	          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);
	          ctx.lineTo(0, this.element.globalData.compSize.h);
	          ctx.lineTo(0, 0);
	        }

	        data = this.viewData[i].v;
	        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);
	        ctx.moveTo(pt[0], pt[1]);
	        var j;
	        var jLen = data._length;

	        for (j = 1; j < jLen; j += 1) {
	          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);
	          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
	        }

	        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);
	        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
	      }
	    }

	    this.element.globalData.renderer.save(true);
	    ctx.clip();
	  };

	  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;

	  CVMaskElement.prototype.destroy = function () {
	    this.element = null;
	  };

	  function CVBaseElement() {}

	  var operationsMap = {
	    1: 'source-in',
	    2: 'source-out',
	    3: 'source-in',
	    4: 'source-out'
	  };
	  CVBaseElement.prototype = {
	    createElements: function createElements() {},
	    initRendererElement: function initRendererElement() {},
	    createContainerElements: function createContainerElements() {
	      // If the layer is masked we will use two buffers to store each different states of the drawing
	      // This solution is not ideal for several reason. But unfortunately, because of the recursive
	      // nature of the render tree, it's the only simple way to make sure one inner mask doesn't override an outer mask.
	      // TODO: try to reduce the size of these buffers to the size of the composition contaning the layer
	      // It might be challenging because the layer most likely is transformed in some way
	      if (this.data.tt >= 1) {
	        this.buffers = [];
	        var canvasContext = this.globalData.canvasContext;
	        var bufferCanvas = assetLoader.createCanvas(canvasContext.canvas.width, canvasContext.canvas.height);
	        this.buffers.push(bufferCanvas);
	        var bufferCanvas2 = assetLoader.createCanvas(canvasContext.canvas.width, canvasContext.canvas.height);
	        this.buffers.push(bufferCanvas2);

	        if (this.data.tt >= 3 && !document._isProxy) {
	          assetLoader.loadLumaCanvas();
	        }
	      }

	      this.canvasContext = this.globalData.canvasContext;
	      this.transformCanvas = this.globalData.transformCanvas;
	      this.renderableEffectsManager = new CVEffects(this);
	      this.searchEffectTransforms();
	    },
	    createContent: function createContent() {},
	    setBlendMode: function setBlendMode() {
	      var globalData = this.globalData;

	      if (globalData.blendMode !== this.data.bm) {
	        globalData.blendMode = this.data.bm;
	        var blendModeValue = getBlendMode(this.data.bm);
	        globalData.canvasContext.globalCompositeOperation = blendModeValue;
	      }
	    },
	    createRenderableComponents: function createRenderableComponents() {
	      this.maskManager = new CVMaskElement(this.data, this);
	      this.transformEffects = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);
	    },
	    hideElement: function hideElement() {
	      if (!this.hidden && (!this.isInRange || this.isTransparent)) {
	        this.hidden = true;
	      }
	    },
	    showElement: function showElement() {
	      if (this.isInRange && !this.isTransparent) {
	        this.hidden = false;
	        this._isFirstFrame = true;
	        this.maskManager._isFirstFrame = true;
	      }
	    },
	    clearCanvas: function clearCanvas(canvasContext) {
	      canvasContext.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy);
	    },
	    prepareLayer: function prepareLayer() {
	      if (this.data.tt >= 1) {
	        var buffer = this.buffers[0];
	        var bufferCtx = buffer.getContext('2d');
	        this.clearCanvas(bufferCtx); // on the first buffer we store the current state of the global drawing

	        bufferCtx.drawImage(this.canvasContext.canvas, 0, 0); // The next four lines are to clear the canvas
	        // TODO: Check if there is a way to clear the canvas without resetting the transform

	        this.currentTransform = this.canvasContext.getTransform();
	        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);
	        this.clearCanvas(this.canvasContext);
	        this.canvasContext.setTransform(this.currentTransform);
	      }
	    },
	    exitLayer: function exitLayer() {
	      if (this.data.tt >= 1) {
	        var buffer = this.buffers[1]; // On the second buffer we store the current state of the global drawing
	        // that only contains the content of this layer
	        // (if it is a composition, it also includes the nested layers)

	        var bufferCtx = buffer.getContext('2d');
	        this.clearCanvas(bufferCtx);
	        bufferCtx.drawImage(this.canvasContext.canvas, 0, 0); // We clear the canvas again

	        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);
	        this.clearCanvas(this.canvasContext);
	        this.canvasContext.setTransform(this.currentTransform); // We draw the mask

	        var mask = this.comp.getElementById('tp' in this.data ? this.data.tp : this.data.ind - 1);
	        mask.renderFrame(true); // We draw the second buffer (that contains the content of this layer)

	        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0); // If the mask is a Luma matte, we need to do two extra painting operations
	        // the _isProxy check is to avoid drawing a fake canvas in workers that will throw an error

	        if (this.data.tt >= 3 && !document._isProxy) {
	          // We copy the painted mask to a buffer that has a color matrix filter applied to it
	          // that applies the rgb values to the alpha channel
	          var lumaBuffer = assetLoader.getLumaCanvas(this.canvasContext.canvas);
	          var lumaBufferCtx = lumaBuffer.getContext('2d');
	          lumaBufferCtx.drawImage(this.canvasContext.canvas, 0, 0);
	          this.clearCanvas(this.canvasContext); // we repaint the context with the mask applied to it

	          this.canvasContext.drawImage(lumaBuffer, 0, 0);
	        }

	        this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt];
	        this.canvasContext.drawImage(buffer, 0, 0); // We finally draw the first buffer (that contains the content of the global drawing)
	        // We use destination-over to draw the global drawing below the current layer

	        this.canvasContext.globalCompositeOperation = 'destination-over';
	        this.canvasContext.drawImage(this.buffers[0], 0, 0);
	        this.canvasContext.setTransform(this.currentTransform); // We reset the globalCompositeOperation to source-over, the standard type of operation

	        this.canvasContext.globalCompositeOperation = 'source-over';
	      }
	    },
	    renderFrame: function renderFrame(forceRender) {
	      if (this.hidden || this.data.hd) {
	        return;
	      }

	      if (this.data.td === 1 && !forceRender) {
	        return;
	      }

	      this.renderTransform();
	      this.renderRenderable();
	      this.renderLocalTransform();
	      this.setBlendMode();
	      var forceRealStack = this.data.ty === 0;
	      this.prepareLayer();
	      this.globalData.renderer.save(forceRealStack);
	      this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props);
	      this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity);
	      this.renderInnerContent();
	      this.globalData.renderer.restore(forceRealStack);
	      this.exitLayer();

	      if (this.maskManager.hasMasks) {
	        this.globalData.renderer.restore(true);
	      }

	      if (this._isFirstFrame) {
	        this._isFirstFrame = false;
	      }
	    },
	    destroy: function destroy() {
	      this.canvasContext = null;
	      this.data = null;
	      this.globalData = null;
	      this.maskManager.destroy();
	    },
	    mHelper: new Matrix()
	  };
	  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;
	  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;

	  function CVShapeData(element, data, styles, transformsManager) {
	    this.styledShapes = [];
	    this.tr = [0, 0, 0, 0, 0, 0];
	    var ty = 4;

	    if (data.ty === 'rc') {
	      ty = 5;
	    } else if (data.ty === 'el') {
	      ty = 6;
	    } else if (data.ty === 'sr') {
	      ty = 7;
	    }

	    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);
	    var i;
	    var len = styles.length;
	    var styledShape;

	    for (i = 0; i < len; i += 1) {
	      if (!styles[i].closed) {
	        styledShape = {
	          transforms: transformsManager.addTransformSequence(styles[i].transforms),
	          trNodes: []
	        };
	        this.styledShapes.push(styledShape);
	        styles[i].elements.push(styledShape);
	      }
	    }
	  }

	  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;

	  function CVShapeElement(data, globalData, comp) {
	    this.shapes = [];
	    this.shapesData = data.shapes;
	    this.stylesList = [];
	    this.itemsData = [];
	    this.prevViewData = [];
	    this.shapeModifiers = [];
	    this.processedElements = [];
	    this.transformsManager = new ShapeTransformManager();
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);
	  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;
	  CVShapeElement.prototype.transformHelper = {
	    opacity: 1,
	    _opMdf: false
	  };
	  CVShapeElement.prototype.dashResetter = [];

	  CVShapeElement.prototype.createContent = function () {
	    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);
	  };

	  CVShapeElement.prototype.createStyleElement = function (data, transforms) {
	    var styleElem = {
	      data: data,
	      type: data.ty,
	      preTransforms: this.transformsManager.addTransformSequence(transforms),
	      transforms: [],
	      elements: [],
	      closed: data.hd === true
	    };
	    var elementData = {};

	    if (data.ty === 'fl' || data.ty === 'st') {
	      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);

	      if (!elementData.c.k) {
	        styleElem.co = 'rgb(' + bmFloor(elementData.c.v[0]) + ',' + bmFloor(elementData.c.v[1]) + ',' + bmFloor(elementData.c.v[2]) + ')';
	      }
	    } else if (data.ty === 'gf' || data.ty === 'gs') {
	      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);
	      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);
	      elementData.h = PropertyFactory.getProp(this, data.h || {
	        k: 0
	      }, 0, 0.01, this);
	      elementData.a = PropertyFactory.getProp(this, data.a || {
	        k: 0
	      }, 0, degToRads, this);
	      elementData.g = new GradientProperty(this, data.g, this);
	    }

	    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);

	    if (data.ty === 'st' || data.ty === 'gs') {
	      styleElem.lc = lineCapEnum[data.lc || 2];
	      styleElem.lj = lineJoinEnum[data.lj || 2];

	      if (data.lj == 1) {
	        // eslint-disable-line eqeqeq
	        styleElem.ml = data.ml;
	      }

	      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);

	      if (!elementData.w.k) {
	        styleElem.wi = elementData.w.v;
	      }

	      if (data.d) {
	        var d = new DashProperty(this, data.d, 'canvas', this);
	        elementData.d = d;

	        if (!elementData.d.k) {
	          styleElem.da = elementData.d.dashArray;
	          styleElem["do"] = elementData.d.dashoffset[0];
	        }
	      }
	    } else {
	      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';
	    }

	    this.stylesList.push(styleElem);
	    elementData.style = styleElem;
	    return elementData;
	  };

	  CVShapeElement.prototype.createGroupElement = function () {
	    var elementData = {
	      it: [],
	      prevViewData: []
	    };
	    return elementData;
	  };

	  CVShapeElement.prototype.createTransformElement = function (data) {
	    var elementData = {
	      transform: {
	        opacity: 1,
	        _opMdf: false,
	        key: this.transformsManager.getNewKey(),
	        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),
	        mProps: TransformPropertyFactory.getTransformProperty(this, data, this)
	      }
	    };
	    return elementData;
	  };

	  CVShapeElement.prototype.createShapeElement = function (data) {
	    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);
	    this.shapes.push(elementData);
	    this.addShapeToModifiers(elementData);
	    return elementData;
	  };

	  CVShapeElement.prototype.reloadShapes = function () {
	    this._isFirstFrame = true;
	    var i;
	    var len = this.itemsData.length;

	    for (i = 0; i < len; i += 1) {
	      this.prevViewData[i] = this.itemsData[i];
	    }

	    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);
	    len = this.dynamicProperties.length;

	    for (i = 0; i < len; i += 1) {
	      this.dynamicProperties[i].getValue();
	    }

	    this.renderModifiers();
	    this.transformsManager.processSequences(this._isFirstFrame);
	  };

	  CVShapeElement.prototype.addTransformToStyleList = function (transform) {
	    var i;
	    var len = this.stylesList.length;

	    for (i = 0; i < len; i += 1) {
	      if (!this.stylesList[i].closed) {
	        this.stylesList[i].transforms.push(transform);
	      }
	    }
	  };

	  CVShapeElement.prototype.removeTransformFromStyleList = function () {
	    var i;
	    var len = this.stylesList.length;

	    for (i = 0; i < len; i += 1) {
	      if (!this.stylesList[i].closed) {
	        this.stylesList[i].transforms.pop();
	      }
	    }
	  };

	  CVShapeElement.prototype.closeStyles = function (styles) {
	    var i;
	    var len = styles.length;

	    for (i = 0; i < len; i += 1) {
	      styles[i].closed = true;
	    }
	  };

	  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {
	    var i;
	    var len = arr.length - 1;
	    var j;
	    var jLen;
	    var ownStyles = [];
	    var ownModifiers = [];
	    var processedPos;
	    var modifier;
	    var currentTransform;
	    var ownTransforms = [].concat(transforms);

	    for (i = len; i >= 0; i -= 1) {
	      processedPos = this.searchProcessedElement(arr[i]);

	      if (!processedPos) {
	        arr[i]._shouldRender = shouldRender;
	      } else {
	        itemsData[i] = prevViewData[processedPos - 1];
	      }

	      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {
	        if (!processedPos) {
	          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);
	        } else {
	          itemsData[i].style.closed = false;
	        }

	        ownStyles.push(itemsData[i].style);
	      } else if (arr[i].ty === 'gr') {
	        if (!processedPos) {
	          itemsData[i] = this.createGroupElement(arr[i]);
	        } else {
	          jLen = itemsData[i].it.length;

	          for (j = 0; j < jLen; j += 1) {
	            itemsData[i].prevViewData[j] = itemsData[i].it[j];
	          }
	        }

	        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);
	      } else if (arr[i].ty === 'tr') {
	        if (!processedPos) {
	          currentTransform = this.createTransformElement(arr[i]);
	          itemsData[i] = currentTransform;
	        }

	        ownTransforms.push(itemsData[i]);
	        this.addTransformToStyleList(itemsData[i]);
	      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {
	        if (!processedPos) {
	          itemsData[i] = this.createShapeElement(arr[i]);
	        }
	      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb' || arr[i].ty === 'zz' || arr[i].ty === 'op') {
	        if (!processedPos) {
	          modifier = ShapeModifiers.getModifier(arr[i].ty);
	          modifier.init(this, arr[i]);
	          itemsData[i] = modifier;
	          this.shapeModifiers.push(modifier);
	        } else {
	          modifier = itemsData[i];
	          modifier.closed = false;
	        }

	        ownModifiers.push(modifier);
	      } else if (arr[i].ty === 'rp') {
	        if (!processedPos) {
	          modifier = ShapeModifiers.getModifier(arr[i].ty);
	          itemsData[i] = modifier;
	          modifier.init(this, arr, i, itemsData);
	          this.shapeModifiers.push(modifier);
	          shouldRender = false;
	        } else {
	          modifier = itemsData[i];
	          modifier.closed = true;
	        }

	        ownModifiers.push(modifier);
	      }

	      this.addProcessedElement(arr[i], i + 1);
	    }

	    this.removeTransformFromStyleList();
	    this.closeStyles(ownStyles);
	    len = ownModifiers.length;

	    for (i = 0; i < len; i += 1) {
	      ownModifiers[i].closed = true;
	    }
	  };

	  CVShapeElement.prototype.renderInnerContent = function () {
	    this.transformHelper.opacity = 1;
	    this.transformHelper._opMdf = false;
	    this.renderModifiers();
	    this.transformsManager.processSequences(this._isFirstFrame);
	    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);
	  };

	  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {
	    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {
	      groupTransform.opacity = parentTransform.opacity;
	      groupTransform.opacity *= groupTransform.op.v;
	      groupTransform._opMdf = true;
	    }
	  };

	  CVShapeElement.prototype.drawLayer = function () {
	    var i;
	    var len = this.stylesList.length;
	    var j;
	    var jLen;
	    var k;
	    var kLen;
	    var elems;
	    var nodes;
	    var renderer = this.globalData.renderer;
	    var ctx = this.globalData.canvasContext;
	    var type;
	    var currentStyle;

	    for (i = 0; i < len; i += 1) {
	      currentStyle = this.stylesList[i];
	      type = currentStyle.type; // Skipping style when
	      // Stroke width equals 0
	      // style should not be rendered (extra unused repeaters)
	      // current opacity equals 0
	      // global opacity equals 0

	      if (!((type === 'st' || type === 'gs') && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {
	        renderer.save();
	        elems = currentStyle.elements;

	        if (type === 'st' || type === 'gs') {
	          renderer.ctxStrokeStyle(type === 'st' ? currentStyle.co : currentStyle.grd); // ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;

	          renderer.ctxLineWidth(currentStyle.wi); // ctx.lineWidth = currentStyle.wi;

	          renderer.ctxLineCap(currentStyle.lc); // ctx.lineCap = currentStyle.lc;

	          renderer.ctxLineJoin(currentStyle.lj); // ctx.lineJoin = currentStyle.lj;

	          renderer.ctxMiterLimit(currentStyle.ml || 0); // ctx.miterLimit = currentStyle.ml || 0;
	        } else {
	          renderer.ctxFillStyle(type === 'fl' ? currentStyle.co : currentStyle.grd); // ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;
	        }

	        renderer.ctxOpacity(currentStyle.coOp);

	        if (type !== 'st' && type !== 'gs') {
	          ctx.beginPath();
	        }

	        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);
	        jLen = elems.length;

	        for (j = 0; j < jLen; j += 1) {
	          if (type === 'st' || type === 'gs') {
	            ctx.beginPath();

	            if (currentStyle.da) {
	              ctx.setLineDash(currentStyle.da);
	              ctx.lineDashOffset = currentStyle["do"];
	            }
	          }

	          nodes = elems[j].trNodes;
	          kLen = nodes.length;

	          for (k = 0; k < kLen; k += 1) {
	            if (nodes[k].t === 'm') {
	              ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);
	            } else if (nodes[k].t === 'c') {
	              ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);
	            } else {
	              ctx.closePath();
	            }
	          }

	          if (type === 'st' || type === 'gs') {
	            // ctx.stroke();
	            renderer.ctxStroke();

	            if (currentStyle.da) {
	              ctx.setLineDash(this.dashResetter);
	            }
	          }
	        }

	        if (type !== 'st' && type !== 'gs') {
	          // ctx.fill(currentStyle.r);
	          this.globalData.renderer.ctxFill(currentStyle.r);
	        }

	        renderer.restore();
	      }
	    }
	  };

	  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {
	    var i;
	    var len = items.length - 1;
	    var groupTransform;
	    groupTransform = parentTransform;

	    for (i = len; i >= 0; i -= 1) {
	      if (items[i].ty === 'tr') {
	        groupTransform = data[i].transform;
	        this.renderShapeTransform(parentTransform, groupTransform);
	      } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {
	        this.renderPath(items[i], data[i]);
	      } else if (items[i].ty === 'fl') {
	        this.renderFill(items[i], data[i], groupTransform);
	      } else if (items[i].ty === 'st') {
	        this.renderStroke(items[i], data[i], groupTransform);
	      } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {
	        this.renderGradientFill(items[i], data[i], groupTransform);
	      } else if (items[i].ty === 'gr') {
	        this.renderShape(groupTransform, items[i].it, data[i].it);
	      } else if (items[i].ty === 'tm') ;
	    }

	    if (isMain) {
	      this.drawLayer();
	    }
	  };

	  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {
	    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {
	      var shapeNodes = styledShape.trNodes;
	      var paths = shape.paths;
	      var i;
	      var len;
	      var j;
	      var jLen = paths._length;
	      shapeNodes.length = 0;
	      var groupTransformMat = styledShape.transforms.finalTransform;

	      for (j = 0; j < jLen; j += 1) {
	        var pathNodes = paths.shapes[j];

	        if (pathNodes && pathNodes.v) {
	          len = pathNodes._length;

	          for (i = 1; i < len; i += 1) {
	            if (i === 1) {
	              shapeNodes.push({
	                t: 'm',
	                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
	              });
	            }

	            shapeNodes.push({
	              t: 'c',
	              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])
	            });
	          }

	          if (len === 1) {
	            shapeNodes.push({
	              t: 'm',
	              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
	            });
	          }

	          if (pathNodes.c && len) {
	            shapeNodes.push({
	              t: 'c',
	              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])
	            });
	            shapeNodes.push({
	              t: 'z'
	            });
	          }
	        }
	      }

	      styledShape.trNodes = shapeNodes;
	    }
	  };

	  CVShapeElement.prototype.renderPath = function (pathData, itemData) {
	    if (pathData.hd !== true && pathData._shouldRender) {
	      var i;
	      var len = itemData.styledShapes.length;

	      for (i = 0; i < len; i += 1) {
	        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);
	      }
	    }
	  };

	  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {
	    var styleElem = itemData.style;

	    if (itemData.c._mdf || this._isFirstFrame) {
	      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';
	    }

	    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {
	      styleElem.coOp = itemData.o.v * groupTransform.opacity;
	    }
	  };

	  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {
	    var styleElem = itemData.style;
	    var grd;

	    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {
	      var ctx = this.globalData.canvasContext;
	      var pt1 = itemData.s.v;
	      var pt2 = itemData.e.v;

	      if (styleData.t === 1) {
	        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);
	      } else {
	        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
	        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);
	        var percent = itemData.h.v;

	        if (percent >= 1) {
	          percent = 0.99;
	        } else if (percent <= -1) {
	          percent = -0.99;
	        }

	        var dist = rad * percent;
	        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
	        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
	        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);
	      }

	      var i;
	      var len = styleData.g.p;
	      var cValues = itemData.g.c;
	      var opacity = 1;

	      for (i = 0; i < len; i += 1) {
	        if (itemData.g._hasOpacity && itemData.g._collapsable) {
	          opacity = itemData.g.o[i * 2 + 1];
	        }

	        grd.addColorStop(cValues[i * 4] / 100, 'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')');
	      }

	      styleElem.grd = grd;
	    }

	    styleElem.coOp = itemData.o.v * groupTransform.opacity;
	  };

	  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {
	    var styleElem = itemData.style;
	    var d = itemData.d;

	    if (d && (d._mdf || this._isFirstFrame)) {
	      styleElem.da = d.dashArray;
	      styleElem["do"] = d.dashoffset[0];
	    }

	    if (itemData.c._mdf || this._isFirstFrame) {
	      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';
	    }

	    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {
	      styleElem.coOp = itemData.o.v * groupTransform.opacity;
	    }

	    if (itemData.w._mdf || this._isFirstFrame) {
	      styleElem.wi = itemData.w.v;
	    }
	  };

	  CVShapeElement.prototype.destroy = function () {
	    this.shapesData = null;
	    this.globalData = null;
	    this.canvasContext = null;
	    this.stylesList.length = 0;
	    this.itemsData.length = 0;
	  };

	  function CVTextElement(data, globalData, comp) {
	    this.textSpans = [];
	    this.yOffset = 0;
	    this.fillColorAnim = false;
	    this.strokeColorAnim = false;
	    this.strokeWidthAnim = false;
	    this.stroke = false;
	    this.fill = false;
	    this.justifyOffset = 0;
	    this.currentRender = null;
	    this.renderType = 'canvas';
	    this.values = {
	      fill: 'rgba(0,0,0,0)',
	      stroke: 'rgba(0,0,0,0)',
	      sWidth: 0,
	      fValue: ''
	    };
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);
	  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');

	  CVTextElement.prototype.buildNewText = function () {
	    var documentData = this.textProperty.currentData;
	    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
	    var hasFill = false;

	    if (documentData.fc) {
	      hasFill = true;
	      this.values.fill = this.buildColor(documentData.fc);
	    } else {
	      this.values.fill = 'rgba(0,0,0,0)';
	    }

	    this.fill = hasFill;
	    var hasStroke = false;

	    if (documentData.sc) {
	      hasStroke = true;
	      this.values.stroke = this.buildColor(documentData.sc);
	      this.values.sWidth = documentData.sw;
	    }

	    var fontData = this.globalData.fontManager.getFontByName(documentData.f);
	    var i;
	    var len;
	    var letters = documentData.l;
	    var matrixHelper = this.mHelper;
	    this.stroke = hasStroke;
	    this.values.fValue = documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;
	    len = documentData.finalText.length; // this.tHelper.font = this.values.fValue;

	    var charData;
	    var shapeData;
	    var k;
	    var kLen;
	    var shapes;
	    var j;
	    var jLen;
	    var pathNodes;
	    var commands;
	    var pathArr;
	    var singleShape = this.data.singleShape;
	    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;
	    var xPos = 0;
	    var yPos = 0;
	    var firstLine = true;
	    var cnt = 0;

	    for (i = 0; i < len; i += 1) {
	      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
	      shapeData = charData && charData.data || {};
	      matrixHelper.reset();

	      if (singleShape && letters[i].n) {
	        xPos = -trackingOffset;
	        yPos += documentData.yOffset;
	        yPos += firstLine ? 1 : 0;
	        firstLine = false;
	      }

	      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
	      jLen = shapes.length;
	      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);

	      if (singleShape) {
	        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
	      }

	      commands = createSizedArray(jLen - 1);
	      var commandsCounter = 0;

	      for (j = 0; j < jLen; j += 1) {
	        if (shapes[j].ty === 'sh') {
	          kLen = shapes[j].ks.k.i.length;
	          pathNodes = shapes[j].ks.k;
	          pathArr = [];

	          for (k = 1; k < kLen; k += 1) {
	            if (k === 1) {
	              pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));
	            }

	            pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));
	          }

	          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));
	          commands[commandsCounter] = pathArr;
	          commandsCounter += 1;
	        }
	      }

	      if (singleShape) {
	        xPos += letters[i].l;
	        xPos += trackingOffset;
	      }

	      if (this.textSpans[cnt]) {
	        this.textSpans[cnt].elem = commands;
	      } else {
	        this.textSpans[cnt] = {
	          elem: commands
	        };
	      }

	      cnt += 1;
	    }
	  };

	  CVTextElement.prototype.renderInnerContent = function () {
	    this.validateText();
	    var ctx = this.canvasContext;
	    ctx.font = this.values.fValue;
	    this.globalData.renderer.ctxLineCap('butt'); // ctx.lineCap = 'butt';

	    this.globalData.renderer.ctxLineJoin('miter'); // ctx.lineJoin = 'miter';

	    this.globalData.renderer.ctxMiterLimit(4); // ctx.miterLimit = 4;

	    if (!this.data.singleShape) {
	      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
	    }

	    var i;
	    var len;
	    var j;
	    var jLen;
	    var k;
	    var kLen;
	    var renderedLetters = this.textAnimator.renderedLetters;
	    var letters = this.textProperty.currentData.l;
	    len = letters.length;
	    var renderedLetter;
	    var lastFill = null;
	    var lastStroke = null;
	    var lastStrokeW = null;
	    var commands;
	    var pathArr;
	    var renderer = this.globalData.renderer;

	    for (i = 0; i < len; i += 1) {
	      if (!letters[i].n) {
	        renderedLetter = renderedLetters[i];

	        if (renderedLetter) {
	          renderer.save();
	          renderer.ctxTransform(renderedLetter.p);
	          renderer.ctxOpacity(renderedLetter.o);
	        }

	        if (this.fill) {
	          if (renderedLetter && renderedLetter.fc) {
	            if (lastFill !== renderedLetter.fc) {
	              renderer.ctxFillStyle(renderedLetter.fc);
	              lastFill = renderedLetter.fc; // ctx.fillStyle = renderedLetter.fc;
	            }
	          } else if (lastFill !== this.values.fill) {
	            lastFill = this.values.fill;
	            renderer.ctxFillStyle(this.values.fill); // ctx.fillStyle = this.values.fill;
	          }

	          commands = this.textSpans[i].elem;
	          jLen = commands.length;
	          this.globalData.canvasContext.beginPath();

	          for (j = 0; j < jLen; j += 1) {
	            pathArr = commands[j];
	            kLen = pathArr.length;
	            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);

	            for (k = 2; k < kLen; k += 6) {
	              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);
	            }
	          }

	          this.globalData.canvasContext.closePath();
	          renderer.ctxFill(); // this.globalData.canvasContext.fill();
	          /// ctx.fillText(this.textSpans[i].val,0,0);
	        }

	        if (this.stroke) {
	          if (renderedLetter && renderedLetter.sw) {
	            if (lastStrokeW !== renderedLetter.sw) {
	              lastStrokeW = renderedLetter.sw;
	              renderer.ctxLineWidth(renderedLetter.sw); // ctx.lineWidth = renderedLetter.sw;
	            }
	          } else if (lastStrokeW !== this.values.sWidth) {
	            lastStrokeW = this.values.sWidth;
	            renderer.ctxLineWidth(this.values.sWidth); // ctx.lineWidth = this.values.sWidth;
	          }

	          if (renderedLetter && renderedLetter.sc) {
	            if (lastStroke !== renderedLetter.sc) {
	              lastStroke = renderedLetter.sc;
	              renderer.ctxStrokeStyle(renderedLetter.sc); // ctx.strokeStyle = renderedLetter.sc;
	            }
	          } else if (lastStroke !== this.values.stroke) {
	            lastStroke = this.values.stroke;
	            renderer.ctxStrokeStyle(this.values.stroke); // ctx.strokeStyle = this.values.stroke;
	          }

	          commands = this.textSpans[i].elem;
	          jLen = commands.length;
	          this.globalData.canvasContext.beginPath();

	          for (j = 0; j < jLen; j += 1) {
	            pathArr = commands[j];
	            kLen = pathArr.length;
	            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);

	            for (k = 2; k < kLen; k += 6) {
	              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);
	            }
	          }

	          this.globalData.canvasContext.closePath();
	          renderer.ctxStroke(); // this.globalData.canvasContext.stroke();
	          /// ctx.strokeText(letters[i].val,0,0);
	        }

	        if (renderedLetter) {
	          this.globalData.renderer.restore();
	        }
	      }
	    }
	  };

	  function CVImageElement(data, globalData, comp) {
	    this.assetData = globalData.getAssetData(data.refId);
	    this.img = globalData.imageLoader.getAsset(this.assetData);
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);
	  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;
	  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;

	  CVImageElement.prototype.createContent = function () {
	    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
	      var canvas = createTag('canvas');
	      canvas.width = this.assetData.w;
	      canvas.height = this.assetData.h;
	      var ctx = canvas.getContext('2d');
	      var imgW = this.img.width;
	      var imgH = this.img.height;
	      var imgRel = imgW / imgH;
	      var canvasRel = this.assetData.w / this.assetData.h;
	      var widthCrop;
	      var heightCrop;
	      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;

	      if (imgRel > canvasRel && par === 'xMidYMid slice' || imgRel < canvasRel && par !== 'xMidYMid slice') {
	        heightCrop = imgH;
	        widthCrop = heightCrop * canvasRel;
	      } else {
	        widthCrop = imgW;
	        heightCrop = widthCrop / canvasRel;
	      }

	      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);
	      this.img = canvas;
	    }
	  };

	  CVImageElement.prototype.renderInnerContent = function () {
	    this.canvasContext.drawImage(this.img, 0, 0);
	  };

	  CVImageElement.prototype.destroy = function () {
	    this.img = null;
	  };

	  function CVSolidElement(data, globalData, comp) {
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);
	  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;
	  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;

	  CVSolidElement.prototype.renderInnerContent = function () {
	    // var ctx = this.canvasContext;
	    this.globalData.renderer.ctxFillStyle(this.data.sc); // ctx.fillStyle = this.data.sc;

	    this.globalData.renderer.ctxFillRect(0, 0, this.data.sw, this.data.sh); // ctx.fillRect(0, 0, this.data.sw, this.data.sh);
	    //
	  };

	  function CanvasRendererBase() {}

	  extendPrototype([BaseRenderer], CanvasRendererBase);

	  CanvasRendererBase.prototype.createShape = function (data) {
	    return new CVShapeElement(data, this.globalData, this);
	  };

	  CanvasRendererBase.prototype.createText = function (data) {
	    return new CVTextElement(data, this.globalData, this);
	  };

	  CanvasRendererBase.prototype.createImage = function (data) {
	    return new CVImageElement(data, this.globalData, this);
	  };

	  CanvasRendererBase.prototype.createSolid = function (data) {
	    return new CVSolidElement(data, this.globalData, this);
	  };

	  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;

	  CanvasRendererBase.prototype.ctxTransform = function (props) {
	    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {
	      return;
	    }

	    this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);
	  };

	  CanvasRendererBase.prototype.ctxOpacity = function (op) {
	    this.canvasContext.globalAlpha *= op < 0 ? 0 : op;
	  };

	  CanvasRendererBase.prototype.ctxFillStyle = function (value) {
	    this.canvasContext.fillStyle = value;
	  };

	  CanvasRendererBase.prototype.ctxStrokeStyle = function (value) {
	    this.canvasContext.strokeStyle = value;
	  };

	  CanvasRendererBase.prototype.ctxLineWidth = function (value) {
	    this.canvasContext.lineWidth = value;
	  };

	  CanvasRendererBase.prototype.ctxLineCap = function (value) {
	    this.canvasContext.lineCap = value;
	  };

	  CanvasRendererBase.prototype.ctxLineJoin = function (value) {
	    this.canvasContext.lineJoin = value;
	  };

	  CanvasRendererBase.prototype.ctxMiterLimit = function (value) {
	    this.canvasContext.miterLimit = value;
	  };

	  CanvasRendererBase.prototype.ctxFill = function (rule) {
	    this.canvasContext.fill(rule);
	  };

	  CanvasRendererBase.prototype.ctxFillRect = function (x, y, w, h) {
	    this.canvasContext.fillRect(x, y, w, h);
	  };

	  CanvasRendererBase.prototype.ctxStroke = function () {
	    this.canvasContext.stroke();
	  };

	  CanvasRendererBase.prototype.reset = function () {
	    if (!this.renderConfig.clearCanvas) {
	      this.canvasContext.restore();
	      return;
	    }

	    this.contextData.reset();
	  };

	  CanvasRendererBase.prototype.save = function () {
	    this.canvasContext.save();
	  };

	  CanvasRendererBase.prototype.restore = function (actionFlag) {
	    if (!this.renderConfig.clearCanvas) {
	      this.canvasContext.restore();
	      return;
	    }

	    if (actionFlag) {
	      this.globalData.blendMode = 'source-over';
	    }

	    this.contextData.restore(actionFlag);
	  };

	  CanvasRendererBase.prototype.configAnimation = function (animData) {
	    if (this.animationItem.wrapper) {
	      this.animationItem.container = createTag('canvas');
	      var containerStyle = this.animationItem.container.style;
	      containerStyle.width = '100%';
	      containerStyle.height = '100%';
	      var origin = '0px 0px 0px';
	      containerStyle.transformOrigin = origin;
	      containerStyle.mozTransformOrigin = origin;
	      containerStyle.webkitTransformOrigin = origin;
	      containerStyle['-webkit-transform'] = origin;
	      containerStyle.contentVisibility = this.renderConfig.contentVisibility;
	      this.animationItem.wrapper.appendChild(this.animationItem.container);
	      this.canvasContext = this.animationItem.container.getContext('2d');

	      if (this.renderConfig.className) {
	        this.animationItem.container.setAttribute('class', this.renderConfig.className);
	      }

	      if (this.renderConfig.id) {
	        this.animationItem.container.setAttribute('id', this.renderConfig.id);
	      }
	    } else {
	      this.canvasContext = this.renderConfig.context;
	    }

	    this.contextData.setContext(this.canvasContext);
	    this.data = animData;
	    this.layers = animData.layers;
	    this.transformCanvas = {
	      w: animData.w,
	      h: animData.h,
	      sx: 0,
	      sy: 0,
	      tx: 0,
	      ty: 0
	    };
	    this.setupGlobalData(animData, document.body);
	    this.globalData.canvasContext = this.canvasContext;
	    this.globalData.renderer = this;
	    this.globalData.isDashed = false;
	    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
	    this.globalData.transformCanvas = this.transformCanvas;
	    this.elements = createSizedArray(animData.layers.length);
	    this.updateContainerSize();
	  };

	  CanvasRendererBase.prototype.updateContainerSize = function (width, height) {
	    this.reset();
	    var elementWidth;
	    var elementHeight;

	    if (width) {
	      elementWidth = width;
	      elementHeight = height;
	      this.canvasContext.canvas.width = elementWidth;
	      this.canvasContext.canvas.height = elementHeight;
	    } else {
	      if (this.animationItem.wrapper && this.animationItem.container) {
	        elementWidth = this.animationItem.wrapper.offsetWidth;
	        elementHeight = this.animationItem.wrapper.offsetHeight;
	      } else {
	        elementWidth = this.canvasContext.canvas.width;
	        elementHeight = this.canvasContext.canvas.height;
	      }

	      this.canvasContext.canvas.width = elementWidth * this.renderConfig.dpr;
	      this.canvasContext.canvas.height = elementHeight * this.renderConfig.dpr;
	    }

	    var elementRel;
	    var animationRel;

	    if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {
	      var par = this.renderConfig.preserveAspectRatio.split(' ');
	      var fillType = par[1] || 'meet';
	      var pos = par[0] || 'xMidYMid';
	      var xPos = pos.substr(0, 4);
	      var yPos = pos.substr(4);
	      elementRel = elementWidth / elementHeight;
	      animationRel = this.transformCanvas.w / this.transformCanvas.h;

	      if (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice') {
	        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
	        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
	      } else {
	        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
	        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
	      }

	      if (xPos === 'xMid' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {
	        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;
	      } else if (xPos === 'xMax' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {
	        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;
	      } else {
	        this.transformCanvas.tx = 0;
	      }

	      if (yPos === 'YMid' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {
	        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;
	      } else if (yPos === 'YMax' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {
	        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;
	      } else {
	        this.transformCanvas.ty = 0;
	      }
	    } else if (this.renderConfig.preserveAspectRatio === 'none') {
	      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
	      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
	      this.transformCanvas.tx = 0;
	      this.transformCanvas.ty = 0;
	    } else {
	      this.transformCanvas.sx = this.renderConfig.dpr;
	      this.transformCanvas.sy = this.renderConfig.dpr;
	      this.transformCanvas.tx = 0;
	      this.transformCanvas.ty = 0;
	    }

	    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];
	    /* var i, len = this.elements.length;
	      for(i=0;i<len;i+=1){
	          if(this.elements[i] && this.elements[i].data.ty === 0){
	              this.elements[i].resize(this.globalData.transformCanvas);
	          }
	      } */

	    this.ctxTransform(this.transformCanvas.props);
	    this.canvasContext.beginPath();
	    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);
	    this.canvasContext.closePath();
	    this.canvasContext.clip();
	    this.renderFrame(this.renderedFrame, true);
	  };

	  CanvasRendererBase.prototype.destroy = function () {
	    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {
	      this.animationItem.wrapper.innerText = '';
	    }

	    var i;
	    var len = this.layers ? this.layers.length : 0;

	    for (i = len - 1; i >= 0; i -= 1) {
	      if (this.elements[i] && this.elements[i].destroy) {
	        this.elements[i].destroy();
	      }
	    }

	    this.elements.length = 0;
	    this.globalData.canvasContext = null;
	    this.animationItem.container = null;
	    this.destroyed = true;
	  };

	  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {
	    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {
	      return;
	    }

	    this.renderedFrame = num;
	    this.globalData.frameNum = num - this.animationItem._isFirstFrame;
	    this.globalData.frameId += 1;
	    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;
	    this.globalData.projectInterface.currentFrame = num; // console.log('--------');
	    // console.log('NEW: ',num);

	    var i;
	    var len = this.layers.length;

	    if (!this.completeLayers) {
	      this.checkLayers(num);
	    }

	    for (i = len - 1; i >= 0; i -= 1) {
	      if (this.completeLayers || this.elements[i]) {
	        this.elements[i].prepareFrame(num - this.layers[i].st);
	      }
	    }

	    if (this.globalData._mdf) {
	      if (this.renderConfig.clearCanvas === true) {
	        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);
	      } else {
	        this.save();
	      }

	      for (i = len - 1; i >= 0; i -= 1) {
	        if (this.completeLayers || this.elements[i]) {
	          this.elements[i].renderFrame();
	        }
	      }

	      if (this.renderConfig.clearCanvas !== true) {
	        this.restore();
	      }
	    }
	  };

	  CanvasRendererBase.prototype.buildItem = function (pos) {
	    var elements = this.elements;

	    if (elements[pos] || this.layers[pos].ty === 99) {
	      return;
	    }

	    var element = this.createItem(this.layers[pos], this, this.globalData);
	    elements[pos] = element;
	    element.initExpressions();
	    /* if(this.layers[pos].ty === 0){
	          element.resize(this.globalData.transformCanvas);
	      } */
	  };

	  CanvasRendererBase.prototype.checkPendingElements = function () {
	    while (this.pendingElements.length) {
	      var element = this.pendingElements.pop();
	      element.checkParenting();
	    }
	  };

	  CanvasRendererBase.prototype.hide = function () {
	    this.animationItem.container.style.display = 'none';
	  };

	  CanvasRendererBase.prototype.show = function () {
	    this.animationItem.container.style.display = 'block';
	  };

	  function CanvasContext() {
	    this.opacity = -1;
	    this.transform = createTypedArray('float32', 16);
	    this.fillStyle = '';
	    this.strokeStyle = '';
	    this.lineWidth = '';
	    this.lineCap = '';
	    this.lineJoin = '';
	    this.miterLimit = '';
	    this.id = Math.random();
	  }

	  function CVContextData() {
	    this.stack = [];
	    this.cArrPos = 0;
	    this.cTr = new Matrix();
	    var i;
	    var len = 15;

	    for (i = 0; i < len; i += 1) {
	      var canvasContext = new CanvasContext();
	      this.stack[i] = canvasContext;
	    }

	    this._length = len;
	    this.nativeContext = null;
	    this.transformMat = new Matrix();
	    this.currentOpacity = 1; //

	    this.currentFillStyle = '';
	    this.appliedFillStyle = ''; //

	    this.currentStrokeStyle = '';
	    this.appliedStrokeStyle = ''; //

	    this.currentLineWidth = '';
	    this.appliedLineWidth = ''; //

	    this.currentLineCap = '';
	    this.appliedLineCap = ''; //

	    this.currentLineJoin = '';
	    this.appliedLineJoin = ''; //

	    this.appliedMiterLimit = '';
	    this.currentMiterLimit = '';
	  }

	  CVContextData.prototype.duplicate = function () {
	    var newLength = this._length * 2;
	    var i = 0;

	    for (i = this._length; i < newLength; i += 1) {
	      this.stack[i] = new CanvasContext();
	    }

	    this._length = newLength;
	  };

	  CVContextData.prototype.reset = function () {
	    this.cArrPos = 0;
	    this.cTr.reset();
	    this.stack[this.cArrPos].opacity = 1;
	  };

	  CVContextData.prototype.restore = function (forceRestore) {
	    this.cArrPos -= 1;
	    var currentContext = this.stack[this.cArrPos];
	    var transform = currentContext.transform;
	    var i;
	    var arr = this.cTr.props;

	    for (i = 0; i < 16; i += 1) {
	      arr[i] = transform[i];
	    }

	    if (forceRestore) {
	      this.nativeContext.restore();
	      var prevStack = this.stack[this.cArrPos + 1];
	      this.appliedFillStyle = prevStack.fillStyle;
	      this.appliedStrokeStyle = prevStack.strokeStyle;
	      this.appliedLineWidth = prevStack.lineWidth;
	      this.appliedLineCap = prevStack.lineCap;
	      this.appliedLineJoin = prevStack.lineJoin;
	      this.appliedMiterLimit = prevStack.miterLimit;
	    }

	    this.nativeContext.setTransform(transform[0], transform[1], transform[4], transform[5], transform[12], transform[13]);

	    if (forceRestore || currentContext.opacity !== -1 && this.currentOpacity !== currentContext.opacity) {
	      this.nativeContext.globalAlpha = currentContext.opacity;
	      this.currentOpacity = currentContext.opacity;
	    }

	    this.currentFillStyle = currentContext.fillStyle;
	    this.currentStrokeStyle = currentContext.strokeStyle;
	    this.currentLineWidth = currentContext.lineWidth;
	    this.currentLineCap = currentContext.lineCap;
	    this.currentLineJoin = currentContext.lineJoin;
	    this.currentMiterLimit = currentContext.miterLimit;
	  };

	  CVContextData.prototype.save = function (saveOnNativeFlag) {
	    if (saveOnNativeFlag) {
	      this.nativeContext.save();
	    }

	    var props = this.cTr.props;

	    if (this._length <= this.cArrPos) {
	      this.duplicate();
	    }

	    var currentStack = this.stack[this.cArrPos];
	    var i;

	    for (i = 0; i < 16; i += 1) {
	      currentStack.transform[i] = props[i];
	    }

	    this.cArrPos += 1;
	    var newStack = this.stack[this.cArrPos];
	    newStack.opacity = currentStack.opacity;
	    newStack.fillStyle = currentStack.fillStyle;
	    newStack.strokeStyle = currentStack.strokeStyle;
	    newStack.lineWidth = currentStack.lineWidth;
	    newStack.lineCap = currentStack.lineCap;
	    newStack.lineJoin = currentStack.lineJoin;
	    newStack.miterLimit = currentStack.miterLimit;
	  };

	  CVContextData.prototype.setOpacity = function (value) {
	    this.stack[this.cArrPos].opacity = value;
	  };

	  CVContextData.prototype.setContext = function (value) {
	    this.nativeContext = value;
	  };

	  CVContextData.prototype.fillStyle = function (value) {
	    if (this.stack[this.cArrPos].fillStyle !== value) {
	      this.currentFillStyle = value;
	      this.stack[this.cArrPos].fillStyle = value;
	    }
	  };

	  CVContextData.prototype.strokeStyle = function (value) {
	    if (this.stack[this.cArrPos].strokeStyle !== value) {
	      this.currentStrokeStyle = value;
	      this.stack[this.cArrPos].strokeStyle = value;
	    }
	  };

	  CVContextData.prototype.lineWidth = function (value) {
	    if (this.stack[this.cArrPos].lineWidth !== value) {
	      this.currentLineWidth = value;
	      this.stack[this.cArrPos].lineWidth = value;
	    }
	  };

	  CVContextData.prototype.lineCap = function (value) {
	    if (this.stack[this.cArrPos].lineCap !== value) {
	      this.currentLineCap = value;
	      this.stack[this.cArrPos].lineCap = value;
	    }
	  };

	  CVContextData.prototype.lineJoin = function (value) {
	    if (this.stack[this.cArrPos].lineJoin !== value) {
	      this.currentLineJoin = value;
	      this.stack[this.cArrPos].lineJoin = value;
	    }
	  };

	  CVContextData.prototype.miterLimit = function (value) {
	    if (this.stack[this.cArrPos].miterLimit !== value) {
	      this.currentMiterLimit = value;
	      this.stack[this.cArrPos].miterLimit = value;
	    }
	  };

	  CVContextData.prototype.transform = function (props) {
	    this.transformMat.cloneFromProps(props); // Taking the last transform value from the stored stack of transforms

	    var currentTransform = this.cTr; // Applying the last transform value after the new transform to respect the order of transformations

	    this.transformMat.multiply(currentTransform); // Storing the new transformed value in the stored transform

	    currentTransform.cloneFromProps(this.transformMat.props);
	    var trProps = currentTransform.props; // Applying the new transform to the canvas

	    this.nativeContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);
	  };

	  CVContextData.prototype.opacity = function (op) {
	    var currentOpacity = this.stack[this.cArrPos].opacity;
	    currentOpacity *= op < 0 ? 0 : op;

	    if (this.stack[this.cArrPos].opacity !== currentOpacity) {
	      if (this.currentOpacity !== op) {
	        this.nativeContext.globalAlpha = op;
	        this.currentOpacity = op;
	      }

	      this.stack[this.cArrPos].opacity = currentOpacity;
	    }
	  };

	  CVContextData.prototype.fill = function (rule) {
	    if (this.appliedFillStyle !== this.currentFillStyle) {
	      this.appliedFillStyle = this.currentFillStyle;
	      this.nativeContext.fillStyle = this.appliedFillStyle;
	    }

	    this.nativeContext.fill(rule);
	  };

	  CVContextData.prototype.fillRect = function (x, y, w, h) {
	    if (this.appliedFillStyle !== this.currentFillStyle) {
	      this.appliedFillStyle = this.currentFillStyle;
	      this.nativeContext.fillStyle = this.appliedFillStyle;
	    }

	    this.nativeContext.fillRect(x, y, w, h);
	  };

	  CVContextData.prototype.stroke = function () {
	    if (this.appliedStrokeStyle !== this.currentStrokeStyle) {
	      this.appliedStrokeStyle = this.currentStrokeStyle;
	      this.nativeContext.strokeStyle = this.appliedStrokeStyle;
	    }

	    if (this.appliedLineWidth !== this.currentLineWidth) {
	      this.appliedLineWidth = this.currentLineWidth;
	      this.nativeContext.lineWidth = this.appliedLineWidth;
	    }

	    if (this.appliedLineCap !== this.currentLineCap) {
	      this.appliedLineCap = this.currentLineCap;
	      this.nativeContext.lineCap = this.appliedLineCap;
	    }

	    if (this.appliedLineJoin !== this.currentLineJoin) {
	      this.appliedLineJoin = this.currentLineJoin;
	      this.nativeContext.lineJoin = this.appliedLineJoin;
	    }

	    if (this.appliedMiterLimit !== this.currentMiterLimit) {
	      this.appliedMiterLimit = this.currentMiterLimit;
	      this.nativeContext.miterLimit = this.appliedMiterLimit;
	    }

	    this.nativeContext.stroke();
	  };

	  function CVCompElement(data, globalData, comp) {
	    this.completeLayers = false;
	    this.layers = data.layers;
	    this.pendingElements = [];
	    this.elements = createSizedArray(this.layers.length);
	    this.initElement(data, globalData, comp);
	    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {
	      _placeholder: true
	    };
	  }

	  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);

	  CVCompElement.prototype.renderInnerContent = function () {
	    var ctx = this.canvasContext;
	    ctx.beginPath();
	    ctx.moveTo(0, 0);
	    ctx.lineTo(this.data.w, 0);
	    ctx.lineTo(this.data.w, this.data.h);
	    ctx.lineTo(0, this.data.h);
	    ctx.lineTo(0, 0);
	    ctx.clip();
	    var i;
	    var len = this.layers.length;

	    for (i = len - 1; i >= 0; i -= 1) {
	      if (this.completeLayers || this.elements[i]) {
	        this.elements[i].renderFrame();
	      }
	    }
	  };

	  CVCompElement.prototype.destroy = function () {
	    var i;
	    var len = this.layers.length;

	    for (i = len - 1; i >= 0; i -= 1) {
	      if (this.elements[i]) {
	        this.elements[i].destroy();
	      }
	    }

	    this.layers = null;
	    this.elements = null;
	  };

	  CVCompElement.prototype.createComp = function (data) {
	    return new CVCompElement(data, this.globalData, this);
	  };

	  function CanvasRenderer(animationItem, config) {
	    this.animationItem = animationItem;
	    this.renderConfig = {
	      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,
	      context: config && config.context || null,
	      progressiveLoad: config && config.progressiveLoad || false,
	      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',
	      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',
	      contentVisibility: config && config.contentVisibility || 'visible',
	      className: config && config.className || '',
	      id: config && config.id || '',
	      runExpressions: !config || config.runExpressions === undefined || config.runExpressions
	    };
	    this.renderConfig.dpr = config && config.dpr || 1;

	    if (this.animationItem.wrapper) {
	      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;
	    }

	    this.renderedFrame = -1;
	    this.globalData = {
	      frameNum: -1,
	      _mdf: false,
	      renderConfig: this.renderConfig,
	      currentGlobalAlpha: -1
	    };
	    this.contextData = new CVContextData();
	    this.elements = [];
	    this.pendingElements = [];
	    this.transformMat = new Matrix();
	    this.completeLayers = false;
	    this.rendererType = 'canvas';

	    if (this.renderConfig.clearCanvas) {
	      this.ctxTransform = this.contextData.transform.bind(this.contextData);
	      this.ctxOpacity = this.contextData.opacity.bind(this.contextData);
	      this.ctxFillStyle = this.contextData.fillStyle.bind(this.contextData);
	      this.ctxStrokeStyle = this.contextData.strokeStyle.bind(this.contextData);
	      this.ctxLineWidth = this.contextData.lineWidth.bind(this.contextData);
	      this.ctxLineCap = this.contextData.lineCap.bind(this.contextData);
	      this.ctxLineJoin = this.contextData.lineJoin.bind(this.contextData);
	      this.ctxMiterLimit = this.contextData.miterLimit.bind(this.contextData);
	      this.ctxFill = this.contextData.fill.bind(this.contextData);
	      this.ctxFillRect = this.contextData.fillRect.bind(this.contextData);
	      this.ctxStroke = this.contextData.stroke.bind(this.contextData);
	      this.save = this.contextData.save.bind(this.contextData);
	    }
	  }

	  extendPrototype([CanvasRendererBase], CanvasRenderer);

	  CanvasRenderer.prototype.createComp = function (data) {
	    return new CVCompElement(data, this.globalData, this);
	  };

	  function HBaseElement() {}

	  HBaseElement.prototype = {
	    checkBlendMode: function checkBlendMode() {},
	    initRendererElement: function initRendererElement() {
	      this.baseElement = createTag(this.data.tg || 'div');

	      if (this.data.hasMask) {
	        this.svgElement = createNS('svg');
	        this.layerElement = createNS('g');
	        this.maskedElement = this.layerElement;
	        this.svgElement.appendChild(this.layerElement);
	        this.baseElement.appendChild(this.svgElement);
	      } else {
	        this.layerElement = this.baseElement;
	      }

	      styleDiv(this.baseElement);
	    },
	    createContainerElements: function createContainerElements() {
	      this.renderableEffectsManager = new CVEffects(this);
	      this.transformedElement = this.baseElement;
	      this.maskedElement = this.layerElement;

	      if (this.data.ln) {
	        this.layerElement.setAttribute('id', this.data.ln);
	      }

	      if (this.data.cl) {
	        this.layerElement.setAttribute('class', this.data.cl);
	      }

	      if (this.data.bm !== 0) {
	        this.setBlendMode();
	      }
	    },
	    renderElement: function renderElement() {
	      var transformedElementStyle = this.transformedElement ? this.transformedElement.style : {};

	      if (this.finalTransform._matMdf) {
	        var matrixValue = this.finalTransform.mat.toCSS();
	        transformedElementStyle.transform = matrixValue;
	        transformedElementStyle.webkitTransform = matrixValue;
	      }

	      if (this.finalTransform._opMdf) {
	        transformedElementStyle.opacity = this.finalTransform.mProp.o.v;
	      }
	    },
	    renderFrame: function renderFrame() {
	      // If it is exported as hidden (data.hd === true) no need to render
	      // If it is not visible no need to render
	      if (this.data.hd || this.hidden) {
	        return;
	      }

	      this.renderTransform();
	      this.renderRenderable();
	      this.renderElement();
	      this.renderInnerContent();

	      if (this._isFirstFrame) {
	        this._isFirstFrame = false;
	      }
	    },
	    destroy: function destroy() {
	      this.layerElement = null;
	      this.transformedElement = null;

	      if (this.matteElement) {
	        this.matteElement = null;
	      }

	      if (this.maskManager) {
	        this.maskManager.destroy();
	        this.maskManager = null;
	      }
	    },
	    createRenderableComponents: function createRenderableComponents() {
	      this.maskManager = new MaskElement(this.data, this, this.globalData);
	    },
	    addEffects: function addEffects() {},
	    setMatte: function setMatte() {}
	  };
	  HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;
	  HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;
	  HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting;

	  function HSolidElement(data, globalData, comp) {
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);

	  HSolidElement.prototype.createContent = function () {
	    var rect;

	    if (this.data.hasMask) {
	      rect = createNS('rect');
	      rect.setAttribute('width', this.data.sw);
	      rect.setAttribute('height', this.data.sh);
	      rect.setAttribute('fill', this.data.sc);
	      this.svgElement.setAttribute('width', this.data.sw);
	      this.svgElement.setAttribute('height', this.data.sh);
	    } else {
	      rect = createTag('div');
	      rect.style.width = this.data.sw + 'px';
	      rect.style.height = this.data.sh + 'px';
	      rect.style.backgroundColor = this.data.sc;
	    }

	    this.layerElement.appendChild(rect);
	  };

	  function HShapeElement(data, globalData, comp) {
	    // List of drawable elements
	    this.shapes = []; // Full shape data

	    this.shapesData = data.shapes; // List of styles that will be applied to shapes

	    this.stylesList = []; // List of modifiers that will be applied to shapes

	    this.shapeModifiers = []; // List of items in shape tree

	    this.itemsData = []; // List of items in previous shape tree

	    this.processedElements = []; // List of animated components

	    this.animatedContents = [];
	    this.shapesContainer = createNS('g');
	    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
	    // List of elements that have been created

	    this.prevViewData = [];
	    this.currentBBox = {
	      x: 999999,
	      y: -999999,
	      h: 0,
	      w: 0
	    };
	  }

	  extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);
	  HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;

	  HShapeElement.prototype.createContent = function () {
	    var cont;
	    this.baseElement.style.fontSize = 0;

	    if (this.data.hasMask) {
	      this.layerElement.appendChild(this.shapesContainer);
	      cont = this.svgElement;
	    } else {
	      cont = createNS('svg');
	      var size = this.comp.data ? this.comp.data : this.globalData.compSize;
	      cont.setAttribute('width', size.w);
	      cont.setAttribute('height', size.h);
	      cont.appendChild(this.shapesContainer);
	      this.layerElement.appendChild(cont);
	    }

	    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);
	    this.filterUniqueShapes();
	    this.shapeCont = cont;
	  };

	  HShapeElement.prototype.getTransformedPoint = function (transformers, point) {
	    var i;
	    var len = transformers.length;

	    for (i = 0; i < len; i += 1) {
	      point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);
	    }

	    return point;
	  };

	  HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {
	    var shape = item.sh.v;
	    var transformers = item.transformers;
	    var i;
	    var len = shape._length;
	    var vPoint;
	    var oPoint;
	    var nextIPoint;
	    var nextVPoint;

	    if (len <= 1) {
	      return;
	    }

	    for (i = 0; i < len - 1; i += 1) {
	      vPoint = this.getTransformedPoint(transformers, shape.v[i]);
	      oPoint = this.getTransformedPoint(transformers, shape.o[i]);
	      nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);
	      nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);
	      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
	    }

	    if (shape.c) {
	      vPoint = this.getTransformedPoint(transformers, shape.v[i]);
	      oPoint = this.getTransformedPoint(transformers, shape.o[i]);
	      nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);
	      nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);
	      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
	    }
	  };

	  HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {
	    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);
	    var bounds = this.shapeBoundingBox;
	    boundingBox.x = bmMin(bounds.left, boundingBox.x);
	    boundingBox.xMax = bmMax(bounds.right, boundingBox.xMax);
	    boundingBox.y = bmMin(bounds.top, boundingBox.y);
	    boundingBox.yMax = bmMax(bounds.bottom, boundingBox.yMax);
	  };

	  HShapeElement.prototype.shapeBoundingBox = {
	    left: 0,
	    right: 0,
	    top: 0,
	    bottom: 0
	  };
	  HShapeElement.prototype.tempBoundingBox = {
	    x: 0,
	    xMax: 0,
	    y: 0,
	    yMax: 0,
	    width: 0,
	    height: 0
	  };

	  HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {
	    var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];

	    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {
	      // eslint-disable-line no-plusplus
	      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
	      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
	      c = 3 * p1[i] - 3 * p0[i];
	      b |= 0; // eslint-disable-line no-bitwise

	      a |= 0; // eslint-disable-line no-bitwise

	      c |= 0; // eslint-disable-line no-bitwise

	      if (a === 0 && b === 0) ; else if (a === 0) {
	        t = -c / b;

	        if (t > 0 && t < 1) {
	          bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));
	        }
	      } else {
	        b2ac = b * b - 4 * c * a;

	        if (b2ac >= 0) {
	          t1 = (-b + bmSqrt(b2ac)) / (2 * a);
	          if (t1 > 0 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));
	          t2 = (-b - bmSqrt(b2ac)) / (2 * a);
	          if (t2 > 0 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));
	        }
	      }
	    }

	    this.shapeBoundingBox.left = bmMin.apply(null, bounds[0]);
	    this.shapeBoundingBox.top = bmMin.apply(null, bounds[1]);
	    this.shapeBoundingBox.right = bmMax.apply(null, bounds[0]);
	    this.shapeBoundingBox.bottom = bmMax.apply(null, bounds[1]);
	  };

	  HShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {
	    return bmPow(1 - t, 3) * p0[i] + 3 * bmPow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * bmPow(t, 2) * p2[i] + bmPow(t, 3) * p3[i];
	  };

	  HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {
	    var i;
	    var len = itemsData.length;

	    for (i = 0; i < len; i += 1) {
	      if (itemsData[i] && itemsData[i].sh) {
	        this.calculateShapeBoundingBox(itemsData[i], boundingBox);
	      } else if (itemsData[i] && itemsData[i].it) {
	        this.calculateBoundingBox(itemsData[i].it, boundingBox);
	      } else if (itemsData[i] && itemsData[i].style && itemsData[i].w) {
	        this.expandStrokeBoundingBox(itemsData[i].w, boundingBox);
	      }
	    }
	  };

	  HShapeElement.prototype.expandStrokeBoundingBox = function (widthProperty, boundingBox) {
	    var width = 0;

	    if (widthProperty.keyframes) {
	      for (var i = 0; i < widthProperty.keyframes.length; i += 1) {
	        var kfw = widthProperty.keyframes[i].s;

	        if (kfw > width) {
	          width = kfw;
	        }
	      }

	      width *= widthProperty.mult;
	    } else {
	      width = widthProperty.v * widthProperty.mult;
	    }

	    boundingBox.x -= width;
	    boundingBox.xMax += width;
	    boundingBox.y -= width;
	    boundingBox.yMax += width;
	  };

	  HShapeElement.prototype.currentBoxContains = function (box) {
	    return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;
	  };

	  HShapeElement.prototype.renderInnerContent = function () {
	    this._renderShapeFrame();

	    if (!this.hidden && (this._isFirstFrame || this._mdf)) {
	      var tempBoundingBox = this.tempBoundingBox;
	      var max = 999999;
	      tempBoundingBox.x = max;
	      tempBoundingBox.xMax = -max;
	      tempBoundingBox.y = max;
	      tempBoundingBox.yMax = -max;
	      this.calculateBoundingBox(this.itemsData, tempBoundingBox);
	      tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;
	      tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y; // var tempBoundingBox = this.shapeCont.getBBox();

	      if (this.currentBoxContains(tempBoundingBox)) {
	        return;
	      }

	      var changed = false;

	      if (this.currentBBox.w !== tempBoundingBox.width) {
	        this.currentBBox.w = tempBoundingBox.width;
	        this.shapeCont.setAttribute('width', tempBoundingBox.width);
	        changed = true;
	      }

	      if (this.currentBBox.h !== tempBoundingBox.height) {
	        this.currentBBox.h = tempBoundingBox.height;
	        this.shapeCont.setAttribute('height', tempBoundingBox.height);
	        changed = true;
	      }

	      if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {
	        this.currentBBox.w = tempBoundingBox.width;
	        this.currentBBox.h = tempBoundingBox.height;
	        this.currentBBox.x = tempBoundingBox.x;
	        this.currentBBox.y = tempBoundingBox.y;
	        this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);
	        var shapeStyle = this.shapeCont.style;
	        var shapeTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';
	        shapeStyle.transform = shapeTransform;
	        shapeStyle.webkitTransform = shapeTransform;
	      }
	    }
	  };

	  function HTextElement(data, globalData, comp) {
	    this.textSpans = [];
	    this.textPaths = [];
	    this.currentBBox = {
	      x: 999999,
	      y: -999999,
	      h: 0,
	      w: 0
	    };
	    this.renderType = 'svg';
	    this.isMasked = false;
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);

	  HTextElement.prototype.createContent = function () {
	    this.isMasked = this.checkMasks();

	    if (this.isMasked) {
	      this.renderType = 'svg';
	      this.compW = this.comp.data.w;
	      this.compH = this.comp.data.h;
	      this.svgElement.setAttribute('width', this.compW);
	      this.svgElement.setAttribute('height', this.compH);
	      var g = createNS('g');
	      this.maskedElement.appendChild(g);
	      this.innerElem = g;
	    } else {
	      this.renderType = 'html';
	      this.innerElem = this.layerElement;
	    }

	    this.checkParenting();
	  };

	  HTextElement.prototype.buildNewText = function () {
	    var documentData = this.textProperty.currentData;
	    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
	    var innerElemStyle = this.innerElem.style;
	    var textColor = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';
	    innerElemStyle.fill = textColor;
	    innerElemStyle.color = textColor;

	    if (documentData.sc) {
	      innerElemStyle.stroke = this.buildColor(documentData.sc);
	      innerElemStyle.strokeWidth = documentData.sw + 'px';
	    }

	    var fontData = this.globalData.fontManager.getFontByName(documentData.f);

	    if (!this.globalData.fontManager.chars) {
	      innerElemStyle.fontSize = documentData.finalSize + 'px';
	      innerElemStyle.lineHeight = documentData.finalSize + 'px';

	      if (fontData.fClass) {
	        this.innerElem.className = fontData.fClass;
	      } else {
	        innerElemStyle.fontFamily = fontData.fFamily;
	        var fWeight = documentData.fWeight;
	        var fStyle = documentData.fStyle;
	        innerElemStyle.fontStyle = fStyle;
	        innerElemStyle.fontWeight = fWeight;
	      }
	    }

	    var i;
	    var len;
	    var letters = documentData.l;
	    len = letters.length;
	    var tSpan;
	    var tParent;
	    var tCont;
	    var matrixHelper = this.mHelper;
	    var shapes;
	    var shapeStr = '';
	    var cnt = 0;

	    for (i = 0; i < len; i += 1) {
	      if (this.globalData.fontManager.chars) {
	        if (!this.textPaths[cnt]) {
	          tSpan = createNS('path');
	          tSpan.setAttribute('stroke-linecap', lineCapEnum[1]);
	          tSpan.setAttribute('stroke-linejoin', lineJoinEnum[2]);
	          tSpan.setAttribute('stroke-miterlimit', '4');
	        } else {
	          tSpan = this.textPaths[cnt];
	        }

	        if (!this.isMasked) {
	          if (this.textSpans[cnt]) {
	            tParent = this.textSpans[cnt];
	            tCont = tParent.children[0];
	          } else {
	            tParent = createTag('div');
	            tParent.style.lineHeight = 0;
	            tCont = createNS('svg');
	            tCont.appendChild(tSpan);
	            styleDiv(tParent);
	          }
	        }
	      } else if (!this.isMasked) {
	        if (this.textSpans[cnt]) {
	          tParent = this.textSpans[cnt];
	          tSpan = this.textPaths[cnt];
	        } else {
	          tParent = createTag('span');
	          styleDiv(tParent);
	          tSpan = createTag('span');
	          styleDiv(tSpan);
	          tParent.appendChild(tSpan);
	        }
	      } else {
	        tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');
	      } // tSpan.setAttribute('visibility', 'hidden');


	      if (this.globalData.fontManager.chars) {
	        var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
	        var shapeData;

	        if (charData) {
	          shapeData = charData.data;
	        } else {
	          shapeData = null;
	        }

	        matrixHelper.reset();

	        if (shapeData && shapeData.shapes && shapeData.shapes.length) {
	          shapes = shapeData.shapes[0].it;
	          matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
	          shapeStr = this.createPathShape(matrixHelper, shapes);
	          tSpan.setAttribute('d', shapeStr);
	        }

	        if (!this.isMasked) {
	          this.innerElem.appendChild(tParent);

	          if (shapeData && shapeData.shapes) {
	            // document.body.appendChild is needed to get exact measure of shape
	            document.body.appendChild(tCont);
	            var boundingBox = tCont.getBBox();
	            tCont.setAttribute('width', boundingBox.width + 2);
	            tCont.setAttribute('height', boundingBox.height + 2);
	            tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));
	            var tContStyle = tCont.style;
	            var tContTranslation = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';
	            tContStyle.transform = tContTranslation;
	            tContStyle.webkitTransform = tContTranslation;
	            letters[i].yOffset = boundingBox.y - 1;
	          } else {
	            tCont.setAttribute('width', 1);
	            tCont.setAttribute('height', 1);
	          }

	          tParent.appendChild(tCont);
	        } else {
	          this.innerElem.appendChild(tSpan);
	        }
	      } else {
	        tSpan.textContent = letters[i].val;
	        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');

	        if (!this.isMasked) {
	          this.innerElem.appendChild(tParent); //

	          var tStyle = tSpan.style;
	          var tSpanTranslation = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';
	          tStyle.transform = tSpanTranslation;
	          tStyle.webkitTransform = tSpanTranslation;
	        } else {
	          this.innerElem.appendChild(tSpan);
	        }
	      } //


	      if (!this.isMasked) {
	        this.textSpans[cnt] = tParent;
	      } else {
	        this.textSpans[cnt] = tSpan;
	      }

	      this.textSpans[cnt].style.display = 'block';
	      this.textPaths[cnt] = tSpan;
	      cnt += 1;
	    }

	    while (cnt < this.textSpans.length) {
	      this.textSpans[cnt].style.display = 'none';
	      cnt += 1;
	    }
	  };

	  HTextElement.prototype.renderInnerContent = function () {
	    this.validateText();
	    var svgStyle;

	    if (this.data.singleShape) {
	      if (!this._isFirstFrame && !this.lettersChangedFlag) {
	        return;
	      }

	      if (this.isMasked && this.finalTransform._matMdf) {
	        // Todo Benchmark if using this is better than getBBox
	        this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);
	        svgStyle = this.svgElement.style;
	        var translation = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';
	        svgStyle.transform = translation;
	        svgStyle.webkitTransform = translation;
	      }
	    }

	    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);

	    if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {
	      return;
	    }

	    var i;
	    var len;
	    var count = 0;
	    var renderedLetters = this.textAnimator.renderedLetters;
	    var letters = this.textProperty.currentData.l;
	    len = letters.length;
	    var renderedLetter;
	    var textSpan;
	    var textPath;

	    for (i = 0; i < len; i += 1) {
	      if (letters[i].n) {
	        count += 1;
	      } else {
	        textSpan = this.textSpans[i];
	        textPath = this.textPaths[i];
	        renderedLetter = renderedLetters[count];
	        count += 1;

	        if (renderedLetter._mdf.m) {
	          if (!this.isMasked) {
	            textSpan.style.webkitTransform = renderedLetter.m;
	            textSpan.style.transform = renderedLetter.m;
	          } else {
	            textSpan.setAttribute('transform', renderedLetter.m);
	          }
	        } /// /textSpan.setAttribute('opacity',renderedLetter.o);


	        textSpan.style.opacity = renderedLetter.o;

	        if (renderedLetter.sw && renderedLetter._mdf.sw) {
	          textPath.setAttribute('stroke-width', renderedLetter.sw);
	        }

	        if (renderedLetter.sc && renderedLetter._mdf.sc) {
	          textPath.setAttribute('stroke', renderedLetter.sc);
	        }

	        if (renderedLetter.fc && renderedLetter._mdf.fc) {
	          textPath.setAttribute('fill', renderedLetter.fc);
	          textPath.style.color = renderedLetter.fc;
	        }
	      }
	    }

	    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
	      var boundingBox = this.innerElem.getBBox();

	      if (this.currentBBox.w !== boundingBox.width) {
	        this.currentBBox.w = boundingBox.width;
	        this.svgElement.setAttribute('width', boundingBox.width);
	      }

	      if (this.currentBBox.h !== boundingBox.height) {
	        this.currentBBox.h = boundingBox.height;
	        this.svgElement.setAttribute('height', boundingBox.height);
	      }

	      var margin = 1;

	      if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {
	        this.currentBBox.w = boundingBox.width + margin * 2;
	        this.currentBBox.h = boundingBox.height + margin * 2;
	        this.currentBBox.x = boundingBox.x - margin;
	        this.currentBBox.y = boundingBox.y - margin;
	        this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);
	        svgStyle = this.svgElement.style;
	        var svgTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';
	        svgStyle.transform = svgTransform;
	        svgStyle.webkitTransform = svgTransform;
	      }
	    }
	  };

	  function HCameraElement(data, globalData, comp) {
	    this.initFrame();
	    this.initBaseData(data, globalData, comp);
	    this.initHierarchy();
	    var getProp = PropertyFactory.getProp;
	    this.pe = getProp(this, data.pe, 0, 0, this);

	    if (data.ks.p.s) {
	      this.px = getProp(this, data.ks.p.x, 1, 0, this);
	      this.py = getProp(this, data.ks.p.y, 1, 0, this);
	      this.pz = getProp(this, data.ks.p.z, 1, 0, this);
	    } else {
	      this.p = getProp(this, data.ks.p, 1, 0, this);
	    }

	    if (data.ks.a) {
	      this.a = getProp(this, data.ks.a, 1, 0, this);
	    }

	    if (data.ks.or.k.length && data.ks.or.k[0].to) {
	      var i;
	      var len = data.ks.or.k.length;

	      for (i = 0; i < len; i += 1) {
	        data.ks.or.k[i].to = null;
	        data.ks.or.k[i].ti = null;
	      }
	    }

	    this.or = getProp(this, data.ks.or, 1, degToRads, this);
	    this.or.sh = true;
	    this.rx = getProp(this, data.ks.rx, 0, degToRads, this);
	    this.ry = getProp(this, data.ks.ry, 0, degToRads, this);
	    this.rz = getProp(this, data.ks.rz, 0, degToRads, this);
	    this.mat = new Matrix();
	    this._prevMat = new Matrix();
	    this._isFirstFrame = true; // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.

	    this.finalTransform = {
	      mProp: this
	    };
	  }

	  extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);

	  HCameraElement.prototype.setup = function () {
	    var i;
	    var len = this.comp.threeDElements.length;
	    var comp;
	    var perspectiveStyle;
	    var containerStyle;

	    for (i = 0; i < len; i += 1) {
	      // [perspectiveElem,container]
	      comp = this.comp.threeDElements[i];

	      if (comp.type === '3d') {
	        perspectiveStyle = comp.perspectiveElem.style;
	        containerStyle = comp.container.style;
	        var perspective = this.pe.v + 'px';
	        var origin = '0px 0px 0px';
	        var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
	        perspectiveStyle.perspective = perspective;
	        perspectiveStyle.webkitPerspective = perspective;
	        containerStyle.transformOrigin = origin;
	        containerStyle.mozTransformOrigin = origin;
	        containerStyle.webkitTransformOrigin = origin;
	        perspectiveStyle.transform = matrix;
	        perspectiveStyle.webkitTransform = matrix;
	      }
	    }
	  };

	  HCameraElement.prototype.createElements = function () {};

	  HCameraElement.prototype.hide = function () {};

	  HCameraElement.prototype.renderFrame = function () {
	    var _mdf = this._isFirstFrame;
	    var i;
	    var len;

	    if (this.hierarchy) {
	      len = this.hierarchy.length;

	      for (i = 0; i < len; i += 1) {
	        _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;
	      }
	    }

	    if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
	      this.mat.reset();

	      if (this.hierarchy) {
	        len = this.hierarchy.length - 1;

	        for (i = len; i >= 0; i -= 1) {
	          var mTransf = this.hierarchy[i].finalTransform.mProp;
	          this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);
	          this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);
	          this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);
	          this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);
	          this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);
	        }
	      }

	      if (this.p) {
	        this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);
	      } else {
	        this.mat.translate(-this.px.v, -this.py.v, this.pz.v);
	      }

	      if (this.a) {
	        var diffVector;

	        if (this.p) {
	          diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];
	        } else {
	          diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
	        }

	        var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2)); // var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));

	        var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];
	        var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);
	        var mRotationX = Math.atan2(lookDir[1], lookLengthOnXZ);
	        var mRotationY = Math.atan2(lookDir[0], -lookDir[2]);
	        this.mat.rotateY(mRotationY).rotateX(-mRotationX);
	      }

	      this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);
	      this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);
	      this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);
	      this.mat.translate(0, 0, this.pe.v);
	      var hasMatrixChanged = !this._prevMat.equals(this.mat);

	      if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {
	        len = this.comp.threeDElements.length;
	        var comp;
	        var perspectiveStyle;
	        var containerStyle;

	        for (i = 0; i < len; i += 1) {
	          comp = this.comp.threeDElements[i];

	          if (comp.type === '3d') {
	            if (hasMatrixChanged) {
	              var matValue = this.mat.toCSS();
	              containerStyle = comp.container.style;
	              containerStyle.transform = matValue;
	              containerStyle.webkitTransform = matValue;
	            }

	            if (this.pe._mdf) {
	              perspectiveStyle = comp.perspectiveElem.style;
	              perspectiveStyle.perspective = this.pe.v + 'px';
	              perspectiveStyle.webkitPerspective = this.pe.v + 'px';
	            }
	          }
	        }

	        this.mat.clone(this._prevMat);
	      }
	    }

	    this._isFirstFrame = false;
	  };

	  HCameraElement.prototype.prepareFrame = function (num) {
	    this.prepareProperties(num, true);
	  };

	  HCameraElement.prototype.destroy = function () {};

	  HCameraElement.prototype.getBaseElement = function () {
	    return null;
	  };

	  function HImageElement(data, globalData, comp) {
	    this.assetData = globalData.getAssetData(data.refId);
	    this.initElement(data, globalData, comp);
	  }

	  extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);

	  HImageElement.prototype.createContent = function () {
	    var assetPath = this.globalData.getAssetsPath(this.assetData);
	    var img = new Image();

	    if (this.data.hasMask) {
	      this.imageElem = createNS('image');
	      this.imageElem.setAttribute('width', this.assetData.w + 'px');
	      this.imageElem.setAttribute('height', this.assetData.h + 'px');
	      this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);
	      this.layerElement.appendChild(this.imageElem);
	      this.baseElement.setAttribute('width', this.assetData.w);
	      this.baseElement.setAttribute('height', this.assetData.h);
	    } else {
	      this.layerElement.appendChild(img);
	    }

	    img.crossOrigin = 'anonymous';
	    img.src = assetPath;

	    if (this.data.ln) {
	      this.baseElement.setAttribute('id', this.data.ln);
	    }
	  };

	  function HybridRendererBase(animationItem, config) {
	    this.animationItem = animationItem;
	    this.layers = null;
	    this.renderedFrame = -1;
	    this.renderConfig = {
	      className: config && config.className || '',
	      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',
	      hideOnTransparent: !(config && config.hideOnTransparent === false),
	      filterSize: {
	        width: config && config.filterSize && config.filterSize.width || '400%',
	        height: config && config.filterSize && config.filterSize.height || '400%',
	        x: config && config.filterSize && config.filterSize.x || '-100%',
	        y: config && config.filterSize && config.filterSize.y || '-100%'
	      }
	    };
	    this.globalData = {
	      _mdf: false,
	      frameNum: -1,
	      renderConfig: this.renderConfig
	    };
	    this.pendingElements = [];
	    this.elements = [];
	    this.threeDElements = [];
	    this.destroyed = false;
	    this.camera = null;
	    this.supports3d = true;
	    this.rendererType = 'html';
	  }

	  extendPrototype([BaseRenderer], HybridRendererBase);
	  HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem;

	  HybridRendererBase.prototype.checkPendingElements = function () {
	    while (this.pendingElements.length) {
	      var element = this.pendingElements.pop();
	      element.checkParenting();
	    }
	  };

	  HybridRendererBase.prototype.appendElementInPos = function (element, pos) {
	    var newDOMElement = element.getBaseElement();

	    if (!newDOMElement) {
	      return;
	    }

	    var layer = this.layers[pos];

	    if (!layer.ddd || !this.supports3d) {
	      if (this.threeDElements) {
	        this.addTo3dContainer(newDOMElement, pos);
	      } else {
	        var i = 0;
	        var nextDOMElement;
	        var nextLayer;
	        var tmpDOMElement;

	        while (i < pos) {
	          if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {
	            nextLayer = this.elements[i];
	            tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();
	            nextDOMElement = tmpDOMElement || nextDOMElement;
	          }

	          i += 1;
	        }

	        if (nextDOMElement) {
	          if (!layer.ddd || !this.supports3d) {
	            this.layerElement.insertBefore(newDOMElement, nextDOMElement);
	          }
	        } else if (!layer.ddd || !this.supports3d) {
	          this.layerElement.appendChild(newDOMElement);
	        }
	      }
	    } else {
	      this.addTo3dContainer(newDOMElement, pos);
	    }
	  };

	  HybridRendererBase.prototype.createShape = function (data) {
	    if (!this.supports3d) {
	      return new SVGShapeElement(data, this.globalData, this);
	    }

	    return new HShapeElement(data, this.globalData, this);
	  };

	  HybridRendererBase.prototype.createText = function (data) {
	    if (!this.supports3d) {
	      return new SVGTextLottieElement(data, this.globalData, this);
	    }

	    return new HTextElement(data, this.globalData, this);
	  };

	  HybridRendererBase.prototype.createCamera = function (data) {
	    this.camera = new HCameraElement(data, this.globalData, this);
	    return this.camera;
	  };

	  HybridRendererBase.prototype.createImage = function (data) {
	    if (!this.supports3d) {
	      return new IImageElement(data, this.globalData, this);
	    }

	    return new HImageElement(data, this.globalData, this);
	  };

	  HybridRendererBase.prototype.createSolid = function (data) {
	    if (!this.supports3d) {
	      return new ISolidElement(data, this.globalData, this);
	    }

	    return new HSolidElement(data, this.globalData, this);
	  };

	  HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;

	  HybridRendererBase.prototype.getThreeDContainerByPos = function (pos) {
	    var i = 0;
	    var len = this.threeDElements.length;

	    while (i < len) {
	      if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {
	        return this.threeDElements[i].perspectiveElem;
	      }

	      i += 1;
	    }

	    return null;
	  };

	  HybridRendererBase.prototype.createThreeDContainer = function (pos, type) {
	    var perspectiveElem = createTag('div');
	    var style;
	    var containerStyle;
	    styleDiv(perspectiveElem);
	    var container = createTag('div');
	    styleDiv(container);

	    if (type === '3d') {
	      style = perspectiveElem.style;
	      style.width = this.globalData.compSize.w + 'px';
	      style.height = this.globalData.compSize.h + 'px';
	      var center = '50% 50%';
	      style.webkitTransformOrigin = center;
	      style.mozTransformOrigin = center;
	      style.transformOrigin = center;
	      containerStyle = container.style;
	      var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
	      containerStyle.transform = matrix;
	      containerStyle.webkitTransform = matrix;
	    }

	    perspectiveElem.appendChild(container); // this.resizerElem.appendChild(perspectiveElem);

	    var threeDContainerData = {
	      container: container,
	      perspectiveElem: perspectiveElem,
	      startPos: pos,
	      endPos: pos,
	      type: type
	    };
	    this.threeDElements.push(threeDContainerData);
	    return threeDContainerData;
	  };

	  HybridRendererBase.prototype.build3dContainers = function () {
	    var i;
	    var len = this.layers.length;
	    var lastThreeDContainerData;
	    var currentContainer = '';

	    for (i = 0; i < len; i += 1) {
	      if (this.layers[i].ddd && this.layers[i].ty !== 3) {
	        if (currentContainer !== '3d') {
	          currentContainer = '3d';
	          lastThreeDContainerData = this.createThreeDContainer(i, '3d');
	        }

	        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);
	      } else {
	        if (currentContainer !== '2d') {
	          currentContainer = '2d';
	          lastThreeDContainerData = this.createThreeDContainer(i, '2d');
	        }

	        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);
	      }
	    }

	    len = this.threeDElements.length;

	    for (i = len - 1; i >= 0; i -= 1) {
	      this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);
	    }
	  };

	  HybridRendererBase.prototype.addTo3dContainer = function (elem, pos) {
	    var i = 0;
	    var len = this.threeDElements.length;

	    while (i < len) {
	      if (pos <= this.threeDElements[i].endPos) {
	        var j = this.threeDElements[i].startPos;
	        var nextElement;

	        while (j < pos) {
	          if (this.elements[j] && this.elements[j].getBaseElement) {
	            nextElement = this.elements[j].getBaseElement();
	          }

	          j += 1;
	        }

	        if (nextElement) {
	          this.threeDElements[i].container.insertBefore(elem, nextElement);
	        } else {
	          this.threeDElements[i].container.appendChild(elem);
	        }

	        break;
	      }

	      i += 1;
	    }
	  };

	  HybridRendererBase.prototype.configAnimation = function (animData) {
	    var resizerElem = createTag('div');
	    var wrapper = this.animationItem.wrapper;
	    var style = resizerElem.style;
	    style.width = animData.w + 'px';
	    style.height = animData.h + 'px';
	    this.resizerElem = resizerElem;
	    styleDiv(resizerElem);
	    style.transformStyle = 'flat';
	    style.mozTransformStyle = 'flat';
	    style.webkitTransformStyle = 'flat';

	    if (this.renderConfig.className) {
	      resizerElem.setAttribute('class', this.renderConfig.className);
	    }

	    wrapper.appendChild(resizerElem);
	    style.overflow = 'hidden';
	    var svg = createNS('svg');
	    svg.setAttribute('width', '1');
	    svg.setAttribute('height', '1');
	    styleDiv(svg);
	    this.resizerElem.appendChild(svg);
	    var defs = createNS('defs');
	    svg.appendChild(defs);
	    this.data = animData; // Mask animation

	    this.setupGlobalData(animData, svg);
	    this.globalData.defs = defs;
	    this.layers = animData.layers;
	    this.layerElement = this.resizerElem;
	    this.build3dContainers();
	    this.updateContainerSize();
	  };

	  HybridRendererBase.prototype.destroy = function () {
	    if (this.animationItem.wrapper) {
	      this.animationItem.wrapper.innerText = '';
	    }

	    this.animationItem.container = null;
	    this.globalData.defs = null;
	    var i;
	    var len = this.layers ? this.layers.length : 0;

	    for (i = 0; i < len; i += 1) {
	      if (this.elements[i] && this.elements[i].destroy) {
	        this.elements[i].destroy();
	      }
	    }

	    this.elements.length = 0;
	    this.destroyed = true;
	    this.animationItem = null;
	  };

	  HybridRendererBase.prototype.updateContainerSize = function () {
	    var elementWidth = this.animationItem.wrapper.offsetWidth;
	    var elementHeight = this.animationItem.wrapper.offsetHeight;
	    var elementRel = elementWidth / elementHeight;
	    var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;
	    var sx;
	    var sy;
	    var tx;
	    var ty;

	    if (animationRel > elementRel) {
	      sx = elementWidth / this.globalData.compSize.w;
	      sy = elementWidth / this.globalData.compSize.w;
	      tx = 0;
	      ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;
	    } else {
	      sx = elementHeight / this.globalData.compSize.h;
	      sy = elementHeight / this.globalData.compSize.h;
	      tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;
	      ty = 0;
	    }

	    var style = this.resizerElem.style;
	    style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';
	    style.transform = style.webkitTransform;
	  };

	  HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame;

	  HybridRendererBase.prototype.hide = function () {
	    this.resizerElem.style.display = 'none';
	  };

	  HybridRendererBase.prototype.show = function () {
	    this.resizerElem.style.display = 'block';
	  };

	  HybridRendererBase.prototype.initItems = function () {
	    this.buildAllItems();

	    if (this.camera) {
	      this.camera.setup();
	    } else {
	      var cWidth = this.globalData.compSize.w;
	      var cHeight = this.globalData.compSize.h;
	      var i;
	      var len = this.threeDElements.length;

	      for (i = 0; i < len; i += 1) {
	        var style = this.threeDElements[i].perspectiveElem.style;
	        style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';
	        style.perspective = style.webkitPerspective;
	      }
	    }
	  };

	  HybridRendererBase.prototype.searchExtraCompositions = function (assets) {
	    var i;
	    var len = assets.length;
	    var floatingContainer = createTag('div');

	    for (i = 0; i < len; i += 1) {
	      if (assets[i].xt) {
	        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);
	        comp.initExpressions();
	        this.globalData.projectInterface.registerComposition(comp);
	      }
	    }
	  };

	  function HCompElement(data, globalData, comp) {
	    this.layers = data.layers;
	    this.supports3d = !data.hasMask;
	    this.completeLayers = false;
	    this.pendingElements = [];
	    this.elements = this.layers ? createSizedArray(this.layers.length) : [];
	    this.initElement(data, globalData, comp);
	    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {
	      _placeholder: true
	    };
	  }

	  extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement);
	  HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;

	  HCompElement.prototype.createContainerElements = function () {
	    this._createBaseContainerElements(); // divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';


	    if (this.data.hasMask) {
	      this.svgElement.setAttribute('width', this.data.w);
	      this.svgElement.setAttribute('height', this.data.h);
	      this.transformedElement = this.baseElement;
	    } else {
	      this.transformedElement = this.layerElement;
	    }
	  };

	  HCompElement.prototype.addTo3dContainer = function (elem, pos) {
	    var j = 0;
	    var nextElement;

	    while (j < pos) {
	      if (this.elements[j] && this.elements[j].getBaseElement) {
	        nextElement = this.elements[j].getBaseElement();
	      }

	      j += 1;
	    }

	    if (nextElement) {
	      this.layerElement.insertBefore(elem, nextElement);
	    } else {
	      this.layerElement.appendChild(elem);
	    }
	  };

	  HCompElement.prototype.createComp = function (data) {
	    if (!this.supports3d) {
	      return new SVGCompElement(data, this.globalData, this);
	    }

	    return new HCompElement(data, this.globalData, this);
	  };

	  function HybridRenderer(animationItem, config) {
	    this.animationItem = animationItem;
	    this.layers = null;
	    this.renderedFrame = -1;
	    this.renderConfig = {
	      className: config && config.className || '',
	      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',
	      hideOnTransparent: !(config && config.hideOnTransparent === false),
	      filterSize: {
	        width: config && config.filterSize && config.filterSize.width || '400%',
	        height: config && config.filterSize && config.filterSize.height || '400%',
	        x: config && config.filterSize && config.filterSize.x || '-100%',
	        y: config && config.filterSize && config.filterSize.y || '-100%'
	      },
	      runExpressions: !config || config.runExpressions === undefined || config.runExpressions
	    };
	    this.globalData = {
	      _mdf: false,
	      frameNum: -1,
	      renderConfig: this.renderConfig
	    };
	    this.pendingElements = [];
	    this.elements = [];
	    this.threeDElements = [];
	    this.destroyed = false;
	    this.camera = null;
	    this.supports3d = true;
	    this.rendererType = 'html';
	  }

	  extendPrototype([HybridRendererBase], HybridRenderer);

	  HybridRenderer.prototype.createComp = function (data) {
	    if (!this.supports3d) {
	      return new SVGCompElement(data, this.globalData, this);
	    }

	    return new HCompElement(data, this.globalData, this);
	  };

	  var CompExpressionInterface = function () {
	    return function (comp) {
	      function _thisLayerFunction(name) {
	        var i = 0;
	        var len = comp.layers.length;

	        while (i < len) {
	          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {
	            return comp.elements[i].layerInterface;
	          }

	          i += 1;
	        }

	        return null; // return {active:false};
	      }

	      Object.defineProperty(_thisLayerFunction, '_name', {
	        value: comp.data.nm
	      });
	      _thisLayerFunction.layer = _thisLayerFunction;
	      _thisLayerFunction.pixelAspect = 1;
	      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;
	      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;
	      _thisLayerFunction.pixelAspect = 1;
	      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;
	      _thisLayerFunction.displayStartTime = 0;
	      _thisLayerFunction.numLayers = comp.layers.length;
	      return _thisLayerFunction;
	    };
	  }();

	  function _typeof$2(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$2 = function _typeof(obj) { return typeof obj; }; } else { _typeof$2 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$2(obj); }

	  /* eslint-disable */

	  /*
	   Copyright 2014 David Bau.

	   Permission is hereby granted, free of charge, to any person obtaining
	   a copy of this software and associated documentation files (the
	   "Software"), to deal in the Software without restriction, including
	   without limitation the rights to use, copy, modify, merge, publish,
	   distribute, sublicense, and/or sell copies of the Software, and to
	   permit persons to whom the Software is furnished to do so, subject to
	   the following conditions:

	   The above copyright notice and this permission notice shall be
	   included in all copies or substantial portions of the Software.

	   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

	   */
	  function seedRandom(pool, math) {
	    //
	    // The following constants are related to IEEE 754 limits.
	    //
	    var global = this,
	        width = 256,
	        // each RC4 output is 0 <= x < 256
	    chunks = 6,
	        // at least six RC4 outputs for each double
	    digits = 52,
	        // there are 52 significant digits in a double
	    rngname = 'random',
	        // rngname: name for Math.random and Math.seedrandom
	    startdenom = math.pow(width, chunks),
	        significance = math.pow(2, digits),
	        overflow = significance * 2,
	        mask = width - 1,
	        nodecrypto; // node.js crypto module, initialized at the bottom.
	    //
	    // seedrandom()
	    // This is the seedrandom function described above.
	    //

	    function seedrandom(seed, options, callback) {
	      var key = [];
	      options = options === true ? {
	        entropy: true
	      } : options || {}; // Flatten the seed string or build one from local entropy if needed.

	      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.

	      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains
	      // randomness in every bit of the mantissa of the IEEE 754 value.

	      var prng = function prng() {
	        var n = arc4.g(chunks),
	            // Start with a numerator n < 2 ^ 48
	        d = startdenom,
	            //   and denominator d = 2 ^ 48.
	        x = 0; //   and no 'extra last byte'.

	        while (n < significance) {
	          // Fill up all significant digits by
	          n = (n + x) * width; //   shifting numerator and

	          d *= width; //   denominator and generating a

	          x = arc4.g(1); //   new least-significant-byte.
	        }

	        while (n >= overflow) {
	          // To avoid rounding up, before adding
	          n /= 2; //   last byte, shift everything

	          d /= 2; //   right using integer math until

	          x >>>= 1; //   we have exactly the desired bits.
	        }

	        return (n + x) / d; // Form the number within [0, 1).
	      };

	      prng.int32 = function () {
	        return arc4.g(4) | 0;
	      };

	      prng.quick = function () {
	        return arc4.g(4) / 0x100000000;
	      };

	      prng["double"] = prng; // Mix the randomness into accumulated entropy.

	      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.

	      return (options.pass || callback || function (prng, seed, is_math_call, state) {
	        if (state) {
	          // Load the arc4 state from the given state if it has an S array.
	          if (state.S) {
	            copy(state, arc4);
	          } // Only provide the .state method if requested via options.state.


	          prng.state = function () {
	            return copy(arc4, {});
	          };
	        } // If called as a method of Math (Math.seedrandom()), mutate
	        // Math.random because that is how seedrandom.js has worked since v1.0.


	        if (is_math_call) {
	          math[rngname] = prng;
	          return seed;
	        } // Otherwise, it is a newer calling convention, so return the
	        // prng directly.
	        else return prng;
	      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);
	    }

	    math['seed' + rngname] = seedrandom; //
	    // ARC4
	    //
	    // An ARC4 implementation.  The constructor takes a key in the form of
	    // an array of at most (width) integers that should be 0 <= x < (width).
	    //
	    // The g(count) method returns a pseudorandom integer that concatenates
	    // the next (count) outputs from ARC4.  Its return value is a number x
	    // that is in the range 0 <= x < (width ^ count).
	    //

	    function ARC4(key) {
	      var t,
	          keylen = key.length,
	          me = this,
	          i = 0,
	          j = me.i = me.j = 0,
	          s = me.S = []; // The empty key [] is treated as [0].

	      if (!keylen) {
	        key = [keylen++];
	      } // Set up S using the standard key scheduling algorithm.


	      while (i < width) {
	        s[i] = i++;
	      }

	      for (i = 0; i < width; i++) {
	        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];
	        s[j] = t;
	      } // The "g" method returns the next (count) outputs as one number.


	      me.g = function (count) {
	        // Using instance members instead of closure state nearly doubles speed.
	        var t,
	            r = 0,
	            i = me.i,
	            j = me.j,
	            s = me.S;

	        while (count--) {
	          t = s[i = mask & i + 1];
	          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];
	        }

	        me.i = i;
	        me.j = j;
	        return r; // For robust unpredictability, the function call below automatically
	        // discards an initial batch of values.  This is called RC4-drop[256].
	        // See http://google.com/search?q=rsa+fluhrer+response&btnI
	      };
	    } //
	    // copy()
	    // Copies internal state of ARC4 to or from a plain object.
	    //


	    function copy(f, t) {
	      t.i = f.i;
	      t.j = f.j;
	      t.S = f.S.slice();
	      return t;
	    } //
	    // flatten()
	    // Converts an object tree to nested arrays of strings.
	    //


	    function flatten(obj, depth) {
	      var result = [],
	          typ = _typeof$2(obj),
	          prop;

	      if (depth && typ == 'object') {
	        for (prop in obj) {
	          try {
	            result.push(flatten(obj[prop], depth - 1));
	          } catch (e) {}
	        }
	      }

	      return result.length ? result : typ == 'string' ? obj : obj + '\0';
	    } //
	    // mixkey()
	    // Mixes a string seed into a key that is an array of integers, and
	    // returns a shortened string seed that is equivalent to the result key.
	    //


	    function mixkey(seed, key) {
	      var stringseed = seed + '',
	          smear,
	          j = 0;

	      while (j < stringseed.length) {
	        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);
	      }

	      return tostring(key);
	    } //
	    // autoseed()
	    // Returns an object for autoseeding, using window.crypto and Node crypto
	    // module if available.
	    //


	    function autoseed() {
	      try {
	        if (nodecrypto) ;

	        var out = new Uint8Array(width);
	        (global.crypto || global.msCrypto).getRandomValues(out);
	        return tostring(out);
	      } catch (e) {
	        var browser = global.navigator,
	            plugins = browser && browser.plugins;
	        return [+new Date(), global, plugins, global.screen, tostring(pool)];
	      }
	    } //
	    // tostring()
	    // Converts an array of charcodes to a string
	    //


	    function tostring(a) {
	      return String.fromCharCode.apply(0, a);
	    } //
	    // When seedrandom.js is loaded, we immediately mix a few bits
	    // from the built-in RNG into the entropy pool.  Because we do
	    // not want to interfere with deterministic PRNG state later,
	    // seedrandom will not call math.random on its own again after
	    // initialization.
	    //


	    mixkey(math.random(), pool); //
	    // Nodejs and AMD support: export the implementation as a module using
	    // either convention.
	    //
	    // End anonymous scope, and pass initial values.
	  }

	  function initialize$2(BMMath) {
	    seedRandom([], BMMath);
	  }

	  var propTypes = {
	    SHAPE: 'shape'
	  };

	  function _typeof$1(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$1(obj); }

	  var ExpressionManager = function () {

	    var ob = {};
	    var Math = BMMath;
	    var window = null;
	    var document = null;
	    var XMLHttpRequest = null;
	    var fetch = null;
	    var frames = null;
	    var _lottieGlobal = {};
	    initialize$2(BMMath);

	    function resetFrame() {
	      _lottieGlobal = {};
	    }

	    function $bm_isInstanceOfArray(arr) {
	      return arr.constructor === Array || arr.constructor === Float32Array;
	    }

	    function isNumerable(tOfV, v) {
	      return tOfV === 'number' || v instanceof Number || tOfV === 'boolean' || tOfV === 'string';
	    }

	    function $bm_neg(a) {
	      var tOfA = _typeof$1(a);

	      if (tOfA === 'number' || a instanceof Number || tOfA === 'boolean') {
	        return -a;
	      }

	      if ($bm_isInstanceOfArray(a)) {
	        var i;
	        var lenA = a.length;
	        var retArr = [];

	        for (i = 0; i < lenA; i += 1) {
	          retArr[i] = -a[i];
	        }

	        return retArr;
	      }

	      if (a.propType) {
	        return a.v;
	      }

	      return -a;
	    }

	    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get;
	    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get;
	    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get;

	    function sum(a, b) {
	      var tOfA = _typeof$1(a);

	      var tOfB = _typeof$1(b);

	      if (isNumerable(tOfA, a) && isNumerable(tOfB, b) || tOfA === 'string' || tOfB === 'string') {
	        return a + b;
	      }

	      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
	        a = a.slice(0);
	        a[0] += b;
	        return a;
	      }

	      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
	        b = b.slice(0);
	        b[0] = a + b[0];
	        return b;
	      }

	      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {
	        var i = 0;
	        var lenA = a.length;
	        var lenB = b.length;
	        var retArr = [];

	        while (i < lenA || i < lenB) {
	          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {
	            retArr[i] = a[i] + b[i];
	          } else {
	            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];
	          }

	          i += 1;
	        }

	        return retArr;
	      }

	      return 0;
	    }

	    var add = sum;

	    function sub(a, b) {
	      var tOfA = _typeof$1(a);

	      var tOfB = _typeof$1(b);

	      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
	        if (tOfA === 'string') {
	          a = parseInt(a, 10);
	        }

	        if (tOfB === 'string') {
	          b = parseInt(b, 10);
	        }

	        return a - b;
	      }

	      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
	        a = a.slice(0);
	        a[0] -= b;
	        return a;
	      }

	      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
	        b = b.slice(0);
	        b[0] = a - b[0];
	        return b;
	      }

	      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {
	        var i = 0;
	        var lenA = a.length;
	        var lenB = b.length;
	        var retArr = [];

	        while (i < lenA || i < lenB) {
	          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {
	            retArr[i] = a[i] - b[i];
	          } else {
	            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];
	          }

	          i += 1;
	        }

	        return retArr;
	      }

	      return 0;
	    }

	    function mul(a, b) {
	      var tOfA = _typeof$1(a);

	      var tOfB = _typeof$1(b);

	      var arr;

	      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
	        return a * b;
	      }

	      var i;
	      var len;

	      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
	        len = a.length;
	        arr = createTypedArray('float32', len);

	        for (i = 0; i < len; i += 1) {
	          arr[i] = a[i] * b;
	        }

	        return arr;
	      }

	      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
	        len = b.length;
	        arr = createTypedArray('float32', len);

	        for (i = 0; i < len; i += 1) {
	          arr[i] = a * b[i];
	        }

	        return arr;
	      }

	      return 0;
	    }

	    function div(a, b) {
	      var tOfA = _typeof$1(a);

	      var tOfB = _typeof$1(b);

	      var arr;

	      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
	        return a / b;
	      }

	      var i;
	      var len;

	      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
	        len = a.length;
	        arr = createTypedArray('float32', len);

	        for (i = 0; i < len; i += 1) {
	          arr[i] = a[i] / b;
	        }

	        return arr;
	      }

	      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
	        len = b.length;
	        arr = createTypedArray('float32', len);

	        for (i = 0; i < len; i += 1) {
	          arr[i] = a / b[i];
	        }

	        return arr;
	      }

	      return 0;
	    }

	    function mod(a, b) {
	      if (typeof a === 'string') {
	        a = parseInt(a, 10);
	      }

	      if (typeof b === 'string') {
	        b = parseInt(b, 10);
	      }

	      return a % b;
	    }

	    var $bm_sum = sum;
	    var $bm_sub = sub;
	    var $bm_mul = mul;
	    var $bm_div = div;
	    var $bm_mod = mod;

	    function clamp(num, min, max) {
	      if (min > max) {
	        var mm = max;
	        max = min;
	        min = mm;
	      }

	      return Math.min(Math.max(num, min), max);
	    }

	    function radiansToDegrees(val) {
	      return val / degToRads;
	    }

	    var radians_to_degrees = radiansToDegrees;

	    function degreesToRadians(val) {
	      return val * degToRads;
	    }

	    var degrees_to_radians = radiansToDegrees;
	    var helperLengthArray = [0, 0, 0, 0, 0, 0];

	    function length(arr1, arr2) {
	      if (typeof arr1 === 'number' || arr1 instanceof Number) {
	        arr2 = arr2 || 0;
	        return Math.abs(arr1 - arr2);
	      }

	      if (!arr2) {
	        arr2 = helperLengthArray;
	      }

	      var i;
	      var len = Math.min(arr1.length, arr2.length);
	      var addedLength = 0;

	      for (i = 0; i < len; i += 1) {
	        addedLength += Math.pow(arr2[i] - arr1[i], 2);
	      }

	      return Math.sqrt(addedLength);
	    }

	    function normalize(vec) {
	      return div(vec, length(vec));
	    }

	    function rgbToHsl(val) {
	      var r = val[0];
	      var g = val[1];
	      var b = val[2];
	      var max = Math.max(r, g, b);
	      var min = Math.min(r, g, b);
	      var h;
	      var s;
	      var l = (max + min) / 2;

	      if (max === min) {
	        h = 0; // achromatic

	        s = 0; // achromatic
	      } else {
	        var d = max - min;
	        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);

	        switch (max) {
	          case r:
	            h = (g - b) / d + (g < b ? 6 : 0);
	            break;

	          case g:
	            h = (b - r) / d + 2;
	            break;

	          case b:
	            h = (r - g) / d + 4;
	            break;
	        }

	        h /= 6;
	      }

	      return [h, s, l, val[3]];
	    }

	    function hue2rgb(p, q, t) {
	      if (t < 0) t += 1;
	      if (t > 1) t -= 1;
	      if (t < 1 / 6) return p + (q - p) * 6 * t;
	      if (t < 1 / 2) return q;
	      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
	      return p;
	    }

	    function hslToRgb(val) {
	      var h = val[0];
	      var s = val[1];
	      var l = val[2];
	      var r;
	      var g;
	      var b;

	      if (s === 0) {
	        r = l; // achromatic

	        b = l; // achromatic

	        g = l; // achromatic
	      } else {
	        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
	        var p = 2 * l - q;
	        r = hue2rgb(p, q, h + 1 / 3);
	        g = hue2rgb(p, q, h);
	        b = hue2rgb(p, q, h - 1 / 3);
	      }

	      return [r, g, b, val[3]];
	    }

	    function linear(t, tMin, tMax, value1, value2) {
	      if (value1 === undefined || value2 === undefined) {
	        value1 = tMin;
	        value2 = tMax;
	        tMin = 0;
	        tMax = 1;
	      }

	      if (tMax < tMin) {
	        var _tMin = tMax;
	        tMax = tMin;
	        tMin = _tMin;
	      }

	      if (t <= tMin) {
	        return value1;
	      }

	      if (t >= tMax) {
	        return value2;
	      }

	      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);

	      if (!value1.length) {
	        return value1 + (value2 - value1) * perc;
	      }

	      var i;
	      var len = value1.length;
	      var arr = createTypedArray('float32', len);

	      for (i = 0; i < len; i += 1) {
	        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;
	      }

	      return arr;
	    }

	    function random(min, max) {
	      if (max === undefined) {
	        if (min === undefined) {
	          min = 0;
	          max = 1;
	        } else {
	          max = min;
	          min = undefined;
	        }
	      }

	      if (max.length) {
	        var i;
	        var len = max.length;

	        if (!min) {
	          min = createTypedArray('float32', len);
	        }

	        var arr = createTypedArray('float32', len);
	        var rnd = BMMath.random();

	        for (i = 0; i < len; i += 1) {
	          arr[i] = min[i] + rnd * (max[i] - min[i]);
	        }

	        return arr;
	      }

	      if (min === undefined) {
	        min = 0;
	      }

	      var rndm = BMMath.random();
	      return min + rndm * (max - min);
	    }

	    function createPath(points, inTangents, outTangents, closed) {
	      var i;
	      var len = points.length;
	      var path = shapePool.newElement();
	      path.setPathData(!!closed, len);
	      var arrPlaceholder = [0, 0];
	      var inVertexPoint;
	      var outVertexPoint;

	      for (i = 0; i < len; i += 1) {
	        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;
	        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;
	        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);
	      }

	      return path;
	    }

	    function initiateExpression(elem, data, property) {
	      // Bail out if we don't want expressions
	      function noOp(_value) {
	        return _value;
	      }

	      if (!elem.globalData.renderConfig.runExpressions) {
	        return noOp;
	      }

	      var val = data.x;
	      var needsVelocity = /velocity(?![\w\d])/.test(val);

	      var _needsRandom = val.indexOf('random') !== -1;

	      var elemType = elem.data.ty;
	      var transform;
	      var $bm_transform;
	      var content;
	      var effect;
	      var thisProperty = property;
	      thisProperty.valueAtTime = thisProperty.getValueAtTime;
	      Object.defineProperty(thisProperty, 'value', {
	        get: function get() {
	          return thisProperty.v;
	        }
	      });
	      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;
	      elem.comp.displayStartTime = 0;
	      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;
	      var outPoint = elem.data.op / elem.comp.globalData.frameRate;
	      var width = elem.data.sw ? elem.data.sw : 0;
	      var height = elem.data.sh ? elem.data.sh : 0;
	      var name = elem.data.nm;
	      var loopIn;
	      var loop_in;
	      var loopOut;
	      var loop_out;
	      var smooth;
	      var toWorld;
	      var fromWorld;
	      var fromComp;
	      var toComp;
	      var fromCompToSurface;
	      var position;
	      var rotation;
	      var anchorPoint;
	      var scale;
	      var thisLayer;
	      var thisComp;
	      var mask;
	      var valueAtTime;
	      var velocityAtTime;
	      var scoped_bm_rt; // val = val.replace(/(\\?"|')((http)(s)?(:\/))?\/.*?(\\?"|')/g, "\"\""); // deter potential network calls

	      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}]')[0]; // eslint-disable-line no-eval

	      var numKeys = property.kf ? data.k.length : 0;
	      var active = !this.data || this.data.hd !== true;

	      var wiggle = function wiggle(freq, amp) {
	        var iWiggle;
	        var j;
	        var lenWiggle = this.pv.length ? this.pv.length : 1;
	        var addedAmps = createTypedArray('float32', lenWiggle);
	        freq = 5;
	        var iterations = Math.floor(time * freq);
	        iWiggle = 0;
	        j = 0;

	        while (iWiggle < iterations) {
	          // var rnd = BMMath.random();
	          for (j = 0; j < lenWiggle; j += 1) {
	            addedAmps[j] += -amp + amp * 2 * BMMath.random(); // addedAmps[j] += -amp + amp*2*rnd;
	          }

	          iWiggle += 1;
	        } // var rnd2 = BMMath.random();


	        var periods = time * freq;
	        var perc = periods - Math.floor(periods);
	        var arr = createTypedArray('float32', lenWiggle);

	        if (lenWiggle > 1) {
	          for (j = 0; j < lenWiggle; j += 1) {
	            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc; // arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;
	            // arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);
	          }

	          return arr;
	        }

	        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;
	      }.bind(this);

	      if (thisProperty.loopIn) {
	        loopIn = thisProperty.loopIn.bind(thisProperty);
	        loop_in = loopIn;
	      }

	      if (thisProperty.loopOut) {
	        loopOut = thisProperty.loopOut.bind(thisProperty);
	        loop_out = loopOut;
	      }

	      if (thisProperty.smooth) {
	        smooth = thisProperty.smooth.bind(thisProperty);
	      }

	      function loopInDuration(type, duration) {
	        return loopIn(type, duration, true);
	      }

	      function loopOutDuration(type, duration) {
	        return loopOut(type, duration, true);
	      }

	      if (this.getValueAtTime) {
	        valueAtTime = this.getValueAtTime.bind(this);
	      }

	      if (this.getVelocityAtTime) {
	        velocityAtTime = this.getVelocityAtTime.bind(this);
	      }

	      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);

	      function lookAt(elem1, elem2) {
	        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];
	        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;
	        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;
	        return [yaw, pitch, 0];
	      }

	      function easeOut(t, tMin, tMax, val1, val2) {
	        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);
	      }

	      function easeIn(t, tMin, tMax, val1, val2) {
	        return applyEase(easeInBez, t, tMin, tMax, val1, val2);
	      }

	      function ease(t, tMin, tMax, val1, val2) {
	        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);
	      }

	      function applyEase(fn, t, tMin, tMax, val1, val2) {
	        if (val1 === undefined) {
	          val1 = tMin;
	          val2 = tMax;
	        } else {
	          t = (t - tMin) / (tMax - tMin);
	        }

	        if (t > 1) {
	          t = 1;
	        } else if (t < 0) {
	          t = 0;
	        }

	        var mult = fn(t);

	        if ($bm_isInstanceOfArray(val1)) {
	          var iKey;
	          var lenKey = val1.length;
	          var arr = createTypedArray('float32', lenKey);

	          for (iKey = 0; iKey < lenKey; iKey += 1) {
	            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];
	          }

	          return arr;
	        }

	        return (val2 - val1) * mult + val1;
	      }

	      function nearestKey(time) {
	        var iKey;
	        var lenKey = data.k.length;
	        var index;
	        var keyTime;

	        if (!data.k.length || typeof data.k[0] === 'number') {
	          index = 0;
	          keyTime = 0;
	        } else {
	          index = -1;
	          time *= elem.comp.globalData.frameRate;

	          if (time < data.k[0].t) {
	            index = 1;
	            keyTime = data.k[0].t;
	          } else {
	            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {
	              if (time === data.k[iKey].t) {
	                index = iKey + 1;
	                keyTime = data.k[iKey].t;
	                break;
	              } else if (time > data.k[iKey].t && time < data.k[iKey + 1].t) {
	                if (time - data.k[iKey].t > data.k[iKey + 1].t - time) {
	                  index = iKey + 2;
	                  keyTime = data.k[iKey + 1].t;
	                } else {
	                  index = iKey + 1;
	                  keyTime = data.k[iKey].t;
	                }

	                break;
	              }
	            }

	            if (index === -1) {
	              index = iKey + 1;
	              keyTime = data.k[iKey].t;
	            }
	          }
	        }

	        var obKey = {};
	        obKey.index = index;
	        obKey.time = keyTime / elem.comp.globalData.frameRate;
	        return obKey;
	      }

	      function key(ind) {
	        var obKey;
	        var iKey;
	        var lenKey;

	        if (!data.k.length || typeof data.k[0] === 'number') {
	          throw new Error('The property has no keyframe at index ' + ind);
	        }

	        ind -= 1;
	        obKey = {
	          time: data.k[ind].t / elem.comp.globalData.frameRate,
	          value: []
	        };
	        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], 's') ? data.k[ind].s : data.k[ind - 1].e;
	        lenKey = arr.length;

	        for (iKey = 0; iKey < lenKey; iKey += 1) {
	          obKey[iKey] = arr[iKey];
	          obKey.value[iKey] = arr[iKey];
	        }

	        return obKey;
	      }

	      function framesToTime(fr, fps) {
	        if (!fps) {
	          fps = elem.comp.globalData.frameRate;
	        }

	        return fr / fps;
	      }

	      function timeToFrames(t, fps) {
	        if (!t && t !== 0) {
	          t = time;
	        }

	        if (!fps) {
	          fps = elem.comp.globalData.frameRate;
	        }

	        return t * fps;
	      }

	      function seedRandom(seed) {
	        BMMath.seedrandom(randSeed + seed);
	      }

	      function sourceRectAtTime() {
	        return elem.sourceRectAtTime();
	      }

	      function substring(init, end) {
	        if (typeof value === 'string') {
	          if (end === undefined) {
	            return value.substring(init);
	          }

	          return value.substring(init, end);
	        }

	        return '';
	      }

	      function substr(init, end) {
	        if (typeof value === 'string') {
	          if (end === undefined) {
	            return value.substr(init);
	          }

	          return value.substr(init, end);
	        }

	        return '';
	      }

	      function posterizeTime(framesPerSecond) {
	        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;
	        value = valueAtTime(time);
	      }

	      var time;
	      var velocity;
	      var value;
	      var text;
	      var textIndex;
	      var textTotal;
	      var selectorValue;
	      var index = elem.data.ind;
	      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);
	      var parent;
	      var randSeed = Math.floor(Math.random() * 1000000);
	      var globalData = elem.globalData;

	      function executeExpression(_value) {
	        // globalData.pushExpression();
	        value = _value;

	        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {
	          return value;
	        }

	        if (this.propType === 'textSelector') {
	          textIndex = this.textIndex;
	          textTotal = this.textTotal;
	          selectorValue = this.selectorValue;
	        }

	        if (!thisLayer) {
	          text = elem.layerInterface.text;
	          thisLayer = elem.layerInterface;
	          thisComp = elem.comp.compInterface;
	          toWorld = thisLayer.toWorld.bind(thisLayer);
	          fromWorld = thisLayer.fromWorld.bind(thisLayer);
	          fromComp = thisLayer.fromComp.bind(thisLayer);
	          toComp = thisLayer.toComp.bind(thisLayer);
	          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;
	          fromCompToSurface = fromComp;
	        }

	        if (!transform) {
	          transform = elem.layerInterface('ADBE Transform Group');
	          $bm_transform = transform;

	          if (transform) {
	            anchorPoint = transform.anchorPoint;
	            /* position = transform.position;
	                      rotation = transform.rotation;
	                      scale = transform.scale; */
	          }
	        }

	        if (elemType === 4 && !content) {
	          content = thisLayer('ADBE Root Vectors Group');
	        }

	        if (!effect) {
	          effect = thisLayer(4);
	        }

	        hasParent = !!(elem.hierarchy && elem.hierarchy.length);

	        if (hasParent && !parent) {
	          parent = elem.hierarchy[0].layerInterface;
	        }

	        time = this.comp.renderedFrame / this.comp.globalData.frameRate;

	        if (_needsRandom) {
	          seedRandom(randSeed + time);
	        }

	        if (needsVelocity) {
	          velocity = velocityAtTime(time);
	        }

	        expression_function();
	        this.frameExpressionId = elem.globalData.frameId; // TODO: Check if it's possible to return on ShapeInterface the .v value
	        // Changed this to a ternary operation because Rollup failed compiling it correctly

	        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt;
	        return scoped_bm_rt;
	      } // Bundlers will see these as dead code and unless we reference them


	      executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData];
	      return executeExpression;
	    }

	    ob.initiateExpression = initiateExpression;
	    ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath, _lottieGlobal];
	    ob.resetFrame = resetFrame;
	    return ob;
	  }();

	  var Expressions = function () {
	    var ob = {};
	    ob.initExpressions = initExpressions;
	    ob.resetFrame = ExpressionManager.resetFrame;

	    function initExpressions(animation) {
	      var stackCount = 0;
	      var registers = [];

	      function pushExpression() {
	        stackCount += 1;
	      }

	      function popExpression() {
	        stackCount -= 1;

	        if (stackCount === 0) {
	          releaseInstances();
	        }
	      }

	      function registerExpressionProperty(expression) {
	        if (registers.indexOf(expression) === -1) {
	          registers.push(expression);
	        }
	      }

	      function releaseInstances() {
	        var i;
	        var len = registers.length;

	        for (i = 0; i < len; i += 1) {
	          registers[i].release();
	        }

	        registers.length = 0;
	      }

	      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);
	      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);
	      animation.renderer.globalData.pushExpression = pushExpression;
	      animation.renderer.globalData.popExpression = popExpression;
	      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;
	    }

	    return ob;
	  }();

	  var MaskManagerInterface = function () {
	    function MaskInterface(mask, data) {
	      this._mask = mask;
	      this._data = data;
	    }

	    Object.defineProperty(MaskInterface.prototype, 'maskPath', {
	      get: function get() {
	        if (this._mask.prop.k) {
	          this._mask.prop.getValue();
	        }

	        return this._mask.prop;
	      }
	    });
	    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {
	      get: function get() {
	        if (this._mask.op.k) {
	          this._mask.op.getValue();
	        }

	        return this._mask.op.v * 100;
	      }
	    });

	    var MaskManager = function MaskManager(maskManager) {
	      var _masksInterfaces = createSizedArray(maskManager.viewData.length);

	      var i;
	      var len = maskManager.viewData.length;

	      for (i = 0; i < len; i += 1) {
	        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);
	      }

	      var maskFunction = function maskFunction(name) {
	        i = 0;

	        while (i < len) {
	          if (maskManager.masksProperties[i].nm === name) {
	            return _masksInterfaces[i];
	          }

	          i += 1;
	        }

	        return null;
	      };

	      return maskFunction;
	    };

	    return MaskManager;
	  }();

	  var ExpressionPropertyInterface = function () {
	    var defaultUnidimensionalValue = {
	      pv: 0,
	      v: 0,
	      mult: 1
	    };
	    var defaultMultidimensionalValue = {
	      pv: [0, 0, 0],
	      v: [0, 0, 0],
	      mult: 1
	    };

	    function completeProperty(expressionValue, property, type) {
	      Object.defineProperty(expressionValue, 'velocity', {
	        get: function get() {
	          return property.getVelocityAtTime(property.comp.currentFrame);
	        }
	      });
	      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;

	      expressionValue.key = function (pos) {
	        if (!expressionValue.numKeys) {
	          return 0;
	        }

	        var value = '';

	        if ('s' in property.keyframes[pos - 1]) {
	          value = property.keyframes[pos - 1].s;
	        } else if ('e' in property.keyframes[pos - 2]) {
	          value = property.keyframes[pos - 2].e;
	        } else {
	          value = property.keyframes[pos - 2].s;
	        }

	        var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value); // eslint-disable-line no-new-wrappers

	        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;
	        valueProp.value = type === 'unidimensional' ? value[0] : value;
	        return valueProp;
	      };

	      expressionValue.valueAtTime = property.getValueAtTime;
	      expressionValue.speedAtTime = property.getSpeedAtTime;
	      expressionValue.velocityAtTime = property.getVelocityAtTime;
	      expressionValue.propertyGroup = property.propertyGroup;
	    }

	    function UnidimensionalPropertyInterface(property) {
	      if (!property || !('pv' in property)) {
	        property = defaultUnidimensionalValue;
	      }

	      var mult = 1 / property.mult;
	      var val = property.pv * mult;
	      var expressionValue = new Number(val); // eslint-disable-line no-new-wrappers

	      expressionValue.value = val;
	      completeProperty(expressionValue, property, 'unidimensional');
	      return function () {
	        if (property.k) {
	          property.getValue();
	        }

	        val = property.v * mult;

	        if (expressionValue.value !== val) {
	          expressionValue = new Number(val); // eslint-disable-line no-new-wrappers

	          expressionValue.value = val;
	          completeProperty(expressionValue, property, 'unidimensional');
	        }

	        return expressionValue;
	      };
	    }

	    function MultidimensionalPropertyInterface(property) {
	      if (!property || !('pv' in property)) {
	        property = defaultMultidimensionalValue;
	      }

	      var mult = 1 / property.mult;
	      var len = property.data && property.data.l || property.pv.length;
	      var expressionValue = createTypedArray('float32', len);
	      var arrValue = createTypedArray('float32', len);
	      expressionValue.value = arrValue;
	      completeProperty(expressionValue, property, 'multidimensional');
	      return function () {
	        if (property.k) {
	          property.getValue();
	        }

	        for (var i = 0; i < len; i += 1) {
	          arrValue[i] = property.v[i] * mult;
	          expressionValue[i] = arrValue[i];
	        }

	        return expressionValue;
	      };
	    } // TODO: try to avoid using this getter


	    function defaultGetter() {
	      return defaultUnidimensionalValue;
	    }

	    return function (property) {
	      if (!property) {
	        return defaultGetter;
	      }

	      if (property.propType === 'unidimensional') {
	        return UnidimensionalPropertyInterface(property);
	      }

	      return MultidimensionalPropertyInterface(property);
	    };
	  }();

	  var TransformExpressionInterface = function () {
	    return function (transform) {
	      function _thisFunction(name) {
	        switch (name) {
	          case 'scale':
	          case 'Scale':
	          case 'ADBE Scale':
	          case 6:
	            return _thisFunction.scale;

	          case 'rotation':
	          case 'Rotation':
	          case 'ADBE Rotation':
	          case 'ADBE Rotate Z':
	          case 10:
	            return _thisFunction.rotation;

	          case 'ADBE Rotate X':
	            return _thisFunction.xRotation;

	          case 'ADBE Rotate Y':
	            return _thisFunction.yRotation;

	          case 'position':
	          case 'Position':
	          case 'ADBE Position':
	          case 2:
	            return _thisFunction.position;

	          case 'ADBE Position_0':
	            return _thisFunction.xPosition;

	          case 'ADBE Position_1':
	            return _thisFunction.yPosition;

	          case 'ADBE Position_2':
	            return _thisFunction.zPosition;

	          case 'anchorPoint':
	          case 'AnchorPoint':
	          case 'Anchor Point':
	          case 'ADBE AnchorPoint':
	          case 1:
	            return _thisFunction.anchorPoint;

	          case 'opacity':
	          case 'Opacity':
	          case 11:
	            return _thisFunction.opacity;

	          default:
	            return null;
	        }
	      }

	      Object.defineProperty(_thisFunction, 'rotation', {
	        get: ExpressionPropertyInterface(transform.r || transform.rz)
	      });
	      Object.defineProperty(_thisFunction, 'zRotation', {
	        get: ExpressionPropertyInterface(transform.rz || transform.r)
	      });
	      Object.defineProperty(_thisFunction, 'xRotation', {
	        get: ExpressionPropertyInterface(transform.rx)
	      });
	      Object.defineProperty(_thisFunction, 'yRotation', {
	        get: ExpressionPropertyInterface(transform.ry)
	      });
	      Object.defineProperty(_thisFunction, 'scale', {
	        get: ExpressionPropertyInterface(transform.s)
	      });

	      var _px;

	      var _py;

	      var _pz;

	      var _transformFactory;

	      if (transform.p) {
	        _transformFactory = ExpressionPropertyInterface(transform.p);
	      } else {
	        _px = ExpressionPropertyInterface(transform.px);
	        _py = ExpressionPropertyInterface(transform.py);

	        if (transform.pz) {
	          _pz = ExpressionPropertyInterface(transform.pz);
	        }
	      }

	      Object.defineProperty(_thisFunction, 'position', {
	        get: function get() {
	          if (transform.p) {
	            return _transformFactory();
	          }

	          return [_px(), _py(), _pz ? _pz() : 0];
	        }
	      });
	      Object.defineProperty(_thisFunction, 'xPosition', {
	        get: ExpressionPropertyInterface(transform.px)
	      });
	      Object.defineProperty(_thisFunction, 'yPosition', {
	        get: ExpressionPropertyInterface(transform.py)
	      });
	      Object.defineProperty(_thisFunction, 'zPosition', {
	        get: ExpressionPropertyInterface(transform.pz)
	      });
	      Object.defineProperty(_thisFunction, 'anchorPoint', {
	        get: ExpressionPropertyInterface(transform.a)
	      });
	      Object.defineProperty(_thisFunction, 'opacity', {
	        get: ExpressionPropertyInterface(transform.o)
	      });
	      Object.defineProperty(_thisFunction, 'skew', {
	        get: ExpressionPropertyInterface(transform.sk)
	      });
	      Object.defineProperty(_thisFunction, 'skewAxis', {
	        get: ExpressionPropertyInterface(transform.sa)
	      });
	      Object.defineProperty(_thisFunction, 'orientation', {
	        get: ExpressionPropertyInterface(transform.or)
	      });
	      return _thisFunction;
	    };
	  }();

	  var LayerExpressionInterface = function () {
	    function getMatrix(time) {
	      var toWorldMat = new Matrix();

	      if (time !== undefined) {
	        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time);

	        propMatrix.clone(toWorldMat);
	      } else {
	        var transformMat = this._elem.finalTransform.mProp;
	        transformMat.applyToMatrix(toWorldMat);
	      }

	      return toWorldMat;
	    }

	    function toWorldVec(arr, time) {
	      var toWorldMat = this.getMatrix(time);
	      toWorldMat.props[12] = 0;
	      toWorldMat.props[13] = 0;
	      toWorldMat.props[14] = 0;
	      return this.applyPoint(toWorldMat, arr);
	    }

	    function toWorld(arr, time) {
	      var toWorldMat = this.getMatrix(time);
	      return this.applyPoint(toWorldMat, arr);
	    }

	    function fromWorldVec(arr, time) {
	      var toWorldMat = this.getMatrix(time);
	      toWorldMat.props[12] = 0;
	      toWorldMat.props[13] = 0;
	      toWorldMat.props[14] = 0;
	      return this.invertPoint(toWorldMat, arr);
	    }

	    function fromWorld(arr, time) {
	      var toWorldMat = this.getMatrix(time);
	      return this.invertPoint(toWorldMat, arr);
	    }

	    function applyPoint(matrix, arr) {
	      if (this._elem.hierarchy && this._elem.hierarchy.length) {
	        var i;
	        var len = this._elem.hierarchy.length;

	        for (i = 0; i < len; i += 1) {
	          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);
	        }
	      }

	      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);
	    }

	    function invertPoint(matrix, arr) {
	      if (this._elem.hierarchy && this._elem.hierarchy.length) {
	        var i;
	        var len = this._elem.hierarchy.length;

	        for (i = 0; i < len; i += 1) {
	          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);
	        }
	      }

	      return matrix.inversePoint(arr);
	    }

	    function fromComp(arr) {
	      var toWorldMat = new Matrix();
	      toWorldMat.reset();

	      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);

	      if (this._elem.hierarchy && this._elem.hierarchy.length) {
	        var i;
	        var len = this._elem.hierarchy.length;

	        for (i = 0; i < len; i += 1) {
	          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);
	        }

	        return toWorldMat.inversePoint(arr);
	      }

	      return toWorldMat.inversePoint(arr);
	    }

	    function sampleImage() {
	      return [1, 1, 1, 1];
	    }

	    return function (elem) {
	      var transformInterface;

	      function _registerMaskInterface(maskManager) {
	        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);
	      }

	      function _registerEffectsInterface(effects) {
	        _thisLayerFunction.effect = effects;
	      }

	      function _thisLayerFunction(name) {
	        switch (name) {
	          case 'ADBE Root Vectors Group':
	          case 'Contents':
	          case 2:
	            return _thisLayerFunction.shapeInterface;

	          case 1:
	          case 6:
	          case 'Transform':
	          case 'transform':
	          case 'ADBE Transform Group':
	            return transformInterface;

	          case 4:
	          case 'ADBE Effect Parade':
	          case 'effects':
	          case 'Effects':
	            return _thisLayerFunction.effect;

	          case 'ADBE Text Properties':
	            return _thisLayerFunction.textInterface;

	          default:
	            return null;
	        }
	      }

	      _thisLayerFunction.getMatrix = getMatrix;
	      _thisLayerFunction.invertPoint = invertPoint;
	      _thisLayerFunction.applyPoint = applyPoint;
	      _thisLayerFunction.toWorld = toWorld;
	      _thisLayerFunction.toWorldVec = toWorldVec;
	      _thisLayerFunction.fromWorld = fromWorld;
	      _thisLayerFunction.fromWorldVec = fromWorldVec;
	      _thisLayerFunction.toComp = toWorld;
	      _thisLayerFunction.fromComp = fromComp;
	      _thisLayerFunction.sampleImage = sampleImage;
	      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);
	      _thisLayerFunction._elem = elem;
	      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);
	      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');
	      Object.defineProperties(_thisLayerFunction, {
	        hasParent: {
	          get: function get() {
	            return elem.hierarchy.length;
	          }
	        },
	        parent: {
	          get: function get() {
	            return elem.hierarchy[0].layerInterface;
	          }
	        },
	        rotation: getDescriptor(transformInterface, 'rotation'),
	        scale: getDescriptor(transformInterface, 'scale'),
	        position: getDescriptor(transformInterface, 'position'),
	        opacity: getDescriptor(transformInterface, 'opacity'),
	        anchorPoint: anchorPointDescriptor,
	        anchor_point: anchorPointDescriptor,
	        transform: {
	          get: function get() {
	            return transformInterface;
	          }
	        },
	        active: {
	          get: function get() {
	            return elem.isInRange;
	          }
	        }
	      });
	      _thisLayerFunction.startTime = elem.data.st;
	      _thisLayerFunction.index = elem.data.ind;
	      _thisLayerFunction.source = elem.data.refId;
	      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;
	      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;
	      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;
	      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;
	      _thisLayerFunction._name = elem.data.nm;
	      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;
	      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;
	      return _thisLayerFunction;
	    };
	  }();

	  var propertyGroupFactory = function () {
	    return function (interfaceFunction, parentPropertyGroup) {
	      return function (val) {
	        val = val === undefined ? 1 : val;

	        if (val <= 0) {
	          return interfaceFunction;
	        }

	        return parentPropertyGroup(val - 1);
	      };
	    };
	  }();

	  var PropertyInterface = function () {
	    return function (propertyName, propertyGroup) {
	      var interfaceFunction = {
	        _name: propertyName
	      };

	      function _propertyGroup(val) {
	        val = val === undefined ? 1 : val;

	        if (val <= 0) {
	          return interfaceFunction;
	        }

	        return propertyGroup(val - 1);
	      }

	      return _propertyGroup;
	    };
	  }();

	  var EffectsExpressionInterface = function () {
	    var ob = {
	      createEffectsInterface: createEffectsInterface
	    };

	    function createEffectsInterface(elem, propertyGroup) {
	      if (elem.effectsManager) {
	        var effectElements = [];
	        var effectsData = elem.data.ef;
	        var i;
	        var len = elem.effectsManager.effectElements.length;

	        for (i = 0; i < len; i += 1) {
	          effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));
	        }

	        var effects = elem.data.ef || [];

	        var groupInterface = function groupInterface(name) {
	          i = 0;
	          len = effects.length;

	          while (i < len) {
	            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {
	              return effectElements[i];
	            }

	            i += 1;
	          }

	          return null;
	        };

	        Object.defineProperty(groupInterface, 'numProperties', {
	          get: function get() {
	            return effects.length;
	          }
	        });
	        return groupInterface;
	      }

	      return null;
	    }

	    function createGroupInterface(data, elements, propertyGroup, elem) {
	      function groupInterface(name) {
	        var effects = data.ef;
	        var i = 0;
	        var len = effects.length;

	        while (i < len) {
	          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {
	            if (effects[i].ty === 5) {
	              return effectElements[i];
	            }

	            return effectElements[i]();
	          }

	          i += 1;
	        }

	        throw new Error();
	      }

	      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);

	      var effectElements = [];
	      var i;
	      var len = data.ef.length;

	      for (i = 0; i < len; i += 1) {
	        if (data.ef[i].ty === 5) {
	          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));
	        } else {
	          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));
	        }
	      }

	      if (data.mn === 'ADBE Color Control') {
	        Object.defineProperty(groupInterface, 'color', {
	          get: function get() {
	            return effectElements[0]();
	          }
	        });
	      }

	      Object.defineProperties(groupInterface, {
	        numProperties: {
	          get: function get() {
	            return data.np;
	          }
	        },
	        _name: {
	          value: data.nm
	        },
	        propertyGroup: {
	          value: _propertyGroup
	        }
	      });
	      groupInterface.enabled = data.en !== 0;
	      groupInterface.active = groupInterface.enabled;
	      return groupInterface;
	    }

	    function createValueInterface(element, type, elem, propertyGroup) {
	      var expressionProperty = ExpressionPropertyInterface(element.p);

	      function interfaceFunction() {
	        if (type === 10) {
	          return elem.comp.compInterface(element.p.v);
	        }

	        return expressionProperty();
	      }

	      if (element.p.setGroupProperty) {
	        element.p.setGroupProperty(PropertyInterface('', propertyGroup));
	      }

	      return interfaceFunction;
	    }

	    return ob;
	  }();

	  var ShapePathInterface = function () {
	    return function pathInterfaceFactory(shape, view, propertyGroup) {
	      var prop = view.sh;

	      function interfaceFunction(val) {
	        if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {
	          return interfaceFunction.path;
	        }

	        return null;
	      }

	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup));
	      Object.defineProperties(interfaceFunction, {
	        path: {
	          get: function get() {
	            if (prop.k) {
	              prop.getValue();
	            }

	            return prop;
	          }
	        },
	        shape: {
	          get: function get() {
	            if (prop.k) {
	              prop.getValue();
	            }

	            return prop;
	          }
	        },
	        _name: {
	          value: shape.nm
	        },
	        ix: {
	          value: shape.ix
	        },
	        propertyIndex: {
	          value: shape.ix
	        },
	        mn: {
	          value: shape.mn
	        },
	        propertyGroup: {
	          value: propertyGroup
	        }
	      });
	      return interfaceFunction;
	    };
	  }();

	  var ShapeExpressionInterface = function () {
	    function iterateElements(shapes, view, propertyGroup) {
	      var arr = [];
	      var i;
	      var len = shapes ? shapes.length : 0;

	      for (i = 0; i < len; i += 1) {
	        if (shapes[i].ty === 'gr') {
	          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'fl') {
	          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'st') {
	          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'tm') {
	          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'tr') ; else if (shapes[i].ty === 'el') {
	          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'sr') {
	          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'sh') {
	          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'rc') {
	          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'rd') {
	          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'rp') {
	          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else if (shapes[i].ty === 'gf') {
	          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));
	        } else {
	          arr.push(defaultInterfaceFactory(shapes[i], view[i]));
	        }
	      }

	      return arr;
	    }

	    function contentsInterfaceFactory(shape, view, propertyGroup) {
	      var interfaces;

	      var interfaceFunction = function _interfaceFunction(value) {
	        var i = 0;
	        var len = interfaces.length;

	        while (i < len) {
	          if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {
	            return interfaces[i];
	          }

	          i += 1;
	        }

	        if (typeof value === 'number') {
	          return interfaces[value - 1];
	        }

	        return null;
	      };

	      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
	      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);
	      interfaceFunction.numProperties = interfaces.length;
	      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);
	      interfaceFunction.transform = transformInterface;
	      interfaceFunction.propertyIndex = shape.cix;
	      interfaceFunction._name = shape.nm;
	      return interfaceFunction;
	    }

	    function groupInterfaceFactory(shape, view, propertyGroup) {
	      var interfaceFunction = function _interfaceFunction(value) {
	        switch (value) {
	          case 'ADBE Vectors Group':
	          case 'Contents':
	          case 2:
	            return interfaceFunction.content;
	          // Not necessary for now. Keeping them here in case a new case appears
	          // case 'ADBE Vector Transform Group':
	          // case 3:

	          default:
	            return interfaceFunction.transform;
	        }
	      };

	      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
	      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);
	      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);
	      interfaceFunction.content = content;
	      interfaceFunction.transform = transformInterface;
	      Object.defineProperty(interfaceFunction, '_name', {
	        get: function get() {
	          return shape.nm;
	        }
	      }); // interfaceFunction.content = interfaceFunction;

	      interfaceFunction.numProperties = shape.np;
	      interfaceFunction.propertyIndex = shape.ix;
	      interfaceFunction.nm = shape.nm;
	      interfaceFunction.mn = shape.mn;
	      return interfaceFunction;
	    }

	    function fillInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(val) {
	        if (val === 'Color' || val === 'color') {
	          return interfaceFunction.color;
	        }

	        if (val === 'Opacity' || val === 'opacity') {
	          return interfaceFunction.opacity;
	        }

	        return null;
	      }

	      Object.defineProperties(interfaceFunction, {
	        color: {
	          get: ExpressionPropertyInterface(view.c)
	        },
	        opacity: {
	          get: ExpressionPropertyInterface(view.o)
	        },
	        _name: {
	          value: shape.nm
	        },
	        mn: {
	          value: shape.mn
	        }
	      });
	      view.c.setGroupProperty(PropertyInterface('Color', propertyGroup));
	      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));
	      return interfaceFunction;
	    }

	    function gradientFillInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(val) {
	        if (val === 'Start Point' || val === 'start point') {
	          return interfaceFunction.startPoint;
	        }

	        if (val === 'End Point' || val === 'end point') {
	          return interfaceFunction.endPoint;
	        }

	        if (val === 'Opacity' || val === 'opacity') {
	          return interfaceFunction.opacity;
	        }

	        return null;
	      }

	      Object.defineProperties(interfaceFunction, {
	        startPoint: {
	          get: ExpressionPropertyInterface(view.s)
	        },
	        endPoint: {
	          get: ExpressionPropertyInterface(view.e)
	        },
	        opacity: {
	          get: ExpressionPropertyInterface(view.o)
	        },
	        type: {
	          get: function get() {
	            return 'a';
	          }
	        },
	        _name: {
	          value: shape.nm
	        },
	        mn: {
	          value: shape.mn
	        }
	      });
	      view.s.setGroupProperty(PropertyInterface('Start Point', propertyGroup));
	      view.e.setGroupProperty(PropertyInterface('End Point', propertyGroup));
	      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));
	      return interfaceFunction;
	    }

	    function defaultInterfaceFactory() {
	      function interfaceFunction() {
	        return null;
	      }

	      return interfaceFunction;
	    }

	    function strokeInterfaceFactory(shape, view, propertyGroup) {
	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);

	      function addPropertyToDashOb(i) {
	        Object.defineProperty(dashOb, shape.d[i].nm, {
	          get: ExpressionPropertyInterface(view.d.dataProps[i].p)
	        });
	      }

	      var i;
	      var len = shape.d ? shape.d.length : 0;
	      var dashOb = {};

	      for (i = 0; i < len; i += 1) {
	        addPropertyToDashOb(i);
	        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);
	      }

	      function interfaceFunction(val) {
	        if (val === 'Color' || val === 'color') {
	          return interfaceFunction.color;
	        }

	        if (val === 'Opacity' || val === 'opacity') {
	          return interfaceFunction.opacity;
	        }

	        if (val === 'Stroke Width' || val === 'stroke width') {
	          return interfaceFunction.strokeWidth;
	        }

	        return null;
	      }

	      Object.defineProperties(interfaceFunction, {
	        color: {
	          get: ExpressionPropertyInterface(view.c)
	        },
	        opacity: {
	          get: ExpressionPropertyInterface(view.o)
	        },
	        strokeWidth: {
	          get: ExpressionPropertyInterface(view.w)
	        },
	        dash: {
	          get: function get() {
	            return dashOb;
	          }
	        },
	        _name: {
	          value: shape.nm
	        },
	        mn: {
	          value: shape.mn
	        }
	      });
	      view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup));
	      view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));
	      view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup));
	      return interfaceFunction;
	    }

	    function trimInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(val) {
	        if (val === shape.e.ix || val === 'End' || val === 'end') {
	          return interfaceFunction.end;
	        }

	        if (val === shape.s.ix) {
	          return interfaceFunction.start;
	        }

	        if (val === shape.o.ix) {
	          return interfaceFunction.offset;
	        }

	        return null;
	      }

	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      interfaceFunction.propertyIndex = shape.ix;
	      view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup));
	      view.e.setGroupProperty(PropertyInterface('End', _propertyGroup));
	      view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));
	      interfaceFunction.propertyIndex = shape.ix;
	      interfaceFunction.propertyGroup = propertyGroup;
	      Object.defineProperties(interfaceFunction, {
	        start: {
	          get: ExpressionPropertyInterface(view.s)
	        },
	        end: {
	          get: ExpressionPropertyInterface(view.e)
	        },
	        offset: {
	          get: ExpressionPropertyInterface(view.o)
	        },
	        _name: {
	          value: shape.nm
	        }
	      });
	      interfaceFunction.mn = shape.mn;
	      return interfaceFunction;
	    }

	    function transformInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(value) {
	        if (shape.a.ix === value || value === 'Anchor Point') {
	          return interfaceFunction.anchorPoint;
	        }

	        if (shape.o.ix === value || value === 'Opacity') {
	          return interfaceFunction.opacity;
	        }

	        if (shape.p.ix === value || value === 'Position') {
	          return interfaceFunction.position;
	        }

	        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {
	          return interfaceFunction.rotation;
	        }

	        if (shape.s.ix === value || value === 'Scale') {
	          return interfaceFunction.scale;
	        }

	        if (shape.sk && shape.sk.ix === value || value === 'Skew') {
	          return interfaceFunction.skew;
	        }

	        if (shape.sa && shape.sa.ix === value || value === 'Skew Axis') {
	          return interfaceFunction.skewAxis;
	        }

	        return null;
	      }

	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));
	      view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));
	      view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup));
	      view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup));
	      view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));

	      if (view.transform.mProps.sk) {
	        view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup));
	        view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup));
	      }

	      view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));
	      Object.defineProperties(interfaceFunction, {
	        opacity: {
	          get: ExpressionPropertyInterface(view.transform.mProps.o)
	        },
	        position: {
	          get: ExpressionPropertyInterface(view.transform.mProps.p)
	        },
	        anchorPoint: {
	          get: ExpressionPropertyInterface(view.transform.mProps.a)
	        },
	        scale: {
	          get: ExpressionPropertyInterface(view.transform.mProps.s)
	        },
	        rotation: {
	          get: ExpressionPropertyInterface(view.transform.mProps.r)
	        },
	        skew: {
	          get: ExpressionPropertyInterface(view.transform.mProps.sk)
	        },
	        skewAxis: {
	          get: ExpressionPropertyInterface(view.transform.mProps.sa)
	        },
	        _name: {
	          value: shape.nm
	        }
	      });
	      interfaceFunction.ty = 'tr';
	      interfaceFunction.mn = shape.mn;
	      interfaceFunction.propertyGroup = propertyGroup;
	      return interfaceFunction;
	    }

	    function ellipseInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(value) {
	        if (shape.p.ix === value) {
	          return interfaceFunction.position;
	        }

	        if (shape.s.ix === value) {
	          return interfaceFunction.size;
	        }

	        return null;
	      }

	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      interfaceFunction.propertyIndex = shape.ix;
	      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
	      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));
	      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));
	      Object.defineProperties(interfaceFunction, {
	        size: {
	          get: ExpressionPropertyInterface(prop.s)
	        },
	        position: {
	          get: ExpressionPropertyInterface(prop.p)
	        },
	        _name: {
	          value: shape.nm
	        }
	      });
	      interfaceFunction.mn = shape.mn;
	      return interfaceFunction;
	    }

	    function starInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(value) {
	        if (shape.p.ix === value) {
	          return interfaceFunction.position;
	        }

	        if (shape.r.ix === value) {
	          return interfaceFunction.rotation;
	        }

	        if (shape.pt.ix === value) {
	          return interfaceFunction.points;
	        }

	        if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {
	          return interfaceFunction.outerRadius;
	        }

	        if (shape.os.ix === value) {
	          return interfaceFunction.outerRoundness;
	        }

	        if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {
	          return interfaceFunction.innerRadius;
	        }

	        if (shape.is && shape.is.ix === value) {
	          return interfaceFunction.innerRoundness;
	        }

	        return null;
	      }

	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
	      interfaceFunction.propertyIndex = shape.ix;
	      prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup));
	      prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup));
	      prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup));
	      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));
	      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));

	      if (shape.ir) {
	        prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup));
	        prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup));
	      }

	      Object.defineProperties(interfaceFunction, {
	        position: {
	          get: ExpressionPropertyInterface(prop.p)
	        },
	        rotation: {
	          get: ExpressionPropertyInterface(prop.r)
	        },
	        points: {
	          get: ExpressionPropertyInterface(prop.pt)
	        },
	        outerRadius: {
	          get: ExpressionPropertyInterface(prop.or)
	        },
	        outerRoundness: {
	          get: ExpressionPropertyInterface(prop.os)
	        },
	        innerRadius: {
	          get: ExpressionPropertyInterface(prop.ir)
	        },
	        innerRoundness: {
	          get: ExpressionPropertyInterface(prop.is)
	        },
	        _name: {
	          value: shape.nm
	        }
	      });
	      interfaceFunction.mn = shape.mn;
	      return interfaceFunction;
	    }

	    function rectInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(value) {
	        if (shape.p.ix === value) {
	          return interfaceFunction.position;
	        }

	        if (shape.r.ix === value) {
	          return interfaceFunction.roundness;
	        }

	        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {
	          return interfaceFunction.size;
	        }

	        return null;
	      }

	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
	      interfaceFunction.propertyIndex = shape.ix;
	      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));
	      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));
	      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));
	      Object.defineProperties(interfaceFunction, {
	        position: {
	          get: ExpressionPropertyInterface(prop.p)
	        },
	        roundness: {
	          get: ExpressionPropertyInterface(prop.r)
	        },
	        size: {
	          get: ExpressionPropertyInterface(prop.s)
	        },
	        _name: {
	          value: shape.nm
	        }
	      });
	      interfaceFunction.mn = shape.mn;
	      return interfaceFunction;
	    }

	    function roundedInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(value) {
	        if (shape.r.ix === value || value === 'Round Corners 1') {
	          return interfaceFunction.radius;
	        }

	        return null;
	      }

	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      var prop = view;
	      interfaceFunction.propertyIndex = shape.ix;
	      prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup));
	      Object.defineProperties(interfaceFunction, {
	        radius: {
	          get: ExpressionPropertyInterface(prop.rd)
	        },
	        _name: {
	          value: shape.nm
	        }
	      });
	      interfaceFunction.mn = shape.mn;
	      return interfaceFunction;
	    }

	    function repeaterInterfaceFactory(shape, view, propertyGroup) {
	      function interfaceFunction(value) {
	        if (shape.c.ix === value || value === 'Copies') {
	          return interfaceFunction.copies;
	        }

	        if (shape.o.ix === value || value === 'Offset') {
	          return interfaceFunction.offset;
	        }

	        return null;
	      }

	      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

	      var prop = view;
	      interfaceFunction.propertyIndex = shape.ix;
	      prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup));
	      prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));
	      Object.defineProperties(interfaceFunction, {
	        copies: {
	          get: ExpressionPropertyInterface(prop.c)
	        },
	        offset: {
	          get: ExpressionPropertyInterface(prop.o)
	        },
	        _name: {
	          value: shape.nm
	        }
	      });
	      interfaceFunction.mn = shape.mn;
	      return interfaceFunction;
	    }

	    return function (shapes, view, propertyGroup) {
	      var interfaces;

	      function _interfaceFunction(value) {
	        if (typeof value === 'number') {
	          value = value === undefined ? 1 : value;

	          if (value === 0) {
	            return propertyGroup;
	          }

	          return interfaces[value - 1];
	        }

	        var i = 0;
	        var len = interfaces.length;

	        while (i < len) {
	          if (interfaces[i]._name === value) {
	            return interfaces[i];
	          }

	          i += 1;
	        }

	        return null;
	      }

	      function parentGroupWrapper() {
	        return propertyGroup;
	      }

	      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);
	      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);
	      _interfaceFunction.numProperties = interfaces.length;
	      _interfaceFunction._name = 'Contents';
	      return _interfaceFunction;
	    };
	  }();

	  var TextExpressionInterface = function () {
	    return function (elem) {
	      var _sourceText;

	      function _thisLayerFunction(name) {
	        switch (name) {
	          case 'ADBE Text Document':
	            return _thisLayerFunction.sourceText;

	          default:
	            return null;
	        }
	      }

	      Object.defineProperty(_thisLayerFunction, 'sourceText', {
	        get: function get() {
	          elem.textProperty.getValue();
	          var stringValue = elem.textProperty.currentData.t;

	          if (!_sourceText || stringValue !== _sourceText.value) {
	            _sourceText = new String(stringValue); // eslint-disable-line no-new-wrappers
	            // If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive

	            _sourceText.value = stringValue || new String(stringValue); // eslint-disable-line no-new-wrappers

	            Object.defineProperty(_sourceText, 'style', {
	              get: function get() {
	                return {
	                  fillColor: elem.textProperty.currentData.fc
	                };
	              }
	            });
	          }

	          return _sourceText;
	        }
	      });
	      return _thisLayerFunction;
	    };
	  }();

	  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

	  var FootageInterface = function () {
	    var outlineInterfaceFactory = function outlineInterfaceFactory(elem) {
	      var currentPropertyName = '';
	      var currentProperty = elem.getFootageData();

	      function init() {
	        currentPropertyName = '';
	        currentProperty = elem.getFootageData();
	        return searchProperty;
	      }

	      function searchProperty(value) {
	        if (currentProperty[value]) {
	          currentPropertyName = value;
	          currentProperty = currentProperty[value];

	          if (_typeof(currentProperty) === 'object') {
	            return searchProperty;
	          }

	          return currentProperty;
	        }

	        var propertyNameIndex = value.indexOf(currentPropertyName);

	        if (propertyNameIndex !== -1) {
	          var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10);
	          currentProperty = currentProperty[index];

	          if (_typeof(currentProperty) === 'object') {
	            return searchProperty;
	          }

	          return currentProperty;
	        }

	        return '';
	      }

	      return init;
	    };

	    var dataInterfaceFactory = function dataInterfaceFactory(elem) {
	      function interfaceFunction(value) {
	        if (value === 'Outline') {
	          return interfaceFunction.outlineInterface();
	        }

	        return null;
	      }

	      interfaceFunction._name = 'Outline';
	      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem);
	      return interfaceFunction;
	    };

	    return function (elem) {
	      function _interfaceFunction(value) {
	        if (value === 'Data') {
	          return _interfaceFunction.dataInterface;
	        }

	        return null;
	      }

	      _interfaceFunction._name = 'Data';
	      _interfaceFunction.dataInterface = dataInterfaceFactory(elem);
	      return _interfaceFunction;
	    };
	  }();

	  var interfaces = {
	    layer: LayerExpressionInterface,
	    effects: EffectsExpressionInterface,
	    comp: CompExpressionInterface,
	    shape: ShapeExpressionInterface,
	    text: TextExpressionInterface,
	    footage: FootageInterface
	  };

	  function getInterface(type) {
	    return interfaces[type] || null;
	  }

	  var expressionHelpers = function () {
	    function searchExpressions(elem, data, prop) {
	      if (data.x) {
	        prop.k = true;
	        prop.x = true;
	        prop.initiateExpression = ExpressionManager.initiateExpression;
	        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));
	      }
	    }

	    function getValueAtTime(frameNum) {
	      frameNum *= this.elem.globalData.frameRate;
	      frameNum -= this.offsetTime;

	      if (frameNum !== this._cachingAtTime.lastFrame) {
	        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;
	        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);
	        this._cachingAtTime.lastFrame = frameNum;
	      }

	      return this._cachingAtTime.value;
	    }

	    function getSpeedAtTime(frameNum) {
	      var delta = -0.01;
	      var v1 = this.getValueAtTime(frameNum);
	      var v2 = this.getValueAtTime(frameNum + delta);
	      var speed = 0;

	      if (v1.length) {
	        var i;

	        for (i = 0; i < v1.length; i += 1) {
	          speed += Math.pow(v2[i] - v1[i], 2);
	        }

	        speed = Math.sqrt(speed) * 100;
	      } else {
	        speed = 0;
	      }

	      return speed;
	    }

	    function getVelocityAtTime(frameNum) {
	      if (this.vel !== undefined) {
	        return this.vel;
	      }

	      var delta = -0.001; // frameNum += this.elem.data.st;

	      var v1 = this.getValueAtTime(frameNum);
	      var v2 = this.getValueAtTime(frameNum + delta);
	      var velocity;

	      if (v1.length) {
	        velocity = createTypedArray('float32', v1.length);
	        var i;

	        for (i = 0; i < v1.length; i += 1) {
	          // removing frameRate
	          // if needed, don't add it here
	          // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);
	          velocity[i] = (v2[i] - v1[i]) / delta;
	        }
	      } else {
	        velocity = (v2 - v1) / delta;
	      }

	      return velocity;
	    }

	    function getStaticValueAtTime() {
	      return this.pv;
	    }

	    function setGroupProperty(propertyGroup) {
	      this.propertyGroup = propertyGroup;
	    }

	    return {
	      searchExpressions: searchExpressions,
	      getSpeedAtTime: getSpeedAtTime,
	      getVelocityAtTime: getVelocityAtTime,
	      getValueAtTime: getValueAtTime,
	      getStaticValueAtTime: getStaticValueAtTime,
	      setGroupProperty: setGroupProperty
	    };
	  }();

	  function addPropertyDecorator() {
	    function loopOut(type, duration, durationFlag) {
	      if (!this.k || !this.keyframes) {
	        return this.pv;
	      }

	      type = type ? type.toLowerCase() : '';
	      var currentFrame = this.comp.renderedFrame;
	      var keyframes = this.keyframes;
	      var lastKeyFrame = keyframes[keyframes.length - 1].t;

	      if (currentFrame <= lastKeyFrame) {
	        return this.pv;
	      }

	      var cycleDuration;
	      var firstKeyFrame;

	      if (!durationFlag) {
	        if (!duration || duration > keyframes.length - 1) {
	          duration = keyframes.length - 1;
	        }

	        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;
	        cycleDuration = lastKeyFrame - firstKeyFrame;
	      } else {
	        if (!duration) {
	          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);
	        } else {
	          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);
	        }

	        firstKeyFrame = lastKeyFrame - cycleDuration;
	      }

	      var i;
	      var len;
	      var ret;

	      if (type === 'pingpong') {
	        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);

	        if (iterations % 2 !== 0) {
	          return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line
	        }
	      } else if (type === 'offset') {
	        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
	        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
	        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line

	        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);

	        if (this.pv.length) {
	          ret = new Array(initV.length);
	          len = ret.length;

	          for (i = 0; i < len; i += 1) {
	            ret[i] = (endV[i] - initV[i]) * repeats + current[i];
	          }

	          return ret;
	        }

	        return (endV - initV) * repeats + current;
	      } else if (type === 'continue') {
	        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
	        var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);

	        if (this.pv.length) {
	          ret = new Array(lastValue.length);
	          len = ret.length;

	          for (i = 0; i < len; i += 1) {
	            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005; // eslint-disable-line
	          }

	          return ret;
	        }

	        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001);
	      }

	      return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line
	    }

	    function loopIn(type, duration, durationFlag) {
	      if (!this.k) {
	        return this.pv;
	      }

	      type = type ? type.toLowerCase() : '';
	      var currentFrame = this.comp.renderedFrame;
	      var keyframes = this.keyframes;
	      var firstKeyFrame = keyframes[0].t;

	      if (currentFrame >= firstKeyFrame) {
	        return this.pv;
	      }

	      var cycleDuration;
	      var lastKeyFrame;

	      if (!durationFlag) {
	        if (!duration || duration > keyframes.length - 1) {
	          duration = keyframes.length - 1;
	        }

	        lastKeyFrame = keyframes[duration].t;
	        cycleDuration = lastKeyFrame - firstKeyFrame;
	      } else {
	        if (!duration) {
	          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);
	        } else {
	          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);
	        }

	        lastKeyFrame = firstKeyFrame + cycleDuration;
	      }

	      var i;
	      var len;
	      var ret;

	      if (type === 'pingpong') {
	        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);

	        if (iterations % 2 === 0) {
	          return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line
	        }
	      } else if (type === 'offset') {
	        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
	        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
	        var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
	        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;

	        if (this.pv.length) {
	          ret = new Array(initV.length);
	          len = ret.length;

	          for (i = 0; i < len; i += 1) {
	            ret[i] = current[i] - (endV[i] - initV[i]) * repeats;
	          }

	          return ret;
	        }

	        return current - (endV - initV) * repeats;
	      } else if (type === 'continue') {
	        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
	        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);

	        if (this.pv.length) {
	          ret = new Array(firstValue.length);
	          len = ret.length;

	          for (i = 0; i < len; i += 1) {
	            ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 0.001;
	          }

	          return ret;
	        }

	        return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 0.001;
	      }

	      return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0); // eslint-disable-line
	    }

	    function smooth(width, samples) {
	      if (!this.k) {
	        return this.pv;
	      }

	      width = (width || 0.4) * 0.5;
	      samples = Math.floor(samples || 5);

	      if (samples <= 1) {
	        return this.pv;
	      }

	      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;
	      var initFrame = currentTime - width;
	      var endFrame = currentTime + width;
	      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;
	      var i = 0;
	      var j = 0;
	      var value;

	      if (this.pv.length) {
	        value = createTypedArray('float32', this.pv.length);
	      } else {
	        value = 0;
	      }

	      var sampleValue;

	      while (i < samples) {
	        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);

	        if (this.pv.length) {
	          for (j = 0; j < this.pv.length; j += 1) {
	            value[j] += sampleValue[j];
	          }
	        } else {
	          value += sampleValue;
	        }

	        i += 1;
	      }

	      if (this.pv.length) {
	        for (j = 0; j < this.pv.length; j += 1) {
	          value[j] /= samples;
	        }
	      } else {
	        value /= samples;
	      }

	      return value;
	    }

	    function getTransformValueAtTime(time) {
	      if (!this._transformCachingAtTime) {
	        this._transformCachingAtTime = {
	          v: new Matrix()
	        };
	      } /// /


	      var matrix = this._transformCachingAtTime.v;
	      matrix.cloneFromProps(this.pre.props);

	      if (this.appliedTransformations < 1) {
	        var anchor = this.a.getValueAtTime(time);
	        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);
	      }

	      if (this.appliedTransformations < 2) {
	        var scale = this.s.getValueAtTime(time);
	        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult);
	      }

	      if (this.sk && this.appliedTransformations < 3) {
	        var skew = this.sk.getValueAtTime(time);
	        var skewAxis = this.sa.getValueAtTime(time);
	        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);
	      }

	      if (this.r && this.appliedTransformations < 4) {
	        var rotation = this.r.getValueAtTime(time);
	        matrix.rotate(-rotation * this.r.mult);
	      } else if (!this.r && this.appliedTransformations < 4) {
	        var rotationZ = this.rz.getValueAtTime(time);
	        var rotationY = this.ry.getValueAtTime(time);
	        var rotationX = this.rx.getValueAtTime(time);
	        var orientation = this.or.getValueAtTime(time);
	        matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);
	      }

	      if (this.data.p && this.data.p.s) {
	        var positionX = this.px.getValueAtTime(time);
	        var positionY = this.py.getValueAtTime(time);

	        if (this.data.p.z) {
	          var positionZ = this.pz.getValueAtTime(time);
	          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);
	        } else {
	          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);
	        }
	      } else {
	        var position = this.p.getValueAtTime(time);
	        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult);
	      }

	      return matrix; /// /
	    }

	    function getTransformStaticValueAtTime() {
	      return this.v.clone(new Matrix());
	    }

	    var getTransformProperty = TransformPropertyFactory.getTransformProperty;

	    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {
	      var prop = getTransformProperty(elem, data, container);

	      if (prop.dynamicProperties.length) {
	        prop.getValueAtTime = getTransformValueAtTime.bind(prop);
	      } else {
	        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);
	      }

	      prop.setGroupProperty = expressionHelpers.setGroupProperty;
	      return prop;
	    };

	    var propertyGetProp = PropertyFactory.getProp;

	    PropertyFactory.getProp = function (elem, data, type, mult, container) {
	      var prop = propertyGetProp(elem, data, type, mult, container); // prop.getVelocityAtTime = getVelocityAtTime;
	      // prop.loopOut = loopOut;
	      // prop.loopIn = loopIn;

	      if (prop.kf) {
	        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);
	      } else {
	        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);
	      }

	      prop.setGroupProperty = expressionHelpers.setGroupProperty;
	      prop.loopOut = loopOut;
	      prop.loopIn = loopIn;
	      prop.smooth = smooth;
	      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);
	      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);
	      prop.numKeys = data.a === 1 ? data.k.length : 0;
	      prop.propertyIndex = data.ix;
	      var value = 0;

	      if (type !== 0) {
	        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length);
	      }

	      prop._cachingAtTime = {
	        lastFrame: initialDefaultFrame,
	        lastIndex: 0,
	        value: value
	      };
	      expressionHelpers.searchExpressions(elem, data, prop);

	      if (prop.k) {
	        container.addDynamicProperty(prop);
	      }

	      return prop;
	    };

	    function getShapeValueAtTime(frameNum) {
	      // For now this caching object is created only when needed instead of creating it when the shape is initialized.
	      if (!this._cachingAtTime) {
	        this._cachingAtTime = {
	          shapeValue: shapePool.clone(this.pv),
	          lastIndex: 0,
	          lastTime: initialDefaultFrame
	        };
	      }

	      frameNum *= this.elem.globalData.frameRate;
	      frameNum -= this.offsetTime;

	      if (frameNum !== this._cachingAtTime.lastTime) {
	        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;
	        this._cachingAtTime.lastTime = frameNum;
	        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);
	      }

	      return this._cachingAtTime.shapeValue;
	    }

	    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();
	    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();

	    function ShapeExpressions() {}

	    ShapeExpressions.prototype = {
	      vertices: function vertices(prop, time) {
	        if (this.k) {
	          this.getValue();
	        }

	        var shapePath = this.v;

	        if (time !== undefined) {
	          shapePath = this.getValueAtTime(time, 0);
	        }

	        var i;
	        var len = shapePath._length;
	        var vertices = shapePath[prop];
	        var points = shapePath.v;
	        var arr = createSizedArray(len);

	        for (i = 0; i < len; i += 1) {
	          if (prop === 'i' || prop === 'o') {
	            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];
	          } else {
	            arr[i] = [vertices[i][0], vertices[i][1]];
	          }
	        }

	        return arr;
	      },
	      points: function points(time) {
	        return this.vertices('v', time);
	      },
	      inTangents: function inTangents(time) {
	        return this.vertices('i', time);
	      },
	      outTangents: function outTangents(time) {
	        return this.vertices('o', time);
	      },
	      isClosed: function isClosed() {
	        return this.v.c;
	      },
	      pointOnPath: function pointOnPath(perc, time) {
	        var shapePath = this.v;

	        if (time !== undefined) {
	          shapePath = this.getValueAtTime(time, 0);
	        }

	        if (!this._segmentsLength) {
	          this._segmentsLength = bez.getSegmentsLength(shapePath);
	        }

	        var segmentsLength = this._segmentsLength;
	        var lengths = segmentsLength.lengths;
	        var lengthPos = segmentsLength.totalLength * perc;
	        var i = 0;
	        var len = lengths.length;
	        var accumulatedLength = 0;
	        var pt;

	        while (i < len) {
	          if (accumulatedLength + lengths[i].addedLength > lengthPos) {
	            var initIndex = i;
	            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;
	            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;
	            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);
	            break;
	          } else {
	            accumulatedLength += lengths[i].addedLength;
	          }

	          i += 1;
	        }

	        if (!pt) {
	          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];
	        }

	        return pt;
	      },
	      vectorOnPath: function vectorOnPath(perc, time, vectorType) {
	        // perc doesn't use triple equality because it can be a Number object as well as a primitive.
	        if (perc == 1) {
	          // eslint-disable-line eqeqeq
	          perc = this.v.c;
	        } else if (perc == 0) {
	          // eslint-disable-line eqeqeq
	          perc = 0.999;
	        }

	        var pt1 = this.pointOnPath(perc, time);
	        var pt2 = this.pointOnPath(perc + 0.001, time);
	        var xLength = pt2[0] - pt1[0];
	        var yLength = pt2[1] - pt1[1];
	        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));

	        if (magnitude === 0) {
	          return [0, 0];
	        }

	        var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];
	        return unitVector;
	      },
	      tangentOnPath: function tangentOnPath(perc, time) {
	        return this.vectorOnPath(perc, time, 'tangent');
	      },
	      normalOnPath: function normalOnPath(perc, time) {
	        return this.vectorOnPath(perc, time, 'normal');
	      },
	      setGroupProperty: expressionHelpers.setGroupProperty,
	      getValueAtTime: expressionHelpers.getStaticValueAtTime
	    };
	    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);
	    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);
	    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;
	    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;
	    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;

	    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {
	      var prop = propertyGetShapeProp(elem, data, type, arr, trims);
	      prop.propertyIndex = data.ix;
	      prop.lock = false;

	      if (type === 3) {
	        expressionHelpers.searchExpressions(elem, data.pt, prop);
	      } else if (type === 4) {
	        expressionHelpers.searchExpressions(elem, data.ks, prop);
	      }

	      if (prop.k) {
	        elem.addDynamicProperty(prop);
	      }

	      return prop;
	    };
	  }

	  function initialize$1() {
	    addPropertyDecorator();
	  }

	  function addDecorator() {
	    function searchExpressions() {
	      if (this.data.d.x) {
	        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);
	        this.addEffect(this.getExpressionValue.bind(this));
	        return true;
	      }

	      return null;
	    }

	    TextProperty.prototype.getExpressionValue = function (currentValue, text) {
	      var newValue = this.calculateExpression(text);

	      if (currentValue.t !== newValue) {
	        var newData = {};
	        this.copyData(newData, currentValue);
	        newData.t = newValue.toString();
	        newData.__complete = false;
	        return newData;
	      }

	      return currentValue;
	    };

	    TextProperty.prototype.searchProperty = function () {
	      var isKeyframed = this.searchKeyframes();
	      var hasExpressions = this.searchExpressions();
	      this.kf = isKeyframed || hasExpressions;
	      return this.kf;
	    };

	    TextProperty.prototype.searchExpressions = searchExpressions;
	  }

	  function initialize() {
	    addDecorator();
	  }

	  function SVGComposableEffect() {}

	  SVGComposableEffect.prototype = {
	    createMergeNode: function createMergeNode(resultId, ins) {
	      var feMerge = createNS('feMerge');
	      feMerge.setAttribute('result', resultId);
	      var feMergeNode;
	      var i;

	      for (i = 0; i < ins.length; i += 1) {
	        feMergeNode = createNS('feMergeNode');
	        feMergeNode.setAttribute('in', ins[i]);
	        feMerge.appendChild(feMergeNode);
	        feMerge.appendChild(feMergeNode);
	      }

	      return feMerge;
	    }
	  };

	  var linearFilterValue = '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0';

	  function SVGTintFilter(filter, filterManager, elem, id, source) {
	    this.filterManager = filterManager;
	    var feColorMatrix = createNS('feColorMatrix');
	    feColorMatrix.setAttribute('type', 'matrix');
	    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');
	    feColorMatrix.setAttribute('values', linearFilterValue + ' 1 0');
	    this.linearFilter = feColorMatrix;
	    feColorMatrix.setAttribute('result', id + '_tint_1');
	    filter.appendChild(feColorMatrix);
	    feColorMatrix = createNS('feColorMatrix');
	    feColorMatrix.setAttribute('type', 'matrix');
	    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
	    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');
	    feColorMatrix.setAttribute('result', id + '_tint_2');
	    filter.appendChild(feColorMatrix);
	    this.matrixFilter = feColorMatrix;
	    var feMerge = this.createMergeNode(id, [source, id + '_tint_1', id + '_tint_2']);
	    filter.appendChild(feMerge);
	  }

	  extendPrototype([SVGComposableEffect], SVGTintFilter);

	  SVGTintFilter.prototype.renderFrame = function (forceRender) {
	    if (forceRender || this.filterManager._mdf) {
	      var colorBlack = this.filterManager.effectElements[0].p.v;
	      var colorWhite = this.filterManager.effectElements[1].p.v;
	      var opacity = this.filterManager.effectElements[2].p.v / 100;
	      this.linearFilter.setAttribute('values', linearFilterValue + ' ' + opacity + ' 0');
	      this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 1 0');
	    }
	  };

	  function SVGFillFilter(filter, filterManager, elem, id) {
	    this.filterManager = filterManager;
	    var feColorMatrix = createNS('feColorMatrix');
	    feColorMatrix.setAttribute('type', 'matrix');
	    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
	    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');
	    feColorMatrix.setAttribute('result', id);
	    filter.appendChild(feColorMatrix);
	    this.matrixFilter = feColorMatrix;
	  }

	  SVGFillFilter.prototype.renderFrame = function (forceRender) {
	    if (forceRender || this.filterManager._mdf) {
	      var color = this.filterManager.effectElements[2].p.v;
	      var opacity = this.filterManager.effectElements[6].p.v;
	      this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');
	    }
	  };

	  function SVGStrokeEffect(fil, filterManager, elem) {
	    this.initialized = false;
	    this.filterManager = filterManager;
	    this.elem = elem;
	    this.paths = [];
	  }

	  SVGStrokeEffect.prototype.initialize = function () {
	    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
	    var path;
	    var groupPath;
	    var i;
	    var len;

	    if (this.filterManager.effectElements[1].p.v === 1) {
	      len = this.elem.maskManager.masksProperties.length;
	      i = 0;
	    } else {
	      i = this.filterManager.effectElements[0].p.v - 1;
	      len = i + 1;
	    }

	    groupPath = createNS('g');
	    groupPath.setAttribute('fill', 'none');
	    groupPath.setAttribute('stroke-linecap', 'round');
	    groupPath.setAttribute('stroke-dashoffset', 1);

	    for (i; i < len; i += 1) {
	      path = createNS('path');
	      groupPath.appendChild(path);
	      this.paths.push({
	        p: path,
	        m: i
	      });
	    }

	    if (this.filterManager.effectElements[10].p.v === 3) {
	      var mask = createNS('mask');
	      var id = createElementID();
	      mask.setAttribute('id', id);
	      mask.setAttribute('mask-type', 'alpha');
	      mask.appendChild(groupPath);
	      this.elem.globalData.defs.appendChild(mask);
	      var g = createNS('g');
	      g.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');

	      while (elemChildren[0]) {
	        g.appendChild(elemChildren[0]);
	      }

	      this.elem.layerElement.appendChild(g);
	      this.masker = mask;
	      groupPath.setAttribute('stroke', '#fff');
	    } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
	      if (this.filterManager.effectElements[10].p.v === 2) {
	        elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;

	        while (elemChildren.length) {
	          this.elem.layerElement.removeChild(elemChildren[0]);
	        }
	      }

	      this.elem.layerElement.appendChild(groupPath);
	      this.elem.layerElement.removeAttribute('mask');
	      groupPath.setAttribute('stroke', '#fff');
	    }

	    this.initialized = true;
	    this.pathMasker = groupPath;
	  };

	  SVGStrokeEffect.prototype.renderFrame = function (forceRender) {
	    if (!this.initialized) {
	      this.initialize();
	    }

	    var i;
	    var len = this.paths.length;
	    var mask;
	    var path;

	    for (i = 0; i < len; i += 1) {
	      if (this.paths[i].m !== -1) {
	        mask = this.elem.maskManager.viewData[this.paths[i].m];
	        path = this.paths[i].p;

	        if (forceRender || this.filterManager._mdf || mask.prop._mdf) {
	          path.setAttribute('d', mask.lastPath);
	        }

	        if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {
	          var dasharrayValue;

	          if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {
	            var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;
	            var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;
	            var l = path.getTotalLength();
	            dasharrayValue = '0 0 0 ' + l * s + ' ';
	            var lineLength = l * (e - s);
	            var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;
	            var units = Math.floor(lineLength / segment);
	            var j;

	            for (j = 0; j < units; j += 1) {
	              dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + ' ';
	            }

	            dasharrayValue += '0 ' + l * 10 + ' 0 0';
	          } else {
	            dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;
	          }

	          path.setAttribute('stroke-dasharray', dasharrayValue);
	        }
	      }
	    }

	    if (forceRender || this.filterManager.effectElements[4].p._mdf) {
	      this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);
	    }

	    if (forceRender || this.filterManager.effectElements[6].p._mdf) {
	      this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);
	    }

	    if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
	      if (forceRender || this.filterManager.effectElements[3].p._mdf) {
	        var color = this.filterManager.effectElements[3].p.v;
	        this.pathMasker.setAttribute('stroke', 'rgb(' + bmFloor(color[0] * 255) + ',' + bmFloor(color[1] * 255) + ',' + bmFloor(color[2] * 255) + ')');
	      }
	    }
	  };

	  function SVGTritoneFilter(filter, filterManager, elem, id) {
	    this.filterManager = filterManager;
	    var feColorMatrix = createNS('feColorMatrix');
	    feColorMatrix.setAttribute('type', 'matrix');
	    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');
	    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');
	    filter.appendChild(feColorMatrix);
	    var feComponentTransfer = createNS('feComponentTransfer');
	    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');
	    feComponentTransfer.setAttribute('result', id);
	    this.matrixFilter = feComponentTransfer;
	    var feFuncR = createNS('feFuncR');
	    feFuncR.setAttribute('type', 'table');
	    feComponentTransfer.appendChild(feFuncR);
	    this.feFuncR = feFuncR;
	    var feFuncG = createNS('feFuncG');
	    feFuncG.setAttribute('type', 'table');
	    feComponentTransfer.appendChild(feFuncG);
	    this.feFuncG = feFuncG;
	    var feFuncB = createNS('feFuncB');
	    feFuncB.setAttribute('type', 'table');
	    feComponentTransfer.appendChild(feFuncB);
	    this.feFuncB = feFuncB;
	    filter.appendChild(feComponentTransfer);
	  }

	  SVGTritoneFilter.prototype.renderFrame = function (forceRender) {
	    if (forceRender || this.filterManager._mdf) {
	      var color1 = this.filterManager.effectElements[0].p.v;
	      var color2 = this.filterManager.effectElements[1].p.v;
	      var color3 = this.filterManager.effectElements[2].p.v;
	      var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];
	      var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];
	      var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];
	      this.feFuncR.setAttribute('tableValues', tableR);
	      this.feFuncG.setAttribute('tableValues', tableG);
	      this.feFuncB.setAttribute('tableValues', tableB);
	    }
	  };

	  function SVGProLevelsFilter(filter, filterManager, elem, id) {
	    this.filterManager = filterManager;
	    var effectElements = this.filterManager.effectElements;
	    var feComponentTransfer = createNS('feComponentTransfer'); // Red

	    if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {
	      this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);
	    } // Green


	    if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {
	      this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);
	    } // Blue


	    if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {
	      this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);
	    } // Alpha


	    if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {
	      this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);
	    } // RGB


	    if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {
	      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');
	      filter.appendChild(feComponentTransfer);
	    }

	    if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {
	      feComponentTransfer = createNS('feComponentTransfer');
	      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');
	      feComponentTransfer.setAttribute('result', id);
	      filter.appendChild(feComponentTransfer);
	      this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);
	      this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);
	      this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);
	    }
	  }

	  SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {
	    var feFunc = createNS(type);
	    feFunc.setAttribute('type', 'table');
	    feComponentTransfer.appendChild(feFunc);
	    return feFunc;
	  };

	  SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {
	    var cnt = 0;
	    var segments = 256;
	    var perc;
	    var min = Math.min(inputBlack, inputWhite);
	    var max = Math.max(inputBlack, inputWhite);
	    var table = Array.call(null, {
	      length: segments
	    });
	    var colorValue;
	    var pos = 0;
	    var outputDelta = outputWhite - outputBlack;
	    var inputDelta = inputWhite - inputBlack;

	    while (cnt <= 256) {
	      perc = cnt / 256;

	      if (perc <= min) {
	        colorValue = inputDelta < 0 ? outputWhite : outputBlack;
	      } else if (perc >= max) {
	        colorValue = inputDelta < 0 ? outputBlack : outputWhite;
	      } else {
	        colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);
	      }

	      table[pos] = colorValue;
	      pos += 1;
	      cnt += 256 / (segments - 1);
	    }

	    return table.join(' ');
	  };

	  SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {
	    if (forceRender || this.filterManager._mdf) {
	      var val;
	      var effectElements = this.filterManager.effectElements;

	      if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {
	        val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);
	        this.feFuncRComposed.setAttribute('tableValues', val);
	        this.feFuncGComposed.setAttribute('tableValues', val);
	        this.feFuncBComposed.setAttribute('tableValues', val);
	      }

	      if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {
	        val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);
	        this.feFuncR.setAttribute('tableValues', val);
	      }

	      if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {
	        val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);
	        this.feFuncG.setAttribute('tableValues', val);
	      }

	      if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {
	        val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);
	        this.feFuncB.setAttribute('tableValues', val);
	      }

	      if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {
	        val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);
	        this.feFuncA.setAttribute('tableValues', val);
	      }
	    }
	  };

	  function SVGDropShadowEffect(filter, filterManager, elem, id, source) {
	    var globalFilterSize = filterManager.container.globalData.renderConfig.filterSize;
	    var filterSize = filterManager.data.fs || globalFilterSize;
	    filter.setAttribute('x', filterSize.x || globalFilterSize.x);
	    filter.setAttribute('y', filterSize.y || globalFilterSize.y);
	    filter.setAttribute('width', filterSize.width || globalFilterSize.width);
	    filter.setAttribute('height', filterSize.height || globalFilterSize.height);
	    this.filterManager = filterManager;
	    var feGaussianBlur = createNS('feGaussianBlur');
	    feGaussianBlur.setAttribute('in', 'SourceAlpha');
	    feGaussianBlur.setAttribute('result', id + '_drop_shadow_1');
	    feGaussianBlur.setAttribute('stdDeviation', '0');
	    this.feGaussianBlur = feGaussianBlur;
	    filter.appendChild(feGaussianBlur);
	    var feOffset = createNS('feOffset');
	    feOffset.setAttribute('dx', '25');
	    feOffset.setAttribute('dy', '0');
	    feOffset.setAttribute('in', id + '_drop_shadow_1');
	    feOffset.setAttribute('result', id + '_drop_shadow_2');
	    this.feOffset = feOffset;
	    filter.appendChild(feOffset);
	    var feFlood = createNS('feFlood');
	    feFlood.setAttribute('flood-color', '#00ff00');
	    feFlood.setAttribute('flood-opacity', '1');
	    feFlood.setAttribute('result', id + '_drop_shadow_3');
	    this.feFlood = feFlood;
	    filter.appendChild(feFlood);
	    var feComposite = createNS('feComposite');
	    feComposite.setAttribute('in', id + '_drop_shadow_3');
	    feComposite.setAttribute('in2', id + '_drop_shadow_2');
	    feComposite.setAttribute('operator', 'in');
	    feComposite.setAttribute('result', id + '_drop_shadow_4');
	    filter.appendChild(feComposite);
	    var feMerge = this.createMergeNode(id, [id + '_drop_shadow_4', source]);
	    filter.appendChild(feMerge); //
	  }

	  extendPrototype([SVGComposableEffect], SVGDropShadowEffect);

	  SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {
	    if (forceRender || this.filterManager._mdf) {
	      if (forceRender || this.filterManager.effectElements[4].p._mdf) {
	        this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);
	      }

	      if (forceRender || this.filterManager.effectElements[0].p._mdf) {
	        var col = this.filterManager.effectElements[0].p.v;
	        this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));
	      }

	      if (forceRender || this.filterManager.effectElements[1].p._mdf) {
	        this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);
	      }

	      if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
	        var distance = this.filterManager.effectElements[3].p.v;
	        var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;
	        var x = distance * Math.cos(angle);
	        var y = distance * Math.sin(angle);
	        this.feOffset.setAttribute('dx', x);
	        this.feOffset.setAttribute('dy', y);
	      }
	    }
	  };

	  var _svgMatteSymbols = [];

	  function SVGMatte3Effect(filterElem, filterManager, elem) {
	    this.initialized = false;
	    this.filterManager = filterManager;
	    this.filterElem = filterElem;
	    this.elem = elem;
	    elem.matteElement = createNS('g');
	    elem.matteElement.appendChild(elem.layerElement);
	    elem.matteElement.appendChild(elem.transformedElement);
	    elem.baseElement = elem.matteElement;
	  }

	  SVGMatte3Effect.prototype.findSymbol = function (mask) {
	    var i = 0;
	    var len = _svgMatteSymbols.length;

	    while (i < len) {
	      if (_svgMatteSymbols[i] === mask) {
	        return _svgMatteSymbols[i];
	      }

	      i += 1;
	    }

	    return null;
	  };

	  SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {
	    var parentNode = mask.layerElement.parentNode;

	    if (!parentNode) {
	      return;
	    }

	    var children = parentNode.children;
	    var i = 0;
	    var len = children.length;

	    while (i < len) {
	      if (children[i] === mask.layerElement) {
	        break;
	      }

	      i += 1;
	    }

	    var nextChild;

	    if (i <= len - 2) {
	      nextChild = children[i + 1];
	    }

	    var useElem = createNS('use');
	    useElem.setAttribute('href', '#' + symbolId);

	    if (nextChild) {
	      parentNode.insertBefore(useElem, nextChild);
	    } else {
	      parentNode.appendChild(useElem);
	    }
	  };

	  SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {
	    if (!this.findSymbol(mask)) {
	      var symbolId = createElementID();
	      var masker = createNS('mask');
	      masker.setAttribute('id', mask.layerId);
	      masker.setAttribute('mask-type', 'alpha');

	      _svgMatteSymbols.push(mask);

	      var defs = elem.globalData.defs;
	      defs.appendChild(masker);
	      var symbol = createNS('symbol');
	      symbol.setAttribute('id', symbolId);
	      this.replaceInParent(mask, symbolId);
	      symbol.appendChild(mask.layerElement);
	      defs.appendChild(symbol);
	      var useElem = createNS('use');
	      useElem.setAttribute('href', '#' + symbolId);
	      masker.appendChild(useElem);
	      mask.data.hd = false;
	      mask.show();
	    }

	    elem.setMatte(mask.layerId);
	  };

	  SVGMatte3Effect.prototype.initialize = function () {
	    var ind = this.filterManager.effectElements[0].p.v;
	    var elements = this.elem.comp.elements;
	    var i = 0;
	    var len = elements.length;

	    while (i < len) {
	      if (elements[i] && elements[i].data.ind === ind) {
	        this.setElementAsMask(this.elem, elements[i]);
	      }

	      i += 1;
	    }

	    this.initialized = true;
	  };

	  SVGMatte3Effect.prototype.renderFrame = function () {
	    if (!this.initialized) {
	      this.initialize();
	    }
	  };

	  function SVGGaussianBlurEffect(filter, filterManager, elem, id) {
	    // Outset the filter region by 100% on all sides to accommodate blur expansion.
	    filter.setAttribute('x', '-100%');
	    filter.setAttribute('y', '-100%');
	    filter.setAttribute('width', '300%');
	    filter.setAttribute('height', '300%');
	    this.filterManager = filterManager;
	    var feGaussianBlur = createNS('feGaussianBlur');
	    feGaussianBlur.setAttribute('result', id);
	    filter.appendChild(feGaussianBlur);
	    this.feGaussianBlur = feGaussianBlur;
	  }

	  SVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {
	    if (forceRender || this.filterManager._mdf) {
	      // Empirical value, matching AE's blur appearance.
	      var kBlurrinessToSigma = 0.3;
	      var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma; // Dimensions mapping:
	      //
	      //   1 -> horizontal & vertical
	      //   2 -> horizontal only
	      //   3 -> vertical only
	      //

	      var dimensions = this.filterManager.effectElements[1].p.v;
	      var sigmaX = dimensions == 3 ? 0 : sigma; // eslint-disable-line eqeqeq

	      var sigmaY = dimensions == 2 ? 0 : sigma; // eslint-disable-line eqeqeq

	      this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + ' ' + sigmaY); // Repeat edges mapping:
	      //
	      //   0 -> off -> duplicate
	      //   1 -> on  -> wrap

	      var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? 'wrap' : 'duplicate'; // eslint-disable-line eqeqeq

	      this.feGaussianBlur.setAttribute('edgeMode', edgeMode);
	    }
	  };

	  function TransformEffect() {}

	  TransformEffect.prototype.init = function (effectsManager) {
	    this.effectsManager = effectsManager;
	    this.type = effectTypes.TRANSFORM_EFFECT;
	    this.matrix = new Matrix();
	    this.opacity = -1;
	    this._mdf = false;
	    this._opMdf = false;
	  };

	  TransformEffect.prototype.renderFrame = function (forceFrame) {
	    this._opMdf = false;
	    this._mdf = false;

	    if (forceFrame || this.effectsManager._mdf) {
	      var effectElements = this.effectsManager.effectElements;
	      var anchor = effectElements[0].p.v;
	      var position = effectElements[1].p.v;
	      var isUniformScale = effectElements[2].p.v === 1;
	      var scaleHeight = effectElements[3].p.v;
	      var scaleWidth = isUniformScale ? scaleHeight : effectElements[4].p.v;
	      var skew = effectElements[5].p.v;
	      var skewAxis = effectElements[6].p.v;
	      var rotation = effectElements[7].p.v;
	      this.matrix.reset();
	      this.matrix.translate(-anchor[0], -anchor[1], anchor[2]);
	      this.matrix.scale(scaleWidth * 0.01, scaleHeight * 0.01, 1);
	      this.matrix.rotate(-rotation * degToRads);
	      this.matrix.skewFromAxis(-skew * degToRads, (skewAxis + 90) * degToRads);
	      this.matrix.translate(position[0], position[1], 0);
	      this._mdf = true;

	      if (this.opacity !== effectElements[8].p.v) {
	        this.opacity = effectElements[8].p.v;
	        this._opMdf = true;
	      }
	    }
	  };

	  function SVGTransformEffect(_, filterManager) {
	    this.init(filterManager);
	  }

	  extendPrototype([TransformEffect], SVGTransformEffect);

	  function CVTransformEffect(effectsManager) {
	    this.init(effectsManager);
	  }

	  extendPrototype([TransformEffect], CVTransformEffect);

	  registerRenderer('canvas', CanvasRenderer);
	  registerRenderer('html', HybridRenderer);
	  registerRenderer('svg', SVGRenderer); // Registering shape modifiers

	  ShapeModifiers.registerModifier('tm', TrimModifier);
	  ShapeModifiers.registerModifier('pb', PuckerAndBloatModifier);
	  ShapeModifiers.registerModifier('rp', RepeaterModifier);
	  ShapeModifiers.registerModifier('rd', RoundCornersModifier);
	  ShapeModifiers.registerModifier('zz', ZigZagModifier);
	  ShapeModifiers.registerModifier('op', OffsetPathModifier); // Registering expression plugin

	  setExpressionsPlugin(Expressions);
	  setExpressionInterfaces(getInterface);
	  initialize$1();
	  initialize(); // Registering svg effects

	  registerEffect$1(20, SVGTintFilter, true);
	  registerEffect$1(21, SVGFillFilter, true);
	  registerEffect$1(22, SVGStrokeEffect, false);
	  registerEffect$1(23, SVGTritoneFilter, true);
	  registerEffect$1(24, SVGProLevelsFilter, true);
	  registerEffect$1(25, SVGDropShadowEffect, true);
	  registerEffect$1(28, SVGMatte3Effect, false);
	  registerEffect$1(29, SVGGaussianBlurEffect, true);
	  registerEffect$1(35, SVGTransformEffect, false);
	  registerEffect(35, CVTransformEffect);

	  return lottie;

	})); 
} (lottie$1, lottie$1.exports));

var lottieExports = lottie$1.exports;
var lottie = /*@__PURE__*/getDefaultExportFromCjs(lottieExports);

function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}

var _excluded$1 = ["animationData", "loop", "autoplay", "initialSegment", "onComplete", "onLoopComplete", "onEnterFrame", "onSegmentStart", "onConfigReady", "onDataReady", "onDataFailed", "onLoadedImages", "onDOMLoaded", "onDestroy", "lottieRef", "renderer", "name", "assetsPath", "rendererSettings"];
var useLottie = function useLottie(props, style) {
  var animationData = props.animationData,
    loop = props.loop,
    autoplay = props.autoplay,
    initialSegment = props.initialSegment,
    onComplete = props.onComplete,
    onLoopComplete = props.onLoopComplete,
    onEnterFrame = props.onEnterFrame,
    onSegmentStart = props.onSegmentStart,
    onConfigReady = props.onConfigReady,
    onDataReady = props.onDataReady,
    onDataFailed = props.onDataFailed,
    onLoadedImages = props.onLoadedImages,
    onDOMLoaded = props.onDOMLoaded,
    onDestroy = props.onDestroy;
    props.lottieRef;
    props.renderer;
    props.name;
    props.assetsPath;
    props.rendererSettings;
    var rest = _objectWithoutProperties(props, _excluded$1);
  var _useState = React.useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    animationLoaded = _useState2[0],
    setAnimationLoaded = _useState2[1];
  var animationInstanceRef = React.useRef();
  var animationContainer = React.useRef(null);
  /*
        ======================================
            INTERACTION METHODS
        ======================================
     */
  /**
   * Play
   */
  var play = function play() {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();
  };
  /**
   * Stop
   */
  var stop = function stop() {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();
  };
  /**
   * Pause
   */
  var pause = function pause() {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();
  };
  /**
   * Set animation speed
   * @param speed
   */
  var setSpeed = function setSpeed(speed) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);
  };
  /**
   * Got to frame and play
   * @param value
   * @param isFrame
   */
  var goToAndPlay = function goToAndPlay(value, isFrame) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);
  };
  /**
   * Got to frame and stop
   * @param value
   * @param isFrame
   */
  var goToAndStop = function goToAndStop(value, isFrame) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);
  };
  /**
   * Set animation direction
   * @param direction
   */
  var setDirection = function setDirection(direction) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);
  };
  /**
   * Play animation segments
   * @param segments
   * @param forceFlag
   */
  var playSegments = function playSegments(segments, forceFlag) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);
  };
  /**
   * Set sub frames
   * @param useSubFrames
   */
  var setSubframe = function setSubframe(useSubFrames) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);
  };
  /**
   * Get animation duration
   * @param inFrames
   */
  var getDuration = function getDuration(inFrames) {
    var _a;
    return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);
  };
  /**
   * Destroy animation
   */
  var destroy = function destroy() {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();
    // Removing the reference to the animation so separate cleanups are skipped.
    // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.
    animationInstanceRef.current = undefined;
  };
  /*
        ======================================
            LOTTIE
        ======================================
     */
  /**
   * Load a new animation, and if it's the case, destroy the previous one
   * @param {Object} forcedConfigs
   */
  var loadAnimation = function loadAnimation() {
    var forcedConfigs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _a;
    // Return if the container ref is null
    if (!animationContainer.current) {
      return;
    }
    // Destroy any previous instance
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();
    // Build the animation configuration
    var config = _objectSpread2(_objectSpread2(_objectSpread2({}, props), forcedConfigs), {}, {
      container: animationContainer.current
    });
    // Save the animation instance
    animationInstanceRef.current = lottie.loadAnimation(config);
    setAnimationLoaded(!!animationInstanceRef.current);
    // Return a function that will clean up
    return function () {
      var _a;
      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();
      animationInstanceRef.current = undefined;
    };
  };
  /**
   * (Re)Initialize when animation data changed
   */
  React.useEffect(function () {
    var onUnmount = loadAnimation();
    // Clean up on unmount
    return function () {
      return onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [animationData, loop]);
  // Update the autoplay state
  React.useEffect(function () {
    if (!animationInstanceRef.current) {
      return;
    }
    animationInstanceRef.current.autoplay = !!autoplay;
  }, [autoplay]);
  // Update the initial segment state
  React.useEffect(function () {
    if (!animationInstanceRef.current) {
      return;
    }
    // When null should reset to default animation length
    if (!initialSegment) {
      animationInstanceRef.current.resetSegments(true);
      return;
    }
    // If it's not a valid segment, do nothing
    if (!Array.isArray(initialSegment) || !initialSegment.length) {
      return;
    }
    // If the current position it's not in the new segment
    // set the current position to start
    if (animationInstanceRef.current.currentRawFrame < initialSegment[0] || animationInstanceRef.current.currentRawFrame > initialSegment[1]) {
      animationInstanceRef.current.currentRawFrame = initialSegment[0];
    }
    // Update the segment
    animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);
  }, [initialSegment]);
  /*
        ======================================
            EVENTS
        ======================================
     */
  /**
   * Reinitialize listener on change
   */
  React.useEffect(function () {
    var partialListeners = [{
      name: "complete",
      handler: onComplete
    }, {
      name: "loopComplete",
      handler: onLoopComplete
    }, {
      name: "enterFrame",
      handler: onEnterFrame
    }, {
      name: "segmentStart",
      handler: onSegmentStart
    }, {
      name: "config_ready",
      handler: onConfigReady
    }, {
      name: "data_ready",
      handler: onDataReady
    }, {
      name: "data_failed",
      handler: onDataFailed
    }, {
      name: "loaded_images",
      handler: onLoadedImages
    }, {
      name: "DOMLoaded",
      handler: onDOMLoaded
    }, {
      name: "destroy",
      handler: onDestroy
    }];
    var listeners = partialListeners.filter(function (listener) {
      return listener.handler != null;
    });
    if (!listeners.length) {
      return;
    }
    var deregisterList = listeners.map(
    /**
     * Handle the process of adding an event listener
     * @param {Listener} listener
     * @return {Function} Function that deregister the listener
     */
    function (listener) {
      var _a;
      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);
      // Return a function to deregister this listener
      return function () {
        var _a;
        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);
      };
    });
    // Deregister listeners on unmount
    return function () {
      deregisterList.forEach(function (deregister) {
        return deregister();
      });
    };
  }, [onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy]);
  /**
   * Build the animation view
   */
  var View = /*#__PURE__*/React.createElement("div", _objectSpread2({
    style: style,
    ref: animationContainer
  }, rest));
  return {
    View: View,
    play: play,
    stop: stop,
    pause: pause,
    setSpeed: setSpeed,
    goToAndStop: goToAndStop,
    goToAndPlay: goToAndPlay,
    setDirection: setDirection,
    playSegments: playSegments,
    setSubframe: setSubframe,
    getDuration: getDuration,
    destroy: destroy,
    animationContainerRef: animationContainer,
    animationLoaded: animationLoaded,
    animationItem: animationInstanceRef.current
  };
};

// helpers
function getContainerVisibility(container) {
  var _container$getBoundin = container.getBoundingClientRect(),
    top = _container$getBoundin.top,
    height = _container$getBoundin.height;
  var current = window.innerHeight - top;
  var max = window.innerHeight + height;
  return current / max;
}
function getContainerCursorPosition(container, cursorX, cursorY) {
  var _container$getBoundin2 = container.getBoundingClientRect(),
    top = _container$getBoundin2.top,
    left = _container$getBoundin2.left,
    width = _container$getBoundin2.width,
    height = _container$getBoundin2.height;
  var x = (cursorX - left) / width;
  var y = (cursorY - top) / height;
  return {
    x: x,
    y: y
  };
}
var useInitInteractivity = function useInitInteractivity(_ref) {
  var wrapperRef = _ref.wrapperRef,
    animationItem = _ref.animationItem,
    mode = _ref.mode,
    actions = _ref.actions;
  React.useEffect(function () {
    var wrapper = wrapperRef.current;
    if (!wrapper || !animationItem || !actions.length) {
      return;
    }
    animationItem.stop();
    var scrollModeHandler = function scrollModeHandler() {
      var assignedSegment = null;
      var scrollHandler = function scrollHandler() {
        var currentPercent = getContainerVisibility(wrapper);
        // Find the first action that satisfies the current position conditions
        var action = actions.find(function (_ref2) {
          var visibility = _ref2.visibility;
          return visibility && currentPercent >= visibility[0] && currentPercent <= visibility[1];
        });
        // Skip if no matching action was found!
        if (!action) {
          return;
        }
        if (action.type === "seek" && action.visibility && action.frames.length === 2) {
          // Seek: Go to a frame based on player scroll position action
          var frameToGo = action.frames[0] + Math.ceil((currentPercent - action.visibility[0]) / (action.visibility[1] - action.visibility[0]) * action.frames[1]);
          //! goToAndStop must be relative to the start of the current segment
          animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);
        }
        if (action.type === "loop") {
          // Loop: Loop a given frames
          if (assignedSegment === null) {
            // if not playing any segments currently. play those segments and save to state
            animationItem.playSegments(action.frames, true);
            assignedSegment = action.frames;
          } else {
            // if playing any segments currently.
            //check if segments in state are equal to the frames selected by action
            if (assignedSegment !== action.frames) {
              // if they are not equal. new segments are to be loaded
              animationItem.playSegments(action.frames, true);
              assignedSegment = action.frames;
            } else if (animationItem.isPaused) {
              // if they are equal the play method must be called only if lottie is paused
              animationItem.playSegments(action.frames, true);
              assignedSegment = action.frames;
            }
          }
        }
        if (action.type === "play" && animationItem.isPaused) {
          // Play: Reset segments and continue playing full animation from current position
          animationItem.resetSegments(true);
          animationItem.play();
        }
        if (action.type === "stop") {
          // Stop: Stop playback
          animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);
        }
      };
      document.addEventListener("scroll", scrollHandler);
      return function () {
        document.removeEventListener("scroll", scrollHandler);
      };
    };
    var cursorModeHandler = function cursorModeHandler() {
      var handleCursor = function handleCursor(_x, _y) {
        var x = _x;
        var y = _y;
        // Resolve cursor position if cursor is inside container
        if (x !== -1 && y !== -1) {
          // Get container cursor position
          var pos = getContainerCursorPosition(wrapper, x, y);
          // Use the resolved position
          x = pos.x;
          y = pos.y;
        }
        // Find the first action that satisfies the current position conditions
        var action = actions.find(function (_ref3) {
          var position = _ref3.position;
          if (position && Array.isArray(position.x) && Array.isArray(position.y)) {
            return x >= position.x[0] && x <= position.x[1] && y >= position.y[0] && y <= position.y[1];
          }
          if (position && !Number.isNaN(position.x) && !Number.isNaN(position.y)) {
            return x === position.x && y === position.y;
          }
          return false;
        });
        // Skip if no matching action was found!
        if (!action) {
          return;
        }
        // Process action types:
        if (action.type === "seek" && action.position && Array.isArray(action.position.x) && Array.isArray(action.position.y) && action.frames.length === 2) {
          // Seek: Go to a frame based on player scroll position action
          var xPercent = (x - action.position.x[0]) / (action.position.x[1] - action.position.x[0]);
          var yPercent = (y - action.position.y[0]) / (action.position.y[1] - action.position.y[0]);
          animationItem.playSegments(action.frames, true);
          animationItem.goToAndStop(Math.ceil((xPercent + yPercent) / 2 * (action.frames[1] - action.frames[0])), true);
        }
        if (action.type === "loop") {
          animationItem.playSegments(action.frames, true);
        }
        if (action.type === "play") {
          // Play: Reset segments and continue playing full animation from current position
          if (animationItem.isPaused) {
            animationItem.resetSegments(false);
          }
          animationItem.playSegments(action.frames);
        }
        if (action.type === "stop") {
          animationItem.goToAndStop(action.frames[0], true);
        }
      };
      var mouseMoveHandler = function mouseMoveHandler(ev) {
        handleCursor(ev.clientX, ev.clientY);
      };
      var mouseOutHandler = function mouseOutHandler() {
        handleCursor(-1, -1);
      };
      wrapper.addEventListener("mousemove", mouseMoveHandler);
      wrapper.addEventListener("mouseout", mouseOutHandler);
      return function () {
        wrapper.removeEventListener("mousemove", mouseMoveHandler);
        wrapper.removeEventListener("mouseout", mouseOutHandler);
      };
    };
    switch (mode) {
      case "scroll":
        return scrollModeHandler();
      case "cursor":
        return cursorModeHandler();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [mode, animationItem]);
};
var useLottieInteractivity = function useLottieInteractivity(_ref4) {
  var actions = _ref4.actions,
    mode = _ref4.mode,
    lottieObj = _ref4.lottieObj;
  var animationItem = lottieObj.animationItem,
    View = lottieObj.View,
    animationContainerRef = lottieObj.animationContainerRef;
  useInitInteractivity({
    actions: actions,
    animationItem: animationItem,
    mode: mode,
    wrapperRef: animationContainerRef
  });
  return View;
};

var _excluded = ["style", "interactivity"];
var Lottie = function Lottie(props) {
  var _a, _b, _c;
  var style = props.style,
    interactivity = props.interactivity,
    lottieProps = _objectWithoutProperties(props, _excluded);
  /**
   * Initialize the 'useLottie' hook
   */
  var _useLottie = useLottie(lottieProps, style),
    View = _useLottie.View,
    play = _useLottie.play,
    stop = _useLottie.stop,
    pause = _useLottie.pause,
    setSpeed = _useLottie.setSpeed,
    goToAndStop = _useLottie.goToAndStop,
    goToAndPlay = _useLottie.goToAndPlay,
    setDirection = _useLottie.setDirection,
    playSegments = _useLottie.playSegments,
    setSubframe = _useLottie.setSubframe,
    getDuration = _useLottie.getDuration,
    destroy = _useLottie.destroy,
    animationContainerRef = _useLottie.animationContainerRef,
    animationLoaded = _useLottie.animationLoaded,
    animationItem = _useLottie.animationItem;
  /**
   * Make the hook variables/methods available through the provided 'lottieRef'
   */
  React.useEffect(function () {
    if (props.lottieRef) {
      props.lottieRef.current = {
        play: play,
        stop: stop,
        pause: pause,
        setSpeed: setSpeed,
        goToAndPlay: goToAndPlay,
        goToAndStop: goToAndStop,
        setDirection: setDirection,
        playSegments: playSegments,
        setSubframe: setSubframe,
        getDuration: getDuration,
        destroy: destroy,
        animationContainerRef: animationContainerRef,
        animationLoaded: animationLoaded,
        animationItem: animationItem
      };
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);
  return useLottieInteractivity({
    lottieObj: {
      View: View,
      play: play,
      stop: stop,
      pause: pause,
      setSpeed: setSpeed,
      goToAndStop: goToAndStop,
      goToAndPlay: goToAndPlay,
      setDirection: setDirection,
      playSegments: playSegments,
      setSubframe: setSubframe,
      getDuration: getDuration,
      destroy: destroy,
      animationContainerRef: animationContainerRef,
      animationLoaded: animationLoaded,
      animationItem: animationItem
    },
    actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],
    mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : "scroll"
  });
};

var v = "4.5.6";
var fr = 30;
var ip = 0;
var op = 90;
var w = 800;
var h = 800;
var ddd = 0;
var assets = [
];
var layers = [
	{
		ddd: 0,
		ind: 0,
		ty: 3,
		nm: "Master",
		ks: {
			o: {
				a: 0,
				k: 0
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					400,
					461.6569999999999,
					0
				]
			},
			a: {
				a: 0,
				k: [
					0,
					0,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		ip: 0,
		op: 600,
		st: 0,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 1,
		ty: 4,
		nm: "Star_03",
		parent: 0,
		ks: {
			o: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0.833
							],
							y: [
								0.833
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0p833_0p833_0p167_0p167"
						],
						t: 64,
						s: [
							100
						],
						e: [
							0
						]
					},
					{
						t: 84
					}
				]
			},
			r: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0.006
							],
							y: [
								1
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0p006_1_0p167_0p167"
						],
						t: 14,
						s: [
							-720
						],
						e: [
							-1149
						]
					},
					{
						t: 90
					}
				]
			},
			p: {
				a: 1,
				k: [
					{
						i: {
							x: 0.833,
							y: 0.833
						},
						o: {
							x: 0.167,
							y: 0.167
						},
						n: "0p833_0p833_0p167_0p167",
						t: 14,
						s: [
							-72.808,
							4.062,
							0
						],
						e: [
							2.192,
							-72.938,
							0
						],
						to: [
							7.80815124511719,
							-75.0615844726562,
							0
						],
						ti: [
							0,
							0,
							0
						]
					},
					{
						t: 84
					}
				]
			},
			a: {
				a: 0,
				k: [
					231.37,
					449.226,
					0
				]
			},
			s: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0,
								0,
								0.667
							],
							y: [
								1,
								1,
								0.667
							]
						},
						o: {
							x: [
								0.167,
								0.167,
								0.167
							],
							y: [
								0.167,
								0.167,
								0.167
							]
						},
						n: [
							"0_1_0p167_0p167",
							"0_1_0p167_0p167",
							"0p667_0p667_0p167_0p167"
						],
						t: 14,
						s: [
							0,
							0,
							100
						],
						e: [
							100,
							100,
							100
						]
					},
					{
						t: 54
					}
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-36.571,
										-9.612
									],
									[
										-27.799,
										-1.99
									],
									[
										-36.683,
										5.428
									]
								],
								c: false
							}
						},
						nm: "Path 2",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ind: 1,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										3.95,
										-9.308
									],
									[
										-4.935,
										-1.817
									],
									[
										3.838,
										5.731
									]
								],
								c: false
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 14,
									s: [
										100
									],
									h: 1
								},
								{
									t: 34,
									s: [
										0
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 2,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								247.846,
								433.746
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Eyes_Closed",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 34,
									s: [
										{
											i: [
												[
													0.013,
													-0.202
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.096,
													-0.1
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.733,
													-0.323
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 44,
									s: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 54,
									s: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 62,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 68,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 71,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 74,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 77,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 80,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 83,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 86,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 89,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 92,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 95,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 98,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 101,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 104,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 107,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									t: 110
								}
							]
						},
						nm: "Path 2",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ind: 1,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 34,
									s: [
										{
											i: [
												[
													0.023,
													-0.016
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													0.014,
													-0.036
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.014,
													-0.105
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 44,
									s: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 54,
									s: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 62,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 68,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 71,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 74,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 77,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 80,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 83,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 86,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 89,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 92,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 95,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 98,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 101,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 104,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 107,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									t: 110
								}
							]
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 14,
									s: [
										0
									],
									h: 1
								},
								{
									t: 34,
									s: [
										100
									],
									h: 1
								}
							]
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								242.997,
								431.73
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Eyes_Open",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 54,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.109,
													-0.906
												],
												[
													13.65,
													0.572
												],
												[
													1.781,
													12.531
												],
												[
													0,
													0
												],
												[
													-24,
													-0.295
												]
											],
											o: [
												[
													0,
													0
												],
												[
													-1.541,
													12.793
												],
												[
													-13.007,
													-0.545
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													22.624,
													0.278
												]
											],
											v: [
												[
													23.024,
													-8.94
												],
												[
													22.994,
													-8.863
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-28.716,
													-8.86
												],
												[
													-2.671,
													14.6
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 62,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													17.108
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 65,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													17.108
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 68,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 71,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 74,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 77,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 80,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 83,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 86,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 89,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 92,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 95,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 98,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 101,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 104,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 107,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									t: 110
								}
							]
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 14,
									s: [
										0
									],
									h: 1
								},
								{
									t: 54,
									s: [
										100
									],
									h: 1
								}
							]
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 14,
									s: [
										0
									],
									h: 1
								},
								{
									t: 54,
									s: [
										100
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								233.421,
								461.195
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Open Smile",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-13.602,
										0.167
									],
									[
										-0.817,
										13.364
									]
								],
								o: [
									[
										1.145,
										13.34
									],
									[
										13.603,
										-0.166
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-25.719,
										-11.551
									],
									[
										0.292,
										12.014
									],
									[
										25.719,
										-12.182
									]
								],
								c: false
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 14,
									s: [
										45
									],
									e: [
										0
									]
								},
								{
									t: 34
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 14,
									s: [
										55
									],
									e: [
										100
									]
								},
								{
									t: 34
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 2,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 14,
									s: [
										100
									],
									h: 1
								},
								{
									t: 54,
									s: [
										0
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								230.43,
								463.945
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Smile",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										10.322,
										1.475
									],
									[
										0,
										0
									],
									[
										4.634,
										9.335
									],
									[
										0,
										0
									],
									[
										3.041,
										-0.007
									],
									[
										0,
										0
									],
									[
										-4.62,
										-2.413
									],
									[
										0,
										0
									],
									[
										1.789,
										10.268
									],
									[
										0,
										0
									],
									[
										-7.447,
										7.297
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										-10.319,
										-1.474
									],
									[
										0,
										0
									],
									[
										-2.319,
										-4.67
									],
									[
										0,
										0
									],
									[
										6.08,
										-0.016
									],
									[
										0,
										0
									],
									[
										9.237,
										4.826
									],
									[
										0,
										0
									],
									[
										-1.79,
										-10.269
									],
									[
										0,
										0
									],
									[
										7.447,
										-7.294
									]
								],
								v: [
									[
										30.878,
										-26.746
									],
									[
										4.089,
										-30.567
									],
									[
										-23.103,
										-50.22
									],
									[
										-35.144,
										-74.456
									],
									[
										-43.549,
										-81.447
									],
									[
										-43.189,
										60.499
									],
									[
										-26.405,
										64.095
									],
									[
										-2.419,
										76.628
									],
									[
										11.128,
										66.733
									],
									[
										6.486,
										40.071
									],
									[
										16.773,
										8.136
									],
									[
										36.102,
										-10.803
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								275.242,
								440.626
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Body_shader",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-4.636,
										-9.336
									],
									[
										0,
										0
									],
									[
										-10.32,
										-1.474
									],
									[
										0,
										0
									],
									[
										7.448,
										-7.294
									],
									[
										0,
										0
									],
									[
										-1.789,
										-10.269
									],
									[
										0,
										0
									],
									[
										9.237,
										4.826
									],
									[
										0,
										0
									],
									[
										9.213,
										-4.873
									],
									[
										0,
										0
									],
									[
										-1.735,
										10.277
									],
									[
										0,
										0
									],
									[
										7.482,
										7.258
									],
									[
										0,
										0
									],
									[
										-10.314,
										1.526
									],
									[
										0,
										0
									],
									[
										-4.59,
										9.36
									]
								],
								o: [
									[
										4.59,
										-9.359
									],
									[
										0,
										0
									],
									[
										4.634,
										9.335
									],
									[
										0,
										0
									],
									[
										10.322,
										1.475
									],
									[
										0,
										0
									],
									[
										-7.446,
										7.297
									],
									[
										0,
										0
									],
									[
										1.788,
										10.269
									],
									[
										0,
										0
									],
									[
										-9.237,
										-4.826
									],
									[
										0,
										0
									],
									[
										-9.215,
										4.873
									],
									[
										0,
										0
									],
									[
										1.736,
										-10.28
									],
									[
										0,
										0
									],
									[
										-7.482,
										-7.256
									],
									[
										0,
										0
									],
									[
										10.315,
										-1.525
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-8.533,
										-73.371
									],
									[
										8.244,
										-73.413
									],
									[
										20.285,
										-49.178
									],
									[
										47.477,
										-29.525
									],
									[
										74.265,
										-25.704
									],
									[
										79.489,
										-9.76
									],
									[
										60.16,
										9.178
									],
									[
										49.874,
										41.114
									],
									[
										54.515,
										67.775
									],
									[
										40.969,
										77.671
									],
									[
										16.983,
										65.137
									],
									[
										-16.569,
										65.22
									],
									[
										-40.491,
										77.876
									],
									[
										-54.088,
										68.051
									],
									[
										-49.58,
										41.366
									],
									[
										-60.029,
										9.483
									],
									[
										-79.455,
										-9.358
									],
									[
										-74.312,
										-25.327
									],
									[
										-47.543,
										-29.285
									],
									[
										-20.447,
										-49.076
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								231.695,
								439.583
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Body",
				np: 2,
				mn: "ADBE Vector Group"
			}
		],
		ip: 90,
		op: 90,
		st: 14,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 2,
		ty: 4,
		nm: "Star_02",
		parent: 0,
		ks: {
			o: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0.833
							],
							y: [
								0.833
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0p833_0p833_0p167_0p167"
						],
						t: 79,
						s: [
							100
						],
						e: [
							0
						]
					},
					{
						t: 89
					}
				]
			},
			r: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0
							],
							y: [
								1
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0_1_0p167_0p167"
						],
						t: 7,
						s: [
							-720
						],
						e: [
							-1509
						]
					},
					{
						t: 107
					}
				]
			},
			p: {
				a: 1,
				k: [
					{
						i: {
							x: 0.833,
							y: 0.833
						},
						o: {
							x: 0.333,
							y: 0
						},
						n: "0p833_0p833_0p333_0",
						t: 7,
						s: [
							-55.808,
							-64.938,
							0
						],
						e: [
							-234.808,
							76.062,
							0
						],
						to: [
							-20,
							-147.83332824707,
							0
						],
						ti: [
							-2,
							-323.166656494141,
							0
						]
					},
					{
						t: 90
					}
				]
			},
			a: {
				a: 0,
				k: [
					231.37,
					449.226,
					0
				]
			},
			s: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0,
								0,
								0.667
							],
							y: [
								1,
								1,
								0.667
							]
						},
						o: {
							x: [
								0.167,
								0.167,
								0.167
							],
							y: [
								0.167,
								0.167,
								0.167
							]
						},
						n: [
							"0_1_0p167_0p167",
							"0_1_0p167_0p167",
							"0p667_0p667_0p167_0p167"
						],
						t: 7,
						s: [
							0,
							0,
							100
						],
						e: [
							100,
							100,
							100
						]
					},
					{
						t: 47
					}
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-36.571,
										-9.612
									],
									[
										-27.799,
										-1.99
									],
									[
										-36.683,
										5.428
									]
								],
								c: false
							}
						},
						nm: "Path 2",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ind: 1,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										3.95,
										-9.308
									],
									[
										-4.935,
										-1.817
									],
									[
										3.838,
										5.731
									]
								],
								c: false
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 7,
									s: [
										100
									],
									h: 1
								},
								{
									t: 27,
									s: [
										0
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 2,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								247.846,
								433.746
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Eyes_Closed",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 27,
									s: [
										{
											i: [
												[
													0.013,
													-0.202
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.096,
													-0.1
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.733,
													-0.323
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 37,
									s: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 47,
									s: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 55,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 61,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 64,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 67,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 70,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 73,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 76,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 79,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 82,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 85,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 88,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 91,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 94,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 97,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 100,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									t: 103
								}
							]
						},
						nm: "Path 2",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ind: 1,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 27,
									s: [
										{
											i: [
												[
													0.023,
													-0.016
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													0.014,
													-0.036
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.014,
													-0.105
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 37,
									s: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 47,
									s: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 55,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 61,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 64,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 67,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 70,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 73,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 76,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 79,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 82,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 85,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 88,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 91,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 94,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 97,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 100,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									t: 103
								}
							]
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 7,
									s: [
										0
									],
									h: 1
								},
								{
									t: 27,
									s: [
										100
									],
									h: 1
								}
							]
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								242.997,
								431.73
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Eyes_Open",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 47,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.109,
													-0.906
												],
												[
													13.65,
													0.572
												],
												[
													1.781,
													12.531
												],
												[
													0,
													0
												],
												[
													-24,
													-0.295
												]
											],
											o: [
												[
													0,
													0
												],
												[
													-1.541,
													12.793
												],
												[
													-13.007,
													-0.545
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													22.624,
													0.278
												]
											],
											v: [
												[
													23.024,
													-8.94
												],
												[
													22.994,
													-8.863
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-28.716,
													-8.86
												],
												[
													-2.671,
													14.6
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 55,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													17.108
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 58,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													17.108
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 61,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 64,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 67,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 70,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 73,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 76,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 79,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 82,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 85,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 88,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 91,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 94,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 97,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 100,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									t: 103
								}
							]
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 7,
									s: [
										0
									],
									h: 1
								},
								{
									t: 47,
									s: [
										100
									],
									h: 1
								}
							]
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 7,
									s: [
										0
									],
									h: 1
								},
								{
									t: 47,
									s: [
										100
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								233.421,
								461.195
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Open Smile",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-13.602,
										0.167
									],
									[
										-0.817,
										13.364
									]
								],
								o: [
									[
										1.145,
										13.34
									],
									[
										13.603,
										-0.166
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-25.719,
										-11.551
									],
									[
										0.292,
										12.014
									],
									[
										25.719,
										-12.182
									]
								],
								c: false
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 7,
									s: [
										45
									],
									e: [
										0
									]
								},
								{
									t: 27
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 7,
									s: [
										55
									],
									e: [
										100
									]
								},
								{
									t: 27
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 2,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 7,
									s: [
										100
									],
									h: 1
								},
								{
									t: 47,
									s: [
										0
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								230.43,
								463.945
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Smile",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										10.322,
										1.475
									],
									[
										0,
										0
									],
									[
										4.634,
										9.335
									],
									[
										0,
										0
									],
									[
										3.041,
										-0.007
									],
									[
										0,
										0
									],
									[
										-4.62,
										-2.413
									],
									[
										0,
										0
									],
									[
										1.789,
										10.268
									],
									[
										0,
										0
									],
									[
										-7.447,
										7.297
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										-10.319,
										-1.474
									],
									[
										0,
										0
									],
									[
										-2.319,
										-4.67
									],
									[
										0,
										0
									],
									[
										6.08,
										-0.016
									],
									[
										0,
										0
									],
									[
										9.237,
										4.826
									],
									[
										0,
										0
									],
									[
										-1.79,
										-10.269
									],
									[
										0,
										0
									],
									[
										7.447,
										-7.294
									]
								],
								v: [
									[
										30.878,
										-26.746
									],
									[
										4.089,
										-30.567
									],
									[
										-23.103,
										-50.22
									],
									[
										-35.144,
										-74.456
									],
									[
										-43.549,
										-81.447
									],
									[
										-43.189,
										60.499
									],
									[
										-26.405,
										64.095
									],
									[
										-2.419,
										76.628
									],
									[
										11.128,
										66.733
									],
									[
										6.486,
										40.071
									],
									[
										16.773,
										8.136
									],
									[
										36.102,
										-10.803
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								275.242,
								440.626
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Body_shader",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-4.636,
										-9.336
									],
									[
										0,
										0
									],
									[
										-10.32,
										-1.474
									],
									[
										0,
										0
									],
									[
										7.448,
										-7.294
									],
									[
										0,
										0
									],
									[
										-1.789,
										-10.269
									],
									[
										0,
										0
									],
									[
										9.237,
										4.826
									],
									[
										0,
										0
									],
									[
										9.213,
										-4.873
									],
									[
										0,
										0
									],
									[
										-1.735,
										10.277
									],
									[
										0,
										0
									],
									[
										7.482,
										7.258
									],
									[
										0,
										0
									],
									[
										-10.314,
										1.526
									],
									[
										0,
										0
									],
									[
										-4.59,
										9.36
									]
								],
								o: [
									[
										4.59,
										-9.359
									],
									[
										0,
										0
									],
									[
										4.634,
										9.335
									],
									[
										0,
										0
									],
									[
										10.322,
										1.475
									],
									[
										0,
										0
									],
									[
										-7.446,
										7.297
									],
									[
										0,
										0
									],
									[
										1.788,
										10.269
									],
									[
										0,
										0
									],
									[
										-9.237,
										-4.826
									],
									[
										0,
										0
									],
									[
										-9.215,
										4.873
									],
									[
										0,
										0
									],
									[
										1.736,
										-10.28
									],
									[
										0,
										0
									],
									[
										-7.482,
										-7.256
									],
									[
										0,
										0
									],
									[
										10.315,
										-1.525
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-8.533,
										-73.371
									],
									[
										8.244,
										-73.413
									],
									[
										20.285,
										-49.178
									],
									[
										47.477,
										-29.525
									],
									[
										74.265,
										-25.704
									],
									[
										79.489,
										-9.76
									],
									[
										60.16,
										9.178
									],
									[
										49.874,
										41.114
									],
									[
										54.515,
										67.775
									],
									[
										40.969,
										77.671
									],
									[
										16.983,
										65.137
									],
									[
										-16.569,
										65.22
									],
									[
										-40.491,
										77.876
									],
									[
										-54.088,
										68.051
									],
									[
										-49.58,
										41.366
									],
									[
										-60.029,
										9.483
									],
									[
										-79.455,
										-9.358
									],
									[
										-74.312,
										-25.327
									],
									[
										-47.543,
										-29.285
									],
									[
										-20.447,
										-49.076
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								231.695,
								439.583
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Body",
				np: 2,
				mn: "ADBE Vector Group"
			}
		],
		ip: 90,
		op: 90,
		st: 7,
		bm: 0,
		sr: 1,
		hidden: 7
	},
	{
		ddd: 0,
		ind: 3,
		ty: 4,
		nm: "Star_01",
		parent: 0,
		ks: {
			o: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0.833
							],
							y: [
								0.833
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0p833_0p833_0p167_0p167"
						],
						t: 66,
						s: [
							100
						],
						e: [
							0
						]
					},
					{
						t: 75
					}
				]
			},
			r: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0
							],
							y: [
								1
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0_1_0p167_0p167"
						],
						t: 0,
						s: [
							-720
						],
						e: [
							60
						]
					},
					{
						t: 90
					}
				]
			},
			p: {
				a: 1,
				k: [
					{
						i: {
							x: 0.833,
							y: 0.833
						},
						o: {
							x: 0.333,
							y: 0
						},
						n: "0p833_0p833_0p333_0",
						t: 0,
						s: [
							31.192,
							-0.938,
							0
						],
						e: [
							223.192,
							87.062,
							0
						],
						to: [
							27,
							-133.83332824707,
							0
						],
						ti: [
							-7,
							-196.16667175293,
							0
						]
					},
					{
						t: 90
					}
				]
			},
			a: {
				a: 0,
				k: [
					231.37,
					449.226,
					0
				]
			},
			s: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0,
								0,
								0.667
							],
							y: [
								1,
								1,
								0.667
							]
						},
						o: {
							x: [
								0.167,
								0.167,
								0.167
							],
							y: [
								0.167,
								0.167,
								0.167
							]
						},
						n: [
							"0_1_0p167_0p167",
							"0_1_0p167_0p167",
							"0p667_0p667_0p167_0p167"
						],
						t: 0,
						s: [
							0,
							0,
							100
						],
						e: [
							100,
							100,
							100
						]
					},
					{
						t: 40
					}
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-36.571,
										-9.612
									],
									[
										-27.799,
										-1.99
									],
									[
										-36.683,
										5.428
									]
								],
								c: false
							}
						},
						nm: "Path 2",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ind: 1,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										3.95,
										-9.308
									],
									[
										-4.935,
										-1.817
									],
									[
										3.838,
										5.731
									]
								],
								c: false
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 0,
									s: [
										100
									],
									h: 1
								},
								{
									t: 20,
									s: [
										0
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 2,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								247.846,
								433.746
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Eyes_Closed",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 20,
									s: [
										{
											i: [
												[
													0.013,
													-0.202
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.096,
													-0.1
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.733,
													-0.323
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 30,
									s: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 40,
									s: [
										{
											i: [
												[
													0.054,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													-0.054,
													2.973
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													-0.054,
													2.976
												],
												[
													-2.972,
													-0.054
												],
												[
													0.054,
													-2.973
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.869,
													5.385
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 48,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 54,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 57,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 60,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 63,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 66,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 69,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 72,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 75,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 78,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 81,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 84,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 87,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 90,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 93,
									s: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.769,
													-0.053
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.049,
													-2.972
												],
												[
													2.972,
													0.054
												],
												[
													0.096,
													-0.006
												],
												[
													-2.976,
													-0.054
												]
											],
											o: [
												[
													0.013,
													-0.015
												],
												[
													-2.972,
													-0.054
												],
												[
													0.083,
													-2.972
												],
												[
													2.971,
													0.054
												]
											],
											v: [
												[
													-18.385,
													0.097
												],
												[
													-23.644,
													-0.884
												],
												[
													-29.155,
													-0.099
												],
												[
													-23.671,
													-5.385
												]
											],
											c: true
										}
									]
								},
								{
									t: 96
								}
							]
						},
						nm: "Path 2",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ind: 1,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 20,
									s: [
										{
											i: [
												[
													0.023,
													-0.016
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													0.014,
													-0.036
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.014,
													-0.105
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 30,
									s: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 40,
									s: [
										{
											i: [
												[
													0.003,
													-2.973
												],
												[
													2.973,
													0.003
												],
												[
													-0.003,
													2.973
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													-0.003,
													2.976
												],
												[
													-2.974,
													-0.003
												],
												[
													0.003,
													-2.973
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													-0.006,
													5.385
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 48,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 54,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 57,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 60,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 63,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 66,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 69,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 72,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 75,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 78,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 81,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 84,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 87,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p667_1_0p167_0",
									t: 90,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_1_0p167_0",
									t: 93,
									s: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.02,
													-0.021
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0.116,
													-2.97
												],
												[
													2.973,
													0.003
												],
												[
													0.014,
													0.057
												],
												[
													-2.976,
													-0.003
												]
											],
											o: [
												[
													0.054,
													0.078
												],
												[
													-2.974,
													-0.003
												],
												[
													-0.236,
													-3.255
												],
												[
													2.971,
													0.003
												]
											],
											v: [
												[
													5.386,
													0.004
												],
												[
													0.145,
													-0.852
												],
												[
													-5.386,
													-0.006
												],
												[
													0.007,
													-5.386
												]
											],
											c: true
										}
									]
								},
								{
									t: 96
								}
							]
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 0,
									s: [
										0
									],
									h: 1
								},
								{
									t: 20,
									s: [
										100
									],
									h: 1
								}
							]
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								242.997,
								431.73
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Eyes_Open",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 1,
							k: [
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.333,
										y: 0
									},
									n: "0p667_1_0p333_0",
									t: 40,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.109,
													-0.906
												],
												[
													13.65,
													0.572
												],
												[
													1.781,
													12.531
												],
												[
													0,
													0
												],
												[
													-24,
													-0.295
												]
											],
											o: [
												[
													0,
													0
												],
												[
													-1.541,
													12.793
												],
												[
													-13.007,
													-0.545
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													22.624,
													0.278
												]
											],
											v: [
												[
													23.024,
													-8.94
												],
												[
													22.994,
													-8.863
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-28.716,
													-8.86
												],
												[
													-2.671,
													14.6
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 48,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													17.108
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 51,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													17.108
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 54,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 57,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 60,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 63,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 66,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 69,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 72,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 75,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 78,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 81,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 84,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 87,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 90,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									]
								},
								{
									i: {
										x: 0.667,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0p667_1_0p167_0p167",
									t: 93,
									s: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.123,
													-0.904
												],
												[
													13.118,
													0.071
												],
												[
													1.781,
													12.531
												],
												[
													-0.771,
													0.001
												],
												[
													-13.559,
													-0.008
												]
											],
											o: [
												[
													0.771,
													-0.001
												],
												[
													-1.708,
													12.576
												],
												[
													-13.016,
													-0.067
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													13.343,
													0.006
												]
											],
											v: [
												[
													21.337,
													-9.257
												],
												[
													22.625,
													-7.808
												],
												[
													-2.946,
													14.608
												],
												[
													-28.522,
													-7.528
												],
												[
													-27.263,
													-9.176
												],
												[
													-2.671,
													-5.545
												]
											],
											c: true
										}
									],
									e: [
										{
											i: [
												[
													0,
													0
												],
												[
													0.125,
													-0.904
												],
												[
													13.019,
													-0.021
												],
												[
													1.781,
													12.531
												],
												[
													-0.913,
													0.001
												],
												[
													-11.625,
													0.045
												]
											],
											o: [
												[
													0.913,
													-0.002
												],
												[
													-1.74,
													12.536
												],
												[
													-13.018,
													0.021
												],
												[
													-0.128,
													-0.903
												],
												[
													0,
													0
												],
												[
													11.625,
													-0.045
												]
											],
											v: [
												[
													21.024,
													-9.315
												],
												[
													22.557,
													-7.613
												],
												[
													-2.946,
													17.295
												],
												[
													-28.522,
													-7.528
												],
												[
													-26.994,
													-9.235
												],
												[
													-2.671,
													-9.275
												]
											],
											c: true
										}
									]
								},
								{
									t: 96
								}
							]
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 0,
									s: [
										0
									],
									h: 1
								},
								{
									t: 40,
									s: [
										100
									],
									h: 1
								}
							]
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 0,
									s: [
										0
									],
									h: 1
								},
								{
									t: 40,
									s: [
										100
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								233.421,
								461.195
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Open Smile",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-13.602,
										0.167
									],
									[
										-0.817,
										13.364
									]
								],
								o: [
									[
										1.145,
										13.34
									],
									[
										13.603,
										-0.166
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-25.719,
										-11.551
									],
									[
										0.292,
										12.014
									],
									[
										25.719,
										-12.182
									]
								],
								c: false
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 0,
									s: [
										45
									],
									e: [
										0
									]
								},
								{
									t: 20
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 0,
									s: [
										55
									],
									e: [
										100
									]
								},
								{
									t: 20
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 2,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									t: 0,
									s: [
										100
									],
									h: 1
								},
								{
									t: 40,
									s: [
										0
									],
									h: 1
								}
							]
						},
						w: {
							a: 0,
							k: 2.641
						},
						lc: 2,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								230.43,
								463.945
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Smile",
				np: 3,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										10.322,
										1.475
									],
									[
										0,
										0
									],
									[
										4.634,
										9.335
									],
									[
										0,
										0
									],
									[
										3.041,
										-0.007
									],
									[
										0,
										0
									],
									[
										-4.62,
										-2.413
									],
									[
										0,
										0
									],
									[
										1.789,
										10.268
									],
									[
										0,
										0
									],
									[
										-7.447,
										7.297
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										-10.319,
										-1.474
									],
									[
										0,
										0
									],
									[
										-2.319,
										-4.67
									],
									[
										0,
										0
									],
									[
										6.08,
										-0.016
									],
									[
										0,
										0
									],
									[
										9.237,
										4.826
									],
									[
										0,
										0
									],
									[
										-1.79,
										-10.269
									],
									[
										0,
										0
									],
									[
										7.447,
										-7.294
									]
								],
								v: [
									[
										30.878,
										-26.746
									],
									[
										4.089,
										-30.567
									],
									[
										-23.103,
										-50.22
									],
									[
										-35.144,
										-74.456
									],
									[
										-43.549,
										-81.447
									],
									[
										-43.189,
										60.499
									],
									[
										-26.405,
										64.095
									],
									[
										-2.419,
										76.628
									],
									[
										11.128,
										66.733
									],
									[
										6.486,
										40.071
									],
									[
										16.773,
										8.136
									],
									[
										36.102,
										-10.803
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								275.242,
								440.626
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Body_shader",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-4.636,
										-9.336
									],
									[
										0,
										0
									],
									[
										-10.32,
										-1.474
									],
									[
										0,
										0
									],
									[
										7.448,
										-7.294
									],
									[
										0,
										0
									],
									[
										-1.789,
										-10.269
									],
									[
										0,
										0
									],
									[
										9.237,
										4.826
									],
									[
										0,
										0
									],
									[
										9.213,
										-4.873
									],
									[
										0,
										0
									],
									[
										-1.735,
										10.277
									],
									[
										0,
										0
									],
									[
										7.482,
										7.258
									],
									[
										0,
										0
									],
									[
										-10.314,
										1.526
									],
									[
										0,
										0
									],
									[
										-4.59,
										9.36
									]
								],
								o: [
									[
										4.59,
										-9.359
									],
									[
										0,
										0
									],
									[
										4.634,
										9.335
									],
									[
										0,
										0
									],
									[
										10.322,
										1.475
									],
									[
										0,
										0
									],
									[
										-7.446,
										7.297
									],
									[
										0,
										0
									],
									[
										1.788,
										10.269
									],
									[
										0,
										0
									],
									[
										-9.237,
										-4.826
									],
									[
										0,
										0
									],
									[
										-9.215,
										4.873
									],
									[
										0,
										0
									],
									[
										1.736,
										-10.28
									],
									[
										0,
										0
									],
									[
										-7.482,
										-7.256
									],
									[
										0,
										0
									],
									[
										10.315,
										-1.525
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-8.533,
										-73.371
									],
									[
										8.244,
										-73.413
									],
									[
										20.285,
										-49.178
									],
									[
										47.477,
										-29.525
									],
									[
										74.265,
										-25.704
									],
									[
										79.489,
										-9.76
									],
									[
										60.16,
										9.178
									],
									[
										49.874,
										41.114
									],
									[
										54.515,
										67.775
									],
									[
										40.969,
										77.671
									],
									[
										16.983,
										65.137
									],
									[
										-16.569,
										65.22
									],
									[
										-40.491,
										77.876
									],
									[
										-54.088,
										68.051
									],
									[
										-49.58,
										41.366
									],
									[
										-60.029,
										9.483
									],
									[
										-79.455,
										-9.358
									],
									[
										-74.312,
										-25.327
									],
									[
										-47.543,
										-29.285
									],
									[
										-20.447,
										-49.076
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								231.695,
								439.583
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Body",
				np: 2,
				mn: "ADBE Vector Group"
			}
		],
		ip: 90,
		op: 90,
		st: 0,
		bm: 0,
		sr: 1,
		hidden: 0
	},
	{
		ddd: 0,
		ind: 4,
		ty: 4,
		nm: "Fireworks_08",
		parent: 0,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					-41,
					-125.553,
					0
				]
			},
			a: {
				a: 0,
				k: [
					312.5,
					177.5,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-3.733,
										3.212
									],
									[
										3.516,
										3.448
									],
									[
										1.007,
										-0.109
									],
									[
										-0.831,
										-1.602
									],
									[
										-1.804,
										-0.048
									],
									[
										-1.498,
										2.82
									],
									[
										1.857,
										2.598
									],
									[
										1.894,
										4.895
									],
									[
										-2.186,
										3.33
									],
									[
										0.394,
										3.963
									],
									[
										4.488,
										1.512
									],
									[
										0.67,
										2.591
									],
									[
										-1.061,
										1.667
									],
									[
										3.352,
										6.121
									],
									[
										-0.017,
										5.733
									],
									[
										-0.824,
										5.056
									],
									[
										1.288,
										6.795
									],
									[
										2.266,
										9.62
									],
									[
										0.775,
										2.384
									],
									[
										-2.086,
										5.33
									]
								],
								o: [
									[
										4.912,
										0.354
									],
									[
										3.734,
										-3.212
									],
									[
										-0.723,
										-0.709
									],
									[
										-1.794,
										0.194
									],
									[
										0.831,
										1.602
									],
									[
										3.192,
										0.085
									],
									[
										1.498,
										-2.82
									],
									[
										-3.052,
										-4.27
									],
									[
										-1.438,
										-3.716
									],
									[
										2.186,
										-3.33
									],
									[
										-0.468,
										-4.712
									],
									[
										-2.536,
										-0.855
									],
									[
										-0.495,
										-1.913
									],
									[
										3.747,
										-5.888
									],
									[
										-2.754,
										-5.028
									],
									[
										0.015,
										-5.123
									],
									[
										1.113,
										-6.827
									],
									[
										-1.84,
										-9.71
									],
									[
										-0.575,
										-2.44
									],
									[
										-1.769,
										-5.444
									],
									[
										0,
										0
									]
								],
								v: [
									[
										19.657,
										33.614
									],
									[
										33.618,
										30.114
									],
									[
										35.047,
										17.054
									],
									[
										32.352,
										15.881
									],
									[
										30.503,
										20.092
									],
									[
										35.067,
										22.494
									],
									[
										42.924,
										17.911
									],
									[
										42.323,
										8.835
									],
									[
										30.752,
										-1.506
									],
									[
										33.523,
										-12.651
									],
									[
										37.839,
										-23.525
									],
									[
										28.4,
										-33.073
									],
									[
										22.087,
										-37.425
									],
									[
										23.799,
										-42.917
									],
									[
										27.536,
										-62.474
									],
									[
										17.953,
										-76.278
									],
									[
										24.534,
										-89.921
									],
									[
										16.335,
										-108.508
									],
									[
										24.585,
										-136.227
									],
									[
										21.753,
										-143.18
									],
									[
										24.179,
										-159.818
									]
								],
								c: false
							}
						},
						nm: "Path 2",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								0.4,
								0.4,
								0.4,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 14,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 46.381,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 68.762,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 70,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 103,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 104,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 643,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 644,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 676.381,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 698.762,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 700,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									t: 733
								}
							]
						},
						w: {
							a: 0,
							k: 4.829
						},
						lc: 1,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 14,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 25,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 67,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 70,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 103,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 104,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 643,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 644,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 655,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 697,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 700,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 733
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 14,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 24,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 68.762,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 70,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 103,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 104,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 643,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 644,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 654,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 698.762,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 700,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 733
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 3,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								312.078,
								177.185
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 3,
				mn: "ADBE Vector Group"
			}
		],
		ip: 14,
		op: 450,
		st: 24,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 5,
		ty: 4,
		nm: "Fireworks_07",
		parent: 0,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					-41,
					-125.553,
					0
				]
			},
			a: {
				a: 0,
				k: [
					312.5,
					177.5,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-3.987,
										2.255
									],
									[
										-3.851,
										-0.605
									],
									[
										-3.81,
										0.826
									],
									[
										0.199,
										3.894
									],
									[
										-0.057,
										1.725
									],
									[
										-3.528,
										0.655
									],
									[
										-3.35,
										1.286
									],
									[
										-0.385,
										4.173
									],
									[
										-1.666,
										2.264
									],
									[
										-4.338,
										1.184
									],
									[
										0.652,
										6.571
									],
									[
										-0.575,
										1.771
									],
									[
										-4.258,
										0.478
									],
									[
										-2.004,
										3.788
									],
									[
										0.798,
										2.901
									],
									[
										-1.515,
										4.958
									],
									[
										-6.098,
										3.216
									],
									[
										-0.018,
										8.318
									],
									[
										-2.756,
										4.522
									]
								],
								o: [
									[
										-1.536,
										-4.314
									],
									[
										3.393,
										-1.919
									],
									[
										3.852,
										0.605
									],
									[
										3.811,
										-0.825
									],
									[
										-0.088,
										-1.723
									],
									[
										0.118,
										-3.586
									],
									[
										3.529,
										-0.654
									],
									[
										3.912,
										-1.503
									],
									[
										0.258,
										-2.799
									],
									[
										2.666,
										-3.621
									],
									[
										6.371,
										-1.74
									],
									[
										-0.183,
										-1.853
									],
									[
										1.322,
										-4.076
									],
									[
										4.258,
										-0.479
									],
									[
										1.407,
										-2.659
									],
									[
										-1.374,
										-4.999
									],
									[
										2.015,
										-6.594
									],
									[
										7.358,
										-3.88
									],
									[
										0.011,
										-5.295
									],
									[
										0,
										0
									]
								],
								v: [
									[
										168.47,
										147.842
									],
									[
										172.892,
										135.992
									],
									[
										184.314,
										134.937
									],
									[
										195.915,
										135.611
									],
									[
										203.185,
										127.697
									],
									[
										202.336,
										122.605
									],
									[
										209.757,
										115.984
									],
									[
										220.374,
										114.415
									],
									[
										227.58,
										104.899
									],
									[
										228.797,
										96.697
									],
									[
										241.534,
										93.832
									],
									[
										249.311,
										77.395
									],
									[
										249.402,
										71.854
									],
									[
										260.021,
										65.997
									],
									[
										271.274,
										60.989
									],
									[
										271.241,
										52.188
									],
									[
										269.636,
										36.947
									],
									[
										284.659,
										23.584
									],
									[
										299.994,
										5.52
									],
									[
										299.485,
										-10.017
									]
								],
								c: false
							}
						},
						nm: "Path 6",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 12,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 41.048,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 60.096,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 68,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 101,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 102,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 641,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 642,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 671.048,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 690.096,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 698,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									t: 731
								}
							]
						},
						w: {
							a: 0,
							k: 4.829
						},
						lc: 1,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 12,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 23.904,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 62,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 68,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 101,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 102,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 641,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 642,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 653.904,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 692,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 698,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 731
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 12,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 22,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 60.096,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 68,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 101,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 102,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 641,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 642,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 652,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 690.096,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 698,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 731
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 3,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								312.078,
								177.185
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 3,
				mn: "ADBE Vector Group"
			}
		],
		ip: 12,
		op: 450,
		st: 22,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 6,
		ty: 4,
		nm: "Fireworks_06",
		parent: 0,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					-41,
					-125.553,
					0
				]
			},
			a: {
				a: 0,
				k: [
					312.5,
					177.5,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-5.281,
										4.43
									],
									[
										-0.914,
										3.014
									],
									[
										5.89,
										1.428
									],
									[
										1.278,
										-0.706
									],
									[
										-0.398,
										-2.024
									],
									[
										-1.595,
										-1.307
									],
									[
										-5.767,
										2.717
									],
									[
										-1.596,
										6.171
									],
									[
										3.096,
										3.922
									],
									[
										3.061,
										0.395
									],
									[
										-0.362,
										-3.113
									],
									[
										-0.844,
										-0.845
									],
									[
										-5.948,
										1.68
									],
									[
										-4.203,
										4.531
									],
									[
										-0.402,
										6.099
									],
									[
										7.253,
										2.417
									],
									[
										1.355,
										-3.406
									],
									[
										-1.315,
										-1.81
									],
									[
										-5.511,
										1.088
									],
									[
										-3.533,
										4.367
									],
									[
										0.195,
										7.031
									],
									[
										5.769,
										4.024
									],
									[
										2.472,
										-0.019
									],
									[
										1.072,
										-2.228
									],
									[
										-1.583,
										-1.944
									],
									[
										-2.424,
										-0.639
									],
									[
										-4.257,
										7.616
									],
									[
										6.316,
										6.022
									],
									[
										2.637,
										-1.208
									],
									[
										-1.496,
										-2.496
									],
									[
										-2.893,
										0.316
									],
									[
										-2.212,
										1.892
									],
									[
										-0.927,
										3.55
									],
									[
										2.473,
										2.71
									]
								],
								o: [
									[
										6.373,
										2.623
									],
									[
										2.413,
										-2.024
									],
									[
										1.757,
										-5.8
									],
									[
										-1.419,
										-0.345
									],
									[
										-1.805,
										0.998
									],
									[
										0.397,
										2.024
									],
									[
										4.929,
										4.043
									],
									[
										5.767,
										-2.716
									],
									[
										1.252,
										-4.838
									],
									[
										-1.912,
										-2.422
									],
									[
										-3.109,
										-0.402
									],
									[
										0.138,
										1.187
									],
									[
										4.367,
										4.372
									],
									[
										5.948,
										-1.679
									],
									[
										4.157,
										-4.48
									],
									[
										0.503,
										-7.629
									],
									[
										-3.478,
										-1.159
									],
									[
										-0.826,
										2.079
									],
									[
										3.303,
										4.544
									],
									[
										5.511,
										-1.089
									],
									[
										4.423,
										-5.47
									],
									[
										-0.195,
										-7.031
									],
									[
										-2.027,
										-1.414
									],
									[
										-2.472,
										0.019
									],
									[
										-1.087,
										2.258
									],
									[
										1.582,
										1.944
									],
									[
										8.437,
										2.224
									],
									[
										4.257,
										-7.617
									],
									[
										-2.098,
										-2.001
									],
									[
										-2.645,
										1.213
									],
									[
										1.495,
										2.497
									],
									[
										2.892,
										-0.316
									],
									[
										2.788,
										-2.385
									],
									[
										0.926,
										-3.551
									],
									[
										0,
										0
									]
								],
								v: [
									[
										155.107,
										26.434
									],
									[
										174.284,
										22.087
									],
									[
										179.759,
										14.55
									],
									[
										171.698,
										0.45
									],
									[
										167.431,
										0.768
									],
									[
										165.247,
										6.125
									],
									[
										168.605,
										11.174
									],
									[
										186.637,
										13.021
									],
									[
										198.146,
										-1.482
									],
									[
										195.964,
										-15.777
									],
									[
										188.107,
										-20.228
									],
									[
										181.374,
										-15.649
									],
									[
										183.12,
										-12.598
									],
									[
										200.404,
										-8.883
									],
									[
										215.596,
										-19.099
									],
									[
										223.786,
										-35.098
									],
									[
										211.8,
										-52.728
									],
									[
										202.231,
										-49.982
									],
									[
										203.534,
										-43.686
									],
									[
										218.597,
										-38.425
									],
									[
										232.409,
										-47.474
									],
									[
										239.401,
										-66.919
									],
									[
										230.087,
										-85.004
									],
									[
										223.214,
										-87.454
									],
									[
										217.117,
										-83.941
									],
									[
										218.253,
										-76.909
									],
									[
										224.63,
										-73.166
									],
									[
										247.016,
										-82.674
									],
									[
										243.387,
										-106.723
									],
									[
										235.556,
										-109.098
									],
									[
										233.618,
										-101.608
									],
									[
										241.18,
										-98.275
									],
									[
										248.909,
										-102.043
									],
									[
										254.954,
										-111.038
									],
									[
										252.759,
										-121.366
									]
								],
								c: false
							}
						},
						nm: "Path 7",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								0.24313725490196078,
								0.5019607843137255,
								1,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 10,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 40,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 60.001,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 66,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 99,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 100,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 639,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 640,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 670,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 690.001,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 696,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									t: 729
								}
							]
						},
						w: {
							a: 0,
							k: 4.829
						},
						lc: 1,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 10,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 22,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 62,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 66,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 99,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 100,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 639,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 640,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 652,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 692,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 696,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 729
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 10,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 20,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 60.001,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 66,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 99,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 100,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 639,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 640,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 650,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 690.001,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 696,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 729
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 3,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								312.078,
								177.185
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 3,
				mn: "ADBE Vector Group"
			}
		],
		ip: 10,
		op: 450,
		st: 20,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 7,
		ty: 4,
		nm: "Fireworks_05",
		parent: 0,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					-41,
					-125.553,
					0
				]
			},
			a: {
				a: 0,
				k: [
					312.5,
					177.5,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										4.131,
										7.797
									],
									[
										-5.227,
										7.109
									],
									[
										-8.766,
										-1.006
									],
									[
										-2.056,
										-1.844
									],
									[
										1.011,
										-2.57
									],
									[
										2.071,
										-1.017
									],
									[
										11.297,
										8.656
									],
									[
										-0.667,
										11.76
									],
									[
										-11.746,
										0.887
									],
									[
										-2.541,
										-1.671
									],
									[
										0.36,
										-3.02
									],
									[
										2.745,
										-1.724
									],
									[
										12.069,
										6.836
									],
									[
										4.344,
										10.921
									],
									[
										-2.995,
										9.212
									],
									[
										-2.692,
										2.073
									],
									[
										-2.84,
										0.366
									],
									[
										-3.616,
										-4.508
									],
									[
										6.115,
										-4.567
									],
									[
										7.593,
										0.777
									],
									[
										7.683,
										3.722
									],
									[
										3.783,
										5.39
									],
									[
										0.942,
										5.093
									],
									[
										-3.631,
										7.488
									],
									[
										-8.288,
										0.753
									]
								],
								o: [
									[
										-8.772,
										0.947
									],
									[
										-4.13,
										-7.797
									],
									[
										5.226,
										-7.109
									],
									[
										2.743,
										0.315
									],
									[
										2.056,
										1.843
									],
									[
										-0.844,
										2.146
									],
									[
										-12.773,
										6.277
									],
									[
										-9.35,
										-7.164
									],
									[
										0.667,
										-11.759
									],
									[
										3.033,
										-0.229
									],
									[
										2.541,
										1.671
									],
									[
										-0.384,
										3.219
									],
									[
										-11.744,
										7.379
									],
									[
										-10.227,
										-5.792
									],
									[
										-3.581,
										-9.002
									],
									[
										1.05,
										-3.231
									],
									[
										2.268,
										-1.747
									],
									[
										5.732,
										-0.739
									],
									[
										4.777,
										5.954
									],
									[
										-6.116,
										4.567
									],
									[
										-8.493,
										-0.868
									],
									[
										-5.926,
										-2.871
									],
									[
										-2.976,
										-4.239
									],
									[
										-1.513,
										-8.184
									],
									[
										3.631,
										-7.489
									],
									[
										0,
										0
									]
								],
								v: [
									[
										21.947,
										19.676
									],
									[
										-0.004,
										7.853
									],
									[
										1.987,
										-17.173
									],
									[
										25.207,
										-27.138
									],
									[
										32.799,
										-24.171
									],
									[
										34.978,
										-16.7
									],
									[
										29.978,
										-12.152
									],
									[
										-10.184,
										-17.613
									],
									[
										-25.547,
										-47.891
									],
									[
										-3.824,
										-71.879
									],
									[
										4.928,
										-69.965
									],
									[
										8.88,
										-62.255
									],
									[
										3.165,
										-54.794
									],
									[
										-36.376,
										-57.061
									],
									[
										-59.814,
										-82.497
									],
									[
										-60.73,
										-110.966
									],
									[
										-55.446,
										-119.498
									],
									[
										-47.461,
										-122.373
									],
									[
										-31.596,
										-117.55
									],
									[
										-35.706,
										-97.459
									],
									[
										-57.634,
										-93.077
									],
									[
										-82.148,
										-100.034
									],
									[
										-97.524,
										-112.094
									],
									[
										-103.116,
										-126.461
									],
									[
										-100.635,
										-150.883
									],
									[
										-81.46,
										-165.113
									]
								],
								c: false
							}
						},
						nm: "Path 4",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								0.24313725490196078,
								0.5019607843137255,
								1,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 8,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 34.667,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 51.334,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 64,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 97,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 98,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 637,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 638,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 664.667,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 681.334,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 694,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									t: 727
								}
							]
						},
						w: {
							a: 0,
							k: 4.829
						},
						lc: 1,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 8,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 19.666,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 53,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 64,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 97,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 98,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 637,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 638,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 649.666,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 683,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 694,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 727
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 8,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 18,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 51.334,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 64,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 97,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 98,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 637,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 638,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 648,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 681.334,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 694,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 727
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 3,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								312.078,
								177.185
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 3,
				mn: "ADBE Vector Group"
			}
		],
		ip: 8,
		op: 450,
		st: 18,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 8,
		ty: 4,
		nm: "Fireworks_04",
		parent: 0,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					-41,
					-125.553,
					0
				]
			},
			a: {
				a: 0,
				k: [
					312.5,
					177.5,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-0.913,
										5.269
									],
									[
										1.635,
										5.641
									],
									[
										2.07,
										9.641
									],
									[
										-1.235,
										6.159
									],
									[
										3.608,
										2.85
									],
									[
										2.872,
										6.752
									],
									[
										1.643,
										6.444
									],
									[
										3.337,
										2.11
									],
									[
										2.014,
										7.467
									],
									[
										0.352,
										3.318
									],
									[
										3.517,
										3.226
									],
									[
										3.39,
										3.021
									],
									[
										1.953,
										8.137
									]
								],
								o: [
									[
										-4.197,
										-3.313
									],
									[
										1.002,
										-5.787
									],
									[
										-2.745,
										-9.471
									],
									[
										-1.319,
										-6.142
									],
									[
										0.904,
										-4.508
									],
									[
										-5.759,
										-4.546
									],
									[
										-2.603,
										-6.119
									],
									[
										-0.976,
										-3.826
									],
									[
										-6.538,
										-4.133
									],
									[
										-0.869,
										-3.222
									],
									[
										-0.503,
										-4.746
									],
									[
										-3.347,
										-3.069
									],
									[
										-6.248,
										-5.568
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-57.252,
										23.762
									],
									[
										-62.715,
										9.49
									],
									[
										-58.964,
										-7.44
									],
									[
										-80.304,
										-26.391
									],
									[
										-74.597,
										-44.016
									],
									[
										-79.12,
										-56.32
									],
									[
										-97.537,
										-67.369
									],
									[
										-96.248,
										-86.954
									],
									[
										-103.868,
										-95.641
									],
									[
										-120.542,
										-110.88
									],
									[
										-121.281,
										-120.84
									],
									[
										-127.589,
										-133.348
									],
									[
										-138.641,
										-141.284
									],
									[
										-149.101,
										-163.655
									]
								],
								c: false
							}
						},
						nm: "Path 3",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 6,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 33.144,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 50.286,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 62,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 95,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 96,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 635,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 636,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 663.144,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 680.286,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 692,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									t: 725
								}
							]
						},
						w: {
							a: 0,
							k: 4.829
						},
						lc: 1,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 6,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 17.714,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 52,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 62,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 95,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 96,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 635,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 636,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 647.714,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 682,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 692,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 725
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 6,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 16,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 50.286,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 62,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 95,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 96,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 635,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 636,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 646,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 680.286,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 692,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 725
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 3,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								312.078,
								177.185
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 3,
				mn: "ADBE Vector Group"
			}
		],
		ip: 6,
		op: 450,
		st: 16,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 9,
		ty: 4,
		nm: "Fireworks_03",
		parent: 0,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					-41,
					-125.553,
					0
				]
			},
			a: {
				a: 0,
				k: [
					312.5,
					177.5,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										6.04,
										1.773
									],
									[
										1.254,
										-6.169
									],
									[
										-0.817,
										-1.005
									],
									[
										-1.139,
										2.006
									],
									[
										1.203,
										1.968
									],
									[
										4.066,
										-0.354
									],
									[
										1.495,
										-3.798
									],
									[
										3.934,
										-5.435
									],
									[
										5.091,
										0.029
									],
									[
										3.978,
										-3.177
									],
									[
										-1.497,
										-5.865
									],
									[
										2.314,
										-2.52
									],
									[
										2.526,
										-0.02
									],
									[
										4.235,
										-7.851
									],
									[
										6.161,
										-3.967
									],
									[
										5.996,
										-2.631
									],
									[
										6.393,
										-6.106
									],
									[
										8.746,
										-9.115
									],
									[
										2.019,
										-2.488
									],
									[
										7.167,
										-1.468
									]
								],
								o: [
									[
										-3.035,
										-5.515
									],
									[
										-6.041,
										-1.772
									],
									[
										-0.258,
										1.269
									],
									[
										1.455,
										1.789
									],
									[
										1.14,
										-2.005
									],
									[
										-2.128,
										-3.483
									],
									[
										-4.066,
										0.354
									],
									[
										-2.458,
										6.242
									],
									[
										-2.986,
										4.125
									],
									[
										-5.092,
										-0.03
									],
									[
										-4.729,
										3.778
									],
									[
										0.846,
										3.314
									],
									[
										-1.708,
										1.861
									],
									[
										-8.921,
										0.074
									],
									[
										-3.479,
										6.449
									],
									[
										-5.505,
										3.545
									],
									[
										-8.096,
										3.552
									],
									[
										-9.136,
										8.724
									],
									[
										-2.218,
										2.313
									],
									[
										-4.609,
										5.682
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-89.377,
										35.497
									],
									[
										-102.837,
										22.955
									],
									[
										-117.839,
										30.501
									],
									[
										-117.223,
										34.207
									],
									[
										-111.421,
										33.263
									],
									[
										-112.017,
										26.697
									],
									[
										-122.395,
										21.455
									],
									[
										-131.712,
										28.41
									],
									[
										-134.761,
										48.01
									],
									[
										-148.642,
										52.786
									],
									[
										-163.307,
										55.715
									],
									[
										-166.986,
										72.477
									],
									[
										-167.266,
										82.274
									],
									[
										-174.347,
										84.255
									],
									[
										-197.923,
										93.843
									],
									[
										-206.068,
										113.718
									],
									[
										-225.276,
										116.143
									],
									[
										-239.515,
										137.858
									],
									[
										-274.982,
										148.278
									],
									[
										-280.472,
										156.15
									],
									[
										-300.005,
										165.113
									]
								],
								c: false
							}
						},
						nm: "Path 2",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 4,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 33.524,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 53.048,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 60,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 93,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 94,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 633,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 634,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 663.524,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 683.048,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 690,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									t: 723
								}
							]
						},
						w: {
							a: 0,
							k: 4.829
						},
						lc: 1,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 4,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 15.952,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 55,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 60,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 93,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 94,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 633,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 634,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 645.952,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 685,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 690,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 723
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 4,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 14,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 53.048,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 60,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 93,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 94,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 633,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 634,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 644,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 683.048,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 690,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 723
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 3,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								312.078,
								177.185
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 3,
				mn: "ADBE Vector Group"
			}
		],
		ip: 4,
		op: 450,
		st: 14,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 10,
		ty: 4,
		nm: "Fireworks_02",
		parent: 0,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					-41,
					-125.553,
					0
				]
			},
			a: {
				a: 0,
				k: [
					312.5,
					177.5,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										-7.933,
										14.672
									],
									[
										0.349,
										16.675
									],
									[
										5.473,
										5.656
									],
									[
										4.908,
										1.164
									],
									[
										4.876,
										-2.608
									],
									[
										-1.549,
										-5.308
									],
									[
										-6.55,
										-0.009
									],
									[
										-1.872,
										0.928
									],
									[
										-0.997,
										4.469
									],
									[
										2.661,
										12.031
									],
									[
										2.233,
										3.641
									],
									[
										3.652,
										2.818
									],
									[
										8.412,
										2.835
									]
								],
								o: [
									[
										11.892,
										-11.695
									],
									[
										7.932,
										-14.672
									],
									[
										-0.166,
										-7.869
									],
									[
										-3.508,
										-3.625
									],
									[
										-5.381,
										-1.276
									],
									[
										-4.876,
										2.608
									],
									[
										1.834,
										6.288
									],
									[
										2.089,
										0.003
									],
									[
										4.103,
										-2.034
									],
									[
										2.684,
										-12.026
									],
									[
										-0.923,
										-4.171
									],
									[
										-2.412,
										-3.933
									],
									[
										-7.029,
										-5.423
									],
									[
										0,
										0
									]
								],
								v: [
									[
										119.191,
										30.962
									],
									[
										149.872,
										-8.329
									],
									[
										162.384,
										-56.202
									],
									[
										155.159,
										-78.093
									],
									[
										141.943,
										-85.036
									],
									[
										125.763,
										-83.813
									],
									[
										119.055,
										-70.028
									],
									[
										134.91,
										-60.892
									],
									[
										141.017,
										-62.022
									],
									[
										147.861,
										-73.389
									],
									[
										147.896,
										-110.061
									],
									[
										143.478,
										-122.026
									],
									[
										133.96,
										-131.966
									],
									[
										110.582,
										-144.469
									]
								],
								c: false
							}
						},
						nm: "Path 5",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.6509803921568628,
								0.22745098039215686,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 2,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 27.715,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 43.429,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 58,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 91,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 92,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 631,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 632,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 657.715,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 673.429,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 688,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									t: 721
								}
							]
						},
						w: {
							a: 0,
							k: 4.829
						},
						lc: 1,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 2,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 13.571,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 45,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 58,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 91,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 92,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 631,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 632,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 643.571,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 675,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 688,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 721
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 2,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 12,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 43.429,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 58,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 91,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 92,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 631,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 632,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 642,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 673.429,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 688,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 721
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 3,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								312.078,
								177.185
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 3,
				mn: "ADBE Vector Group"
			}
		],
		ip: 2,
		op: 450,
		st: 12,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 11,
		ty: 4,
		nm: "Fireworks_01",
		parent: 0,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					-41,
					-125.553,
					0
				]
			},
			a: {
				a: 0,
				k: [
					312.5,
					177.5,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										11.69,
										6.335
									],
									[
										-0.042,
										3.716
									],
									[
										-1.247,
										1.266
									],
									[
										-2.612,
										-1.139
									],
									[
										1.105,
										-2.627
									],
									[
										5.141,
										2.153
									],
									[
										1.829,
										8.959
									],
									[
										3.076,
										2.136
									],
									[
										3.312,
										2.666
									],
									[
										6.996,
										6.602
									],
									[
										3.62,
										1.755
									],
									[
										1.41,
										3.485
									],
									[
										2.977,
										4.448
									],
									[
										4.619,
										1.026
									],
									[
										4.136,
										2.297
									],
									[
										3.748,
										5.272
									],
									[
										6.456,
										0.411
									]
								],
								o: [
									[
										-11.36,
										6.845
									],
									[
										-3.267,
										-1.77
									],
									[
										0.02,
										-1.777
									],
									[
										2,
										-2.029
									],
									[
										2.611,
										1.139
									],
									[
										-2.791,
										6.636
									],
									[
										-9.286,
										-3.889
									],
									[
										-0.75,
										-3.67
									],
									[
										-3.493,
										-2.425
									],
									[
										-7.686,
										-6.189
									],
									[
										-2.926,
										-2.762
									],
									[
										-3.383,
										-1.641
									],
									[
										-2.008,
										-4.961
									],
									[
										-2.632,
										-3.932
									],
									[
										-4.619,
										-1.026
									],
									[
										-5.656,
										-3.142
									],
									[
										-3.749,
										-5.273
									],
									[
										0,
										0
									]
								],
								v: [
									[
										-87.104,
										119.435
									],
									[
										-125.246,
										120.525
									],
									[
										-131.776,
										112.185
									],
									[
										-129.676,
										107.427
									],
									[
										-121.832,
										105.665
									],
									[
										-118.75,
										112.73
									],
									[
										-140.586,
										115.83
									],
									[
										-152.583,
										96.072
									],
									[
										-157.893,
										86.484
									],
									[
										-169.572,
										81.55
									],
									[
										-177.838,
										56.291
									],
									[
										-188.771,
										51.385
									],
									[
										-196.302,
										43.331
									],
									[
										-200.687,
										27.987
									],
									[
										-212.76,
										21.213
									],
									[
										-226.362,
										17.374
									],
									[
										-239.172,
										3.039
									],
									[
										-254.425,
										-7.871
									]
								],
								c: false
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								0.6509803921568628,
								0.22745098039215686,
								1
							]
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 24.762,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 39.524,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 90,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_1_0p167_0"
									],
									t: 629,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 630,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.333
										],
										y: [
											0
										]
									},
									n: [
										"0p667_1_0p333_0"
									],
									t: 654.762,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 669.524,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 686,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									t: 719
								}
							]
						},
						w: {
							a: 0,
							k: 4.829
						},
						lc: 1,
						lj: 1,
						ml: 10,
						nm: "Stroke 1",
						mn: "ADBE Vector Graphic - Stroke"
					},
					{
						ty: "tm",
						s: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 11.477,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 41,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 90,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 629,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 630,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.667
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p667_1_0p167_0p167"
									],
									t: 641.477,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 671,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 686,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 719
								}
							],
							ix: 1
						},
						e: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 10,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 39.524,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_1_0p167_0p167"
									],
									t: 90,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 629,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 630,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 640,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 669.524,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 686,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									t: 719
								}
							],
							ix: 2
						},
						o: {
							a: 0,
							k: 0,
							ix: 3
						},
						m: 1,
						ix: 3,
						nm: "Trim Paths 1",
						mn: "ADBE Vector Filter - Trim"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								312.078,
								177.185
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 0,
							k: 0,
							ix: 6
						},
						o: {
							a: 0,
							k: 100,
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 3,
				mn: "ADBE Vector Group"
			}
		],
		ip: 0,
		op: 450,
		st: 10,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 12,
		ty: 4,
		nm: "Fireworks",
		parent: 0,
		ks: {
			o: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0.833
							],
							y: [
								0.833
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0p833_0p833_0p167_0p167"
						],
						t: 53,
						s: [
							100
						],
						e: [
							0
						]
					},
					{
						i: {
							x: [
								0.833
							],
							y: [
								0.833
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0p833_0p833_0p167_0p167"
						],
						t: 56,
						s: [
							0
						],
						e: [
							0
						]
					},
					{
						i: {
							x: [
								0.833
							],
							y: [
								0.833
							]
						},
						o: {
							x: [
								0.167
							],
							y: [
								0.167
							]
						},
						n: [
							"0p833_0p833_0p167_0p167"
						],
						t: 90,
						s: [
							0
						],
						e: [
							100
						]
					},
					{
						t: 93
					}
				]
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 1,
				k: [
					{
						i: {
							x: 0.833,
							y: 0.833
						},
						o: {
							x: 0.333,
							y: 0
						},
						n: "0p833_0p833_0p333_0",
						t: 0,
						s: [
							7.784,
							-100.71,
							0
						],
						e: [
							7.784,
							99.29,
							0
						],
						to: [
							0,
							33.3333320617676,
							0
						],
						ti: [
							0,
							-33.3333320617676,
							0
						]
					},
					{
						i: {
							x: 0.833,
							y: 0.833
						},
						o: {
							x: 0.167,
							y: 0.167
						},
						n: "0p833_0p833_0p167_0p167",
						t: 56,
						s: [
							7.784,
							99.29,
							0
						],
						e: [
							7.784,
							99.29,
							0
						],
						to: [
							0,
							0,
							0
						],
						ti: [
							0,
							0,
							0
						]
					},
					{
						i: {
							x: 0.667,
							y: 1
						},
						o: {
							x: 0.167,
							y: 0.167
						},
						n: "0p667_1_0p167_0p167",
						t: 89,
						s: [
							7.784,
							99.29,
							0
						],
						e: [
							7.784,
							-100.71,
							0
						],
						to: [
							0,
							-33.3333320617676,
							0
						],
						ti: [
							0,
							33.3333320617676,
							0
						]
					},
					{
						t: 90
					}
				]
			},
			a: {
				a: 0,
				k: [
					225.631,
					140.499,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										1.091,
										10.526
									],
									[
										-8.034,
										1.938
									],
									[
										-1.091,
										-10.526
									],
									[
										8.034,
										-1.938
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								0.24313725490196078,
								0.5019607843137255,
								1,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										218.951,
										244.775
									],
									e: [
										-64.365,
										214.365
									],
									to: [
										-47.2194023132324,
										-5.068359375
									],
									ti: [
										47.2194023132324,
										5.068359375
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 50,
									s: [
										-64.365,
										214.365
									],
									e: [
										-64.365,
										214.365
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										-64.365,
										214.365
									],
									e: [
										-64.365,
										214.365
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										-64.365,
										214.365
									],
									e: [
										218.951,
										244.775
									],
									to: [
										47.2194023132324,
										5.068359375
									],
									ti: [
										-47.2194023132324,
										-5.068359375
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										-1996
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 50,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										-1996
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 15.834,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 50,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 1",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										10.032,
										-3.369
									],
									[
										3.65,
										7.414
									],
									[
										-10.032,
										3.37
									],
									[
										-3.65,
										-7.414
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.6509803921568628,
								0.22745098039215686,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										217.823,
										241.687
									],
									e: [
										62.624,
										26.913
									],
									to: [
										-25.8665370941162,
										-35.7955741882324
									],
									ti: [
										25.8665370941162,
										35.7955741882324
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 33,
									s: [
										62.624,
										26.913
									],
									e: [
										62.624,
										26.913
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										62.624,
										26.913
									],
									e: [
										62.624,
										26.913
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										62.624,
										26.913
									],
									e: [
										217.823,
										241.687
									],
									to: [
										25.8665370941162,
										35.7955741882324
									],
									ti: [
										-25.8665370941162,
										-35.7955741882324
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										1909
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 33,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										1909
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 10.45,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 33,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 2",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										5.439,
										-9.079
									],
									[
										7.591,
										3.266
									],
									[
										-5.438,
										9.079
									],
									[
										-7.591,
										-3.265
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										216.419,
										243.707
									],
									e: [
										310.345,
										5.738
									],
									to: [
										15.654296875,
										-39.6614570617676
									],
									ti: [
										-15.654296875,
										39.6614570617676
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 44,
									s: [
										310.345,
										5.738
									],
									e: [
										310.345,
										5.738
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										310.345,
										5.738
									],
									e: [
										310.345,
										5.738
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										310.345,
										5.738
									],
									e: [
										216.419,
										243.707
									],
									to: [
										-15.654296875,
										39.6614570617676
									],
									ti: [
										15.654296875,
										-39.6614570617676
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										-1082
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 44,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										-1082
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 13.934,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 44,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 3",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										10.032,
										-3.369
									],
									[
										3.649,
										7.414
									],
									[
										-10.032,
										3.37
									],
									[
										-3.65,
										-7.414
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.2,
								0.6,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										220.852,
										243.393
									],
									e: [
										503.969,
										162.999
									],
									to: [
										47.1861991882324,
										-13.3990888595581
									],
									ti: [
										-47.1861991882324,
										13.3990888595581
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										503.969,
										162.999
									],
									e: [
										503.969,
										162.999
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										503.969,
										162.999
									],
									e: [
										220.852,
										243.393
									],
									to: [
										-47.1861991882324,
										13.3990888595581
									],
									ti: [
										47.1861991882324,
										-13.3990888595581
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										-1636
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0
										],
										y: [
											0
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_0_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										-1636
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 17.733,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 4",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										5.635,
										-8.958
									],
									[
										7.518,
										3.43
									],
									[
										-5.635,
										8.958
									],
									[
										-7.518,
										-3.431
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								0.24313725490196078,
								0.5019607843137255,
								1,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										216.978,
										239.574
									],
									e: [
										167.638,
										-20.883
									],
									to: [
										-8.22330760955811,
										-43.4095039367676
									],
									ti: [
										8.22330760955811,
										43.4095039367676
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 34,
									s: [
										167.638,
										-20.883
									],
									e: [
										167.638,
										-20.883
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										167.638,
										-20.883
									],
									e: [
										167.638,
										-20.883
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										167.638,
										-20.883
									],
									e: [
										216.978,
										239.574
									],
									to: [
										8.22330760955811,
										43.4095039367676
									],
									ti: [
										-8.22330760955811,
										-43.4095039367676
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										791
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 34,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										791
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 10.767,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 34,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 5",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										12.714,
										-4.27
									],
									[
										4.625,
										9.396
									],
									[
										-12.714,
										4.27
									],
									[
										-4.625,
										-9.396
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								0.6509803921568628,
								0.22745098039215686,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										216.807,
										247.359
									],
									e: [
										306.713,
										-26.422
									],
									to: [
										14.984375,
										-45.6302070617676
									],
									ti: [
										-14.984375,
										45.6302070617676
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 35,
									s: [
										306.713,
										-26.422
									],
									e: [
										306.713,
										-26.422
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										306.713,
										-26.422
									],
									e: [
										306.713,
										-26.422
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										306.713,
										-26.422
									],
									e: [
										216.807,
										247.359
									],
									to: [
										-14.984375,
										45.6302070617676
									],
									ti: [
										14.984375,
										-45.6302070617676
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										-1349
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 35,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										-1349
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 11.084,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 35,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 6",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										16.462,
										-5.529
									],
									[
										5.988,
										12.166
									],
									[
										-16.462,
										5.529
									],
									[
										-5.99,
										-12.166
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								0.4,
								0.4,
								0.4,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										220.337,
										243.096
									],
									e: [
										496.388,
										105.69
									],
									to: [
										46.0084648132324,
										-22.9010410308838
									],
									ti: [
										-46.0084648132324,
										22.9010410308838
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 50,
									s: [
										496.388,
										105.69
									],
									e: [
										496.388,
										105.69
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										496.388,
										105.69
									],
									e: [
										496.388,
										105.69
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										496.388,
										105.69
									],
									e: [
										220.337,
										243.096
									],
									to: [
										-46.0084648132324,
										22.9010410308838
									],
									ti: [
										46.0084648132324,
										-22.9010410308838
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										1085
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 50,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										1085
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 15.834,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 50,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 7",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										7.21,
										-15.799
									],
									[
										12.976,
										3.938
									],
									[
										-7.209,
										15.799
									],
									[
										-12.976,
										-3.938
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								0.4,
								0.4,
								0.4,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										216.862,
										239.004
									],
									e: [
										502.475,
										218.079
									],
									to: [
										47.6022148132324,
										-3.48763012886047
									],
									ti: [
										-47.6022148132324,
										3.48763012886047
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 28,
									s: [
										502.475,
										218.079
									],
									e: [
										502.475,
										218.079
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										502.475,
										218.079
									],
									e: [
										502.475,
										218.079
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										502.475,
										218.079
									],
									e: [
										216.862,
										239.004
									],
									to: [
										-47.6022148132324,
										3.48763012886047
									],
									ti: [
										47.6022148132324,
										-3.48763012886047
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										544
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 28,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										544
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 8.867,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 28,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 8",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										11.889,
										12.659
									],
									[
										-8.563,
										10.515
									],
									[
										-11.889,
										-12.659
									],
									[
										8.562,
										-10.516
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								0.4,
								0.4,
								0.4,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										219.276,
										237.668
									],
									e: [
										218.221,
										-27.157
									],
									to: [
										-0.17578125,
										-44.1373710632324
									],
									ti: [
										0.17578125,
										44.1373710632324
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 42,
									s: [
										218.221,
										-27.157
									],
									e: [
										218.221,
										-27.157
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										218.221,
										-27.157
									],
									e: [
										218.221,
										-27.157
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										218.221,
										-27.157
									],
									e: [
										219.276,
										237.668
									],
									to: [
										0.17578125,
										44.1373710632324
									],
									ti: [
										-0.17578125,
										-44.1373710632324
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										-1017
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 42,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										-1017
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 13.301,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 42,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 9",
				np: 2,
				mn: "ADBE Vector Group"
			},
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								o: [
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									],
									[
										0,
										0
									]
								],
								v: [
									[
										11.889,
										12.66
									],
									[
										-8.562,
										10.516
									],
									[
										-11.889,
										-12.66
									],
									[
										8.562,
										-10.515
									]
								],
								c: true
							}
						},
						nm: "Path 1",
						mn: "ADBE Vector Shape - Group"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								0.4,
								0.4,
								0.4,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						nm: "Fill 1",
						mn: "ADBE Vector Graphic - Fill"
					},
					{
						ty: "tr",
						p: {
							a: 1,
							k: [
								{
									i: {
										x: 0,
										y: 1
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_1_0p167_0p167",
									t: 0,
									s: [
										219.081,
										240.186
									],
									e: [
										-48.224,
										-10.22
									],
									to: [
										-44.55078125,
										-41.734375
									],
									ti: [
										44.55078125,
										41.734375
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 25,
									s: [
										-48.224,
										-10.22
									],
									e: [
										-48.224,
										-10.22
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0,
										y: 0
									},
									o: {
										x: 0.167,
										y: 0.167
									},
									n: "0_0_0p167_0p167",
									t: 56,
									s: [
										-48.224,
										-10.22
									],
									e: [
										-48.224,
										-10.22
									],
									to: [
										0,
										0
									],
									ti: [
										0,
										0
									]
								},
								{
									i: {
										x: 0.833,
										y: 0.833
									},
									o: {
										x: 0.167,
										y: 0
									},
									n: "0p833_0p833_0p167_0",
									t: 89,
									s: [
										-48.224,
										-10.22
									],
									e: [
										219.081,
										240.186
									],
									to: [
										44.55078125,
										41.734375
									],
									ti: [
										-44.55078125,
										-41.734375
									]
								},
								{
									t: 90
								}
							],
							ix: 2
						},
						a: {
							a: 0,
							k: [
								0,
								0
							],
							ix: 1
						},
						s: {
							a: 0,
							k: [
								100,
								100
							],
							ix: 3
						},
						r: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0
										],
										y: [
											1
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0_1_0p167_0p167"
									],
									t: 0,
									s: [
										1408
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 25,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0
										]
									},
									n: [
										"0p833_0p833_0p167_0"
									],
									t: 89,
									s: [
										0
									],
									e: [
										1408
									]
								},
								{
									t: 90
								}
							],
							ix: 6
						},
						o: {
							a: 1,
							k: [
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 0,
									s: [
										100
									],
									e: [
										100
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 7.917,
									s: [
										100
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 25,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 56,
									s: [
										0
									],
									e: [
										0
									]
								},
								{
									i: {
										x: [
											0.833
										],
										y: [
											0.833
										]
									},
									o: {
										x: [
											0.167
										],
										y: [
											0.167
										]
									},
									n: [
										"0p833_0p833_0p167_0p167"
									],
									t: 89,
									s: [
										0
									],
									e: [
										100
									]
								},
								{
									t: 90
								}
							],
							ix: 7
						},
						sk: {
							a: 0,
							k: 0,
							ix: 4
						},
						sa: {
							a: 0,
							k: 0,
							ix: 5
						},
						nm: "Transform"
					}
				],
				nm: "Group 10",
				np: 2,
				mn: "ADBE Vector Group"
			}
		],
		ip: 0,
		op: 450,
		st: 0,
		bm: 0,
		sr: 1
	},
	{
		ddd: 0,
		ind: 13,
		ty: 1,
		nm: "White Solid 1",
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					400,
					398,
					0
				]
			},
			a: {
				a: 0,
				k: [
					400,
					400,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		sw: 800,
		sh: 800,
		sc: "",
		ip: 0,
		op: 0,
		st: 0,
		bm: 0,
		sr: 1
	}
];
var confettie = {
	v: v,
	fr: fr,
	ip: ip,
	op: op,
	w: w,
	h: h,
	ddd: ddd,
	assets: assets,
	layers: layers
};

function Mint(_a) {
    _a.connectButtonRef;
    var _b = React.useState(false), isAnimating = _b[0], setIsAnimating = _b[1];
    var _c = React.useState(0), count = _c[0], setCount = _c[1];
    var _d = React.useState(), intervalID = _d[0], setIntervalID = _d[1];
    var _e = React.useState(false), isSigning = _e[0], setIsSigning = _e[1];
    // const { address: walletAddress } = useAccount();
    // const { signMessageAsync } = useSignMessage();
    // const { data: signer } = useSigner();
    // const signRequest = async () => {
    //   if (!signer) return;
    //   try {
    //     const messageObject = new SiweMessage({
    //       domain: window.location.host,
    //       address: walletAddress,
    //       statement: `You just supported this author with your time and collected their dPage! Thanks <3`,
    //       uri: window.location.origin,
    //       version: "1",
    //     });
    //     const signature = await signMessageAsync({
    //       message: messageObject.prepareMessage(),
    //     });
    //     const message = messageObject.prepareMessage();
    //     console.log({ message, signature });
    //     setIsSigning(false);
    //   } catch (error: any) {
    //     console.log(error);
    //     setIsSigning(false);
    //     setIsAnimating(false);
    //   }
    // };
    var handleMouseEnter = function () {
        // if (!walletAddress) {
        //   connectButtonRef?.current?.click();
        //   return;
        // }
        setIsAnimating(true);
        var incrementInterval = (6 * 1000) / 60;
        var currentCount = count;
        var increment = function () {
            if (currentCount < 60) {
                if (!isSigning) {
                    setCount(currentCount + 1);
                    currentCount += 1;
                }
            }
            else if (currentCount === 60) {
                setIsSigning(true);
                clearInterval(intervalId);
                setTimeout(function () {
                    // signRequest();
                    console.log("SIGN");
                    currentCount = 0;
                    setCount(0);
                }, 1750);
            }
        };
        var intervalId = setInterval(increment, incrementInterval);
        setIntervalID(intervalId);
    };
    var handleMouseLeave = function () {
        if (!isSigning) {
            setIsAnimating(false);
            setIsSigning(true);
            // signRequest();
            console.log("SIGN");
            clearInterval(intervalID);
            setCount(0);
        }
    };
    return (React.createElement(Tooltip$1, { title: count === 0
            ? "Support the author with your time pressed on this heart on-chain"
            : "+".concat(count) },
        React.createElement("div", { onMouseUp: handleMouseLeave, onMouseDown: handleMouseEnter },
            React.createElement("div", { id: "confettie" }, count === 60 && React.createElement(Lottie, { loop: false, animationData: confettie })),
            React.createElement("div", { className: styles$1.frame },
                React.createElement("div", { className: clx(styles$1.heart, isAnimating && styles$1.animate) })))));
}

exports.Mint = Mint;
//# sourceMappingURL=index.ts.map
